{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultNodeModel = void 0;\n\nconst _ = require(\"lodash\");\n\nconst react_diagrams_core_1 = require(\"@projectstorm/react-diagrams-core\");\n\nconst DefaultPortModel_1 = require(\"../port/DefaultPortModel\");\n\nclass DefaultNodeModel extends react_diagrams_core_1.NodeModel {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let color = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (typeof options === 'string') {\n      options = {\n        name: options,\n        color: color\n      };\n    }\n\n    super(Object.assign({\n      type: 'default',\n      name: 'Untitled',\n      color: 'rgb(0,192,255)'\n    }, options));\n    this.portsOut = [];\n    this.portsIn = [];\n  }\n\n  doClone(lookupTable, clone) {\n    clone.portsIn = [];\n    clone.portsOut = [];\n    super.doClone(lookupTable, clone);\n  }\n\n  removePort(port) {\n    super.removePort(port);\n\n    if (port.getOptions().in) {\n      this.portsIn.splice(this.portsIn.indexOf(port), 1);\n    } else {\n      this.portsOut.splice(this.portsOut.indexOf(port), 1);\n    }\n  }\n\n  addPort(port) {\n    super.addPort(port);\n\n    if (port.getOptions().in) {\n      if (this.portsIn.indexOf(port) === -1) {\n        this.portsIn.push(port);\n      }\n    } else {\n      if (this.portsOut.indexOf(port) === -1) {\n        this.portsOut.push(port);\n      }\n    }\n\n    return port;\n  }\n\n  addInPort(label) {\n    let after = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const p = new DefaultPortModel_1.DefaultPortModel({\n      in: true,\n      name: label,\n      label: label,\n      alignment: react_diagrams_core_1.PortModelAlignment.LEFT\n    });\n\n    if (!after) {\n      this.portsIn.splice(0, 0, p);\n    }\n\n    return this.addPort(p);\n  }\n\n  addOutPort(label) {\n    let after = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const p = new DefaultPortModel_1.DefaultPortModel({\n      in: false,\n      name: label,\n      label: label,\n      alignment: react_diagrams_core_1.PortModelAlignment.RIGHT\n    });\n\n    if (!after) {\n      this.portsOut.splice(0, 0, p);\n    }\n\n    return this.addPort(p);\n  }\n\n  deserialize(event) {\n    super.deserialize(event);\n    this.options.name = event.data.name;\n    this.options.color = event.data.color;\n    this.portsIn = _.map(event.data.portsInOrder, id => {\n      return this.getPortFromID(id);\n    });\n    this.portsOut = _.map(event.data.portsOutOrder, id => {\n      return this.getPortFromID(id);\n    });\n  }\n\n  serialize() {\n    return Object.assign(Object.assign({}, super.serialize()), {\n      name: this.options.name,\n      color: this.options.color,\n      portsInOrder: _.map(this.portsIn, port => {\n        return port.getID();\n      }),\n      portsOutOrder: _.map(this.portsOut, port => {\n        return port.getID();\n      })\n    });\n  }\n\n  getInPorts() {\n    return this.portsIn;\n  }\n\n  getOutPorts() {\n    return this.portsOut;\n  }\n\n}\n\nexports.DefaultNodeModel = DefaultNodeModel;","map":{"version":3,"mappings":"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","names":["DefaultNodeModel","react_diagrams_core_1","constructor","options","color","name","Object","type","portsOut","portsIn","doClone","lookupTable","clone","removePort","port","getOptions","in","splice","indexOf","addPort","push","addInPort","label","after","p","DefaultPortModel_1","alignment","LEFT","addOutPort","RIGHT","deserialize","event","data","_","map","portsInOrder","id","getPortFromID","portsOutOrder","serialize","getID","getInPorts","getOutPorts","exports"],"sources":["C:\\Users\\nairr\\app-ui\\app-ui\\node_modules\\@projectstorm\\react-diagrams-defaults\\src\\node\\DefaultNodeModel.ts"],"sourcesContent":["import * as _ from 'lodash';\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\nimport { DefaultPortModel } from '../port/DefaultPortModel';\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\n\tname?: string;\n\tcolor?: string;\n}\n\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\n\tOPTIONS: DefaultNodeModelOptions;\n}\n\nexport class DefaultNodeModel extends NodeModel<DefaultNodeModelGenerics> {\n\tprotected portsIn: DefaultPortModel[];\n\tprotected portsOut: DefaultPortModel[];\n\n\tconstructor(name: string, color: string);\n\tconstructor(options?: DefaultNodeModelOptions);\n\tconstructor(options: any = {}, color?: string) {\n\t\tif (typeof options === 'string') {\n\t\t\toptions = {\n\t\t\t\tname: options,\n\t\t\t\tcolor: color\n\t\t\t};\n\t\t}\n\t\tsuper({\n\t\t\ttype: 'default',\n\t\t\tname: 'Untitled',\n\t\t\tcolor: 'rgb(0,192,255)',\n\t\t\t...options\n\t\t});\n\t\tthis.portsOut = [];\n\t\tthis.portsIn = [];\n\t}\n\n\tdoClone(lookupTable: {}, clone: any): void {\n\t\tclone.portsIn = [];\n\t\tclone.portsOut = [];\n\t\tsuper.doClone(lookupTable, clone);\n\t}\n\n\tremovePort(port: DefaultPortModel): void {\n\t\tsuper.removePort(port);\n\t\tif (port.getOptions().in) {\n\t\t\tthis.portsIn.splice(this.portsIn.indexOf(port), 1);\n\t\t} else {\n\t\t\tthis.portsOut.splice(this.portsOut.indexOf(port), 1);\n\t\t}\n\t}\n\n\taddPort<T extends DefaultPortModel>(port: T): T {\n\t\tsuper.addPort(port);\n\t\tif (port.getOptions().in) {\n\t\t\tif (this.portsIn.indexOf(port) === -1) {\n\t\t\t\tthis.portsIn.push(port);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.portsOut.indexOf(port) === -1) {\n\t\t\t\tthis.portsOut.push(port);\n\t\t\t}\n\t\t}\n\t\treturn port;\n\t}\n\n\taddInPort(label: string, after = true): DefaultPortModel {\n\t\tconst p = new DefaultPortModel({\n\t\t\tin: true,\n\t\t\tname: label,\n\t\t\tlabel: label,\n\t\t\talignment: PortModelAlignment.LEFT\n\t\t});\n\t\tif (!after) {\n\t\t\tthis.portsIn.splice(0, 0, p);\n\t\t}\n\t\treturn this.addPort(p);\n\t}\n\n\taddOutPort(label: string, after = true): DefaultPortModel {\n\t\tconst p = new DefaultPortModel({\n\t\t\tin: false,\n\t\t\tname: label,\n\t\t\tlabel: label,\n\t\t\talignment: PortModelAlignment.RIGHT\n\t\t});\n\t\tif (!after) {\n\t\t\tthis.portsOut.splice(0, 0, p);\n\t\t}\n\t\treturn this.addPort(p);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.name = event.data.name;\n\t\tthis.options.color = event.data.color;\n\t\tthis.portsIn = _.map(event.data.portsInOrder, (id) => {\n\t\t\treturn this.getPortFromID(id);\n\t\t}) as DefaultPortModel[];\n\t\tthis.portsOut = _.map(event.data.portsOutOrder, (id) => {\n\t\t\treturn this.getPortFromID(id);\n\t\t}) as DefaultPortModel[];\n\t}\n\n\tserialize(): any {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tname: this.options.name,\n\t\t\tcolor: this.options.color,\n\t\t\tportsInOrder: _.map(this.portsIn, (port) => {\n\t\t\t\treturn port.getID();\n\t\t\t}),\n\t\t\tportsOutOrder: _.map(this.portsOut, (port) => {\n\t\t\t\treturn port.getID();\n\t\t\t})\n\t\t};\n\t}\n\n\tgetInPorts(): DefaultPortModel[] {\n\t\treturn this.portsIn;\n\t}\n\n\tgetOutPorts(): DefaultPortModel[] {\n\t\treturn this.portsOut;\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}