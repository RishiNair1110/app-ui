{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nairr\\\\app-ui\\\\app-ui\\\\src\\\\Demo.jsx\";\nimport createEngine, { DefaultLinkModel, DefaultNodeModel, DiagramModel } from '@projectstorm/react-diagrams';\nimport \"./app.css\";\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Architecture = () => {\n  const engine = createEngine();\n  const node1 = new DefaultNodeModel({\n    name: 'Source',\n    color: 'rgb(0,255,0)'\n  });\n  node1.setPosition(100, 100);\n  let port1 = node1.addOutPort(' ');\n  const node2 = new DefaultNodeModel({\n    name: 'Destination',\n    color: 'rgb(255,0,0)'\n  });\n  node2.setPosition(400, 100);\n  let port2 = node2.addInPort(' '); // const link = port1.link < DefaultLinkModel > (port2);\n\n  const link = new DefaultLinkModel();\n  link.setSourcePort(port1);\n  link.setTargetPort(port2);\n  console.log(link);\n  const model = new DiagramModel();\n  model.addAll(node1, node2, link);\n  engine.setModel(model);\n  return /*#__PURE__*/_jsxDEV(CanvasWidget, {\n    className: \"srd-demo-canvas\",\n    engine: engine\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Architecture;\n\nfunction Demo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Demo\",\n    children: /*#__PURE__*/_jsxDEV(Architecture, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Demo;\nexport default Demo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Architecture\");\n$RefreshReg$(_c2, \"Demo\");","map":{"version":3,"sources":["C:/Users/nairr/app-ui/app-ui/src/Demo.jsx"],"names":["createEngine","DefaultLinkModel","DefaultNodeModel","DiagramModel","CanvasWidget","Architecture","engine","node1","name","color","setPosition","port1","addOutPort","node2","port2","addInPort","link","setSourcePort","setTargetPort","console","log","model","addAll","setModel","Demo"],"mappings":";AAAA,OAAOA,YAAP,IACIC,gBADJ,EAEIC,gBAFJ,EAGIC,YAHJ,QAIO,8BAJP;AAKA,OAAO,WAAP;AACA,SACIC,YADJ,QAEO,iCAFP;;;AAKA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAMC,MAAM,GAAGN,YAAY,EAA3B;AAEA,QAAMO,KAAK,GAAG,IAAIL,gBAAJ,CAAqB;AAC/BM,IAAAA,IAAI,EAAE,QADyB;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAArB,CAAd;AAIAF,EAAAA,KAAK,CAACG,WAAN,CAAkB,GAAlB,EAAuB,GAAvB;AACA,MAAIC,KAAK,GAAGJ,KAAK,CAACK,UAAN,CAAiB,GAAjB,CAAZ;AAEA,QAAMC,KAAK,GAAG,IAAIX,gBAAJ,CAAqB;AAC/BM,IAAAA,IAAI,EAAE,aADyB;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAArB,CAAd;AAIAI,EAAAA,KAAK,CAACH,WAAN,CAAkB,GAAlB,EAAuB,GAAvB;AACA,MAAII,KAAK,GAAGD,KAAK,CAACE,SAAN,CAAgB,GAAhB,CAAZ,CAfuB,CAiBvB;;AACA,QAAMC,IAAI,GAAG,IAAIf,gBAAJ,EAAb;AACAe,EAAAA,IAAI,CAACC,aAAL,CAAmBN,KAAnB;AACAK,EAAAA,IAAI,CAACE,aAAL,CAAmBJ,KAAnB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,QAAMK,KAAK,GAAG,IAAIlB,YAAJ,EAAd;AACAkB,EAAAA,KAAK,CAACC,MAAN,CAAaf,KAAb,EAAoBM,KAApB,EAA2BG,IAA3B;AACAV,EAAAA,MAAM,CAACiB,QAAP,CAAgBF,KAAhB;AAEA,sBAAO,QAAC,YAAD;AAAc,IAAA,SAAS,EAAC,iBAAxB;AAA0C,IAAA,MAAM,EAAEf;AAAlD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA5BD;;KAAMD,Y;;AA8BN,SAASmB,IAAT,GAAgB;AACZ,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MANQA,I;AAOT,eAAeA,IAAf","sourcesContent":["import createEngine, {\r\n    DefaultLinkModel,\r\n    DefaultNodeModel,\r\n    DiagramModel\r\n} from '@projectstorm/react-diagrams';\r\nimport \"./app.css\";\r\nimport {\r\n    CanvasWidget\r\n} from '@projectstorm/react-canvas-core';\r\n\r\n\r\nconst Architecture = () => {\r\n    const engine = createEngine();\r\n\r\n    const node1 = new DefaultNodeModel({\r\n        name: 'Source',\r\n        color: 'rgb(0,255,0)',\r\n    });\r\n    node1.setPosition(100, 100);\r\n    let port1 = node1.addOutPort(' ');\r\n\r\n    const node2 = new DefaultNodeModel({\r\n        name: 'Destination',\r\n        color: 'rgb(255,0,0)',\r\n    });\r\n    node2.setPosition(400, 100);\r\n    let port2 = node2.addInPort(' ');\r\n\r\n    // const link = port1.link < DefaultLinkModel > (port2);\r\n    const link = new DefaultLinkModel();\r\n    link.setSourcePort(port1);\r\n    link.setTargetPort(port2);\r\n    console.log(link);\r\n\r\n    const model = new DiagramModel();\r\n    model.addAll(node1, node2, link);\r\n    engine.setModel(model);\r\n\r\n    return <CanvasWidget className='srd-demo-canvas' engine={engine} />;\r\n};\r\n\r\nfunction Demo() {\r\n    return (\r\n        <div className='Demo'>\r\n            <Architecture />\r\n        </div>\r\n    )\r\n}\r\nexport default Demo"]},"metadata":{},"sourceType":"module"}