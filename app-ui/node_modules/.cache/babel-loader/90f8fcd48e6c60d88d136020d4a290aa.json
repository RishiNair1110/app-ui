{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractFactory = void 0;\n/**\n * Base factory for all the different types of entities.\n * Gets registered with the engine, and is used to generate models\n */\n\nclass AbstractFactory {\n  constructor(type) {\n    this.type = type;\n  }\n\n  setDiagramEngine(engine) {\n    this.engine = engine;\n  }\n\n  setFactoryBank(bank) {\n    this.bank = bank;\n  }\n\n  getType() {\n    return this.type;\n  }\n\n}\n\nexports.AbstractFactory = AbstractFactory;","map":{"version":3,"mappings":";;;;;;AAGA;;;;;AAIA,MAAsBA,eAAtB,CAAqC;AAWpCC,cAAYC,IAAZ,EAAwB;AACvB,SAAKA,IAAL,GAAYA,IAAZ;AACA;;AAEDC,kBAAgB,CAACC,MAAD,EAAU;AACzB,SAAKA,MAAL,GAAcA,MAAd;AACA;;AAEDC,gBAAc,CAACC,IAAD,EAAkB;AAC/B,SAAKA,IAAL,GAAYA,IAAZ;AACA;;AAEDC,SAAO;AACN,WAAO,KAAKL,IAAZ;AACA;;AAzBmC;;AAArCM","names":["AbstractFactory","constructor","type","setDiagramEngine","engine","setFactoryBank","bank","getType","exports"],"sources":["C:\\Users\\nairr\\app-ui\\app-ui\\node_modules\\@projectstorm\\react-canvas-core\\src\\core\\AbstractFactory.ts"],"sourcesContent":["import { CanvasEngine } from '../CanvasEngine';\nimport { FactoryBank } from './FactoryBank';\n\n/**\n * Base factory for all the different types of entities.\n * Gets registered with the engine, and is used to generate models\n */\nexport abstract class AbstractFactory<E extends CanvasEngine = CanvasEngine> {\n\t/**\n\t * Couples the factory with the models it generates\n\t */\n\tprotected type: string;\n\t/**\n\t * The engine gets injected when the factory is registered\n\t */\n\tprotected engine: E;\n\tprotected bank: FactoryBank;\n\n\tconstructor(type: string) {\n\t\tthis.type = type;\n\t}\n\n\tsetDiagramEngine(engine: E) {\n\t\tthis.engine = engine;\n\t}\n\n\tsetFactoryBank(bank: FactoryBank) {\n\t\tthis.bank = bank;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}