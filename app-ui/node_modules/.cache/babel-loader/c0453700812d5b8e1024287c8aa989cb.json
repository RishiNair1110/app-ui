{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Point = void 0;\n\nconst Matrix_1 = require(\"./Matrix\");\n\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  translate(x, y) {\n    this.x += x;\n    this.y += y;\n  }\n\n  clone() {\n    return new Point(this.x, this.y);\n  }\n\n  toSVG() {\n    return this.x + ' ' + this.y;\n  }\n\n  asMatrix() {\n    return new Matrix_1.Matrix([[this.x], [this.y], [1]]);\n  }\n\n  transform(matrix) {\n    let final = matrix.mmul(this.asMatrix());\n    this.x = final.get(0, 0);\n    this.y = final.get(1, 0);\n  }\n\n  static middlePoint(pointA, pointB) {\n    return new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n  }\n\n  static multiply() {\n    let m = arguments.length <= 0 ? undefined : arguments[0];\n\n    for (let i = 1; i < arguments.length; i++) {\n      m = m.mmul(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    }\n\n    return m;\n  }\n\n  static scaleMatrix(x, y) {\n    return new Matrix_1.Matrix([[x, 0, 0], [0, y, 0], [0, 0, 1]]);\n  }\n\n  static translateMatrix(x, y) {\n    return new Matrix_1.Matrix([[1, 0, x], [0, 1, y], [0, 0, 1]]);\n  }\n\n  static rotateMatrix(deg) {\n    return new Matrix_1.Matrix([[Math.cos(deg), -1 * Math.sin(deg), 0], [Math.sin(deg), Math.cos(deg), 0], [0, 0, 1]]);\n  }\n\n  static createScaleMatrix(x, y, origin) {\n    return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.scaleMatrix(x, y), Point.translateMatrix(-origin.x, -origin.y));\n  }\n\n  static createRotateMatrix(deg, origin) {\n    return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.rotateMatrix(deg), Point.translateMatrix(-origin.x, -origin.y));\n  }\n\n}\n\nexports.Point = Point;","map":{"version":3,"mappings":"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","names":["Point","constructor","x","y","translate","clone","toSVG","asMatrix","Matrix_1","transform","matrix","final","mmul","get","middlePoint","pointA","pointB","multiply","m","i","length","scaleMatrix","translateMatrix","rotateMatrix","deg","Math","cos","sin","createScaleMatrix","origin","createRotateMatrix","exports"],"sources":["C:\\Users\\nairr\\app-ui\\app-ui\\node_modules\\@projectstorm\\geometry\\src\\Point.ts"],"sourcesContent":["import { Matrix } from './Matrix';\n\nexport class Point {\n\tx: number;\n\ty: number;\n\n\tconstructor(x: number, y: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\ttranslate(x: number, y: number) {\n\t\tthis.x += x;\n\t\tthis.y += y;\n\t}\n\n\tclone() {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\ttoSVG() {\n\t\treturn this.x + ' ' + this.y;\n\t}\n\n\tasMatrix() {\n\t\treturn new Matrix([[this.x], [this.y], [1]]);\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\tlet final: Matrix = matrix.mmul(this.asMatrix());\n\t\tthis.x = final.get(0, 0);\n\t\tthis.y = final.get(1, 0);\n\t}\n\n\tpublic static middlePoint(pointA: Point, pointB: Point): Point {\n\t\treturn new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n\t}\n\n\tpublic static multiply(...matrices: Matrix[]): Matrix {\n\t\tlet m: Matrix = matrices[0];\n\t\tfor (let i = 1; i < matrices.length; i++) {\n\t\t\tm = m.mmul(matrices[i]);\n\t\t}\n\t\treturn m;\n\t}\n\n\tpublic static scaleMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[x, 0, 0],\n\t\t\t[0, y, 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static translateMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[1, 0, x],\n\t\t\t[0, 1, y],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static rotateMatrix(deg: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[Math.cos(deg), -1 * Math.sin(deg), 0],\n\t\t\t[Math.sin(deg), Math.cos(deg), 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tstatic createScaleMatrix(x, y, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tPoint.translateMatrix(origin.x, origin.y),\n\t\t\tPoint.scaleMatrix(x, y),\n\t\t\tPoint.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n\n\tstatic createRotateMatrix(deg: number, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tPoint.translateMatrix(origin.x, origin.y),\n\t\t\tPoint.rotateMatrix(deg),\n\t\t\tPoint.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}