{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i['return']) _i['return']();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError('Invalid attempt to destructure non-iterable instance');\n    }\n  };\n}();\n\nvar _geom = require('./geom');\n\nvar Path = function Path(init) {\n  var _instructions = init || [];\n\n  var push = function push(arr, el) {\n    var copy = arr.slice(0, arr.length);\n    copy.push(el);\n    return copy;\n  };\n\n  var areEqualPoints = function areEqualPoints(_ref, _ref3) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var a1 = _ref2[0];\n    var b1 = _ref2[1];\n\n    var _ref32 = _slicedToArray(_ref3, 2);\n\n    var a2 = _ref32[0];\n    var b2 = _ref32[1];\n    return a1 === a2 && b1 === b2;\n  };\n\n  var trimZeros = function trimZeros(string, char) {\n    var l = string.length;\n\n    while (string.charAt(l - 1) === '0') {\n      l = l - 1;\n    }\n\n    if (string.charAt(l - 1) === '.') {\n      l = l - 1;\n    }\n\n    return string.substr(0, l);\n  };\n\n  var round = function round(number, digits) {\n    var str = number.toFixed(digits);\n    return trimZeros(str);\n  };\n\n  var printInstrunction = function printInstrunction(_ref4) {\n    var command = _ref4.command;\n    var params = _ref4.params;\n    var numbers = params.map(function (param) {\n      return round(param, 6);\n    });\n    return command + ' ' + numbers.join(' ');\n  };\n\n  var point = function point(_ref5, prev) {\n    var command = _ref5.command;\n    var params = _ref5.params;\n\n    switch (command) {\n      case 'M':\n        return [params[0], params[1]];\n\n      case 'L':\n        return [params[0], params[1]];\n\n      case 'H':\n        return [params[0], prev[1]];\n\n      case 'V':\n        return [prev[0], params[0]];\n\n      case 'Z':\n        return null;\n\n      case 'C':\n        return [params[4], params[5]];\n\n      case 'S':\n        return [params[2], params[3]];\n\n      case 'Q':\n        return [params[2], params[3]];\n\n      case 'T':\n        return [params[0], params[1]];\n\n      case 'A':\n        return [params[5], params[6]];\n    }\n  };\n\n  var transformParams = function transformParams(instruction, matrix, prev) {\n    var p = instruction.params;\n    var transformer = {\n      'V': function V(instruction, matrix, prev) {\n        var pts = [{\n          x: prev[0],\n          y: p[0]\n        }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n        if (newPts[0].x === (0, _geom.matrixTransform)([{\n          x: prev[0],\n          y: prev[1]\n        }], matrix)[0].x) {\n          return {\n            command: 'V',\n            params: [newPts[0].y]\n          };\n        } else {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'H': function H(instruction, matrix, prev) {\n        var pts = [{\n          x: p[0],\n          y: prev[1]\n        }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n        if (newPts[0].y === (0, _geom.matrixTransform)([{\n          x: prev[0],\n          y: prev[1]\n        }], matrix)[0].y) {\n          return {\n            command: 'H',\n            params: [newPts[0].x]\n          };\n        } else {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'A': function A(instruction, matrix, prev) {\n        // transform rx, ry, and x-axis rotation\n        var r = (0, _geom.transformEllipse)(p[0], p[1], p[2], matrix);\n        var sweepFlag = p[4];\n\n        if (matrix[0] * matrix[3] - matrix[1] * matrix[2] < 0) {\n          sweepFlag = sweepFlag ? '0' : '1';\n        } // transform endpoint\n\n\n        var pts = [{\n          x: p[5],\n          y: p[6]\n        }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n        if (r.isDegenerate) {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        } else {\n          return {\n            command: 'A',\n            params: [r.rx, r.ry, r.ax, p[3], sweepFlag, newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'C': function C(instruction, matrix, prev) {\n        var pts = [{\n          x: p[0],\n          y: p[1]\n        }, {\n          x: p[2],\n          y: p[3]\n        }, {\n          x: p[4],\n          y: p[5]\n        }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        return {\n          command: 'C',\n          params: [newPts[0].x, newPts[0].y, newPts[1].x, newPts[1].y, newPts[2].x, newPts[2].y]\n        };\n      },\n      'Z': function Z(instruction, matrix, prev) {\n        return {\n          command: 'Z',\n          params: []\n        };\n      },\n      'default': function _default(instruction, matrix, prev) {\n        var pts = [{\n          x: p[0],\n          y: p[1]\n        }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        var newParams = instruction.params.slice(0, instruction.params.length);\n        newParams.splice(0, 2, newPts[0].x, newPts[0].y);\n        return {\n          command: instruction.command,\n          params: newParams\n        };\n      }\n    };\n\n    if (transformer[instruction.command]) {\n      return transformer[instruction.command](instruction, matrix, prev);\n    } else {\n      return transformer['default'](instruction, matrix, prev);\n    }\n  };\n\n  var verbosify = function verbosify(keys, f) {\n    return function (a) {\n      var args = typeof a === 'object' ? keys.map(function (k) {\n        return a[k];\n      }) : arguments;\n      return f.apply(null, args);\n    };\n  };\n\n  var plus = function plus(instruction) {\n    return Path(push(_instructions, instruction));\n  };\n\n  return {\n    moveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'M',\n        params: [x, y]\n      });\n    }),\n    lineto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'L',\n        params: [x, y]\n      });\n    }),\n    hlineto: verbosify(['x'], function (x) {\n      return plus({\n        command: 'H',\n        params: [x]\n      });\n    }),\n    vlineto: verbosify(['y'], function (y) {\n      return plus({\n        command: 'V',\n        params: [y]\n      });\n    }),\n    closepath: function closepath() {\n      return plus({\n        command: 'Z',\n        params: []\n      });\n    },\n    curveto: verbosify(['x1', 'y1', 'x2', 'y2', 'x', 'y'], function (x1, y1, x2, y2, x, y) {\n      return plus({\n        command: 'C',\n        params: [x1, y1, x2, y2, x, y]\n      });\n    }),\n    smoothcurveto: verbosify(['x2', 'y2', 'x', 'y'], function (x2, y2, x, y) {\n      return plus({\n        command: 'S',\n        params: [x2, y2, x, y]\n      });\n    }),\n    qcurveto: verbosify(['x1', 'y1', 'x', 'y'], function (x1, y1, x, y) {\n      return plus({\n        command: 'Q',\n        params: [x1, y1, x, y]\n      });\n    }),\n    smoothqcurveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'T',\n        params: [x, y]\n      });\n    }),\n    arc: verbosify(['rx', 'ry', 'xrot', 'largeArcFlag', 'sweepFlag', 'x', 'y'], function (rx, ry, xrot, largeArcFlag, sweepFlag, x, y) {\n      return plus({\n        command: 'A',\n        params: [rx, ry, xrot, largeArcFlag, sweepFlag, x, y]\n      });\n    }),\n    translate: verbosify(['dx', 'dy'], function () {\n      var dx = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n      var dy = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n      if (dx !== 0 || dy !== 0) {\n        var _ret = function () {\n          var prev = [0, 0];\n          var matrix = [1, 0, 0, 1, dx, dy];\n\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n\n          return {\n            v: Path(newInstructions)\n          };\n        }();\n\n        if (typeof _ret === 'object') return _ret.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    rotate: verbosify(['angle', 'rx', 'ry'], function (angle) {\n      var rx = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n      var ry = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n      if (angle !== 0) {\n        var _ret2 = function () {\n          var prev = undefined;\n          var matrix = undefined;\n          var newInstructions = _instructions;\n\n          if (rx !== 0 && ry !== 0) {\n            prev = [0, 0];\n            matrix = [1, 0, 0, 1, -rx, -ry];\n            newInstructions = newInstructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n          }\n\n          var rad = angle * Math.PI / 180;\n          var cos = Math.cos(rad);\n          var sin = Math.sin(rad);\n          prev = [0, 0];\n          matrix = [cos, sin, -sin, cos, 0, 0];\n          newInstructions = newInstructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n\n          if (rx !== 0 && ry !== 0) {\n            prev = [0, 0];\n            matrix = [1, 0, 0, 1, rx, ry];\n            newInstructions = newInstructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n          }\n\n          return {\n            v: Path(newInstructions)\n          };\n        }();\n\n        if (typeof _ret2 === 'object') return _ret2.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    scale: verbosify(['sx', 'sy'], function () {\n      var sx = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n      var sy = arguments.length <= 1 || arguments[1] === undefined ? sx : arguments[1];\n      return function () {\n        if (sx !== 1 || sy !== 1) {\n          var _ret3 = function () {\n            var prev = [0, 0];\n            var matrix = [sx, 0, 0, sy, 0, 0];\n\n            var newInstructions = _instructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n\n            return {\n              v: Path(newInstructions)\n            };\n          }();\n\n          if (typeof _ret3 === 'object') return _ret3.v;\n        } else {\n          return Path(_instructions);\n        }\n      }();\n    }),\n    shearX: verbosify(['angle'], function () {\n      var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n      if (angle !== 0) {\n        var _ret4 = function () {\n          var prev = [0, 0];\n          var matrix = [1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0];\n\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n\n          return {\n            v: Path(newInstructions)\n          };\n        }();\n\n        if (typeof _ret4 === 'object') return _ret4.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    shearY: verbosify(['angle'], function () {\n      var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n      if (angle !== 0) {\n        var _ret5 = function () {\n          var prev = [0, 0];\n          var matrix = [1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0];\n\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n\n          return {\n            v: Path(newInstructions)\n          };\n        }();\n\n        if (typeof _ret5 === 'object') return _ret5.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    print: function print() {\n      return _instructions.map(printInstrunction).join(' ');\n    },\n    toString: function toString() {\n      return undefined.print();\n    },\n    points: function points() {\n      var ps = [];\n      var prev = [0, 0];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _instructions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var instruction = _step.value;\n          var p = point(instruction, prev);\n          prev = p;\n\n          if (p) {\n            ps.push(p);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator['return']) {\n            _iterator['return']();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return ps;\n    },\n    instructions: function instructions() {\n      return _instructions.slice(0, _instructions.length);\n    },\n    connect: function connect(path) {\n      var ps = this.points();\n      var last = ps[ps.length - 1];\n      var first = path.points()[0];\n      var newInstructions = undefined;\n\n      if (_instructions[_instructions.length - 1].command !== 'Z') {\n        newInstructions = path.instructions().slice(1);\n\n        if (!areEqualPoints(last, first)) {\n          newInstructions.unshift({\n            command: \"L\",\n            params: first\n          });\n        }\n      } else {\n        newInstructions = path.instructions();\n      }\n\n      return Path(this.instructions().concat(newInstructions));\n    }\n  };\n};\n\nexports['default'] = function () {\n  return Path();\n};\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["C:/Users/nairr/app-ui/app-ui/node_modules/paths-js/path.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","_geom","require","Path","init","_instructions","el","copy","slice","areEqualPoints","_ref","_ref3","_ref2","a1","b1","_ref32","a2","b2","trimZeros","string","char","l","charAt","substr","round","number","digits","str","toFixed","printInstrunction","_ref4","command","params","numbers","map","param","join","point","_ref5","prev","transformParams","instruction","matrix","p","transformer","V","pts","x","y","newPts","matrixTransform","H","A","r","transformEllipse","sweepFlag","isDegenerate","rx","ry","ax","C","Z","_default","newParams","splice","verbosify","keys","f","a","args","k","arguments","apply","plus","moveto","lineto","hlineto","vlineto","closepath","curveto","x1","y1","x2","y2","smoothcurveto","qcurveto","smoothqcurveto","arc","xrot","largeArcFlag","translate","dx","dy","_ret","newInstructions","v","rotate","angle","_ret2","rad","Math","PI","cos","sin","scale","sx","sy","_ret3","shearX","_ret4","tan","shearY","_ret5","print","toString","points","ps","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","instructions","connect","path","last","first","unshift","concat","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _geom = require('./geom');\n\nvar Path = function Path(init) {\n  var _instructions = init || [];\n\n  var push = function push(arr, el) {\n    var copy = arr.slice(0, arr.length);\n    copy.push(el);\n    return copy;\n  };\n\n  var areEqualPoints = function areEqualPoints(_ref, _ref3) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var a1 = _ref2[0];\n    var b1 = _ref2[1];\n\n    var _ref32 = _slicedToArray(_ref3, 2);\n\n    var a2 = _ref32[0];\n    var b2 = _ref32[1];\n    return a1 === a2 && b1 === b2;\n  };\n\n  var trimZeros = function trimZeros(string, char) {\n    var l = string.length;\n    while (string.charAt(l - 1) === '0') {\n      l = l - 1;\n    }\n    if (string.charAt(l - 1) === '.') {\n      l = l - 1;\n    }\n    return string.substr(0, l);\n  };\n\n  var round = function round(number, digits) {\n    var str = number.toFixed(digits);\n    return trimZeros(str);\n  };\n\n  var printInstrunction = function printInstrunction(_ref4) {\n    var command = _ref4.command;\n    var params = _ref4.params;\n\n    var numbers = params.map(function (param) {\n      return round(param, 6);\n    });\n    return command + ' ' + numbers.join(' ');\n  };\n\n  var point = function point(_ref5, prev) {\n    var command = _ref5.command;\n    var params = _ref5.params;\n\n    switch (command) {\n      case 'M':\n        return [params[0], params[1]];\n      case 'L':\n        return [params[0], params[1]];\n      case 'H':\n        return [params[0], prev[1]];\n      case 'V':\n        return [prev[0], params[0]];\n      case 'Z':\n        return null;\n      case 'C':\n        return [params[4], params[5]];\n      case 'S':\n        return [params[2], params[3]];\n      case 'Q':\n        return [params[2], params[3]];\n      case 'T':\n        return [params[0], params[1]];\n      case 'A':\n        return [params[5], params[6]];\n    }\n  };\n\n  var transformParams = function transformParams(instruction, matrix, prev) {\n    var p = instruction.params;\n\n    var transformer = {\n      'V': function V(instruction, matrix, prev) {\n        var pts = [{ x: prev[0], y: p[0] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        if (newPts[0].x === (0, _geom.matrixTransform)([{ x: prev[0], y: prev[1] }], matrix)[0].x) {\n          return {\n            command: 'V',\n            params: [newPts[0].y]\n          };\n        } else {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'H': function H(instruction, matrix, prev) {\n        var pts = [{ x: p[0], y: prev[1] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        if (newPts[0].y === (0, _geom.matrixTransform)([{ x: prev[0], y: prev[1] }], matrix)[0].y) {\n          return {\n            command: 'H',\n            params: [newPts[0].x]\n          };\n        } else {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'A': function A(instruction, matrix, prev) {\n        // transform rx, ry, and x-axis rotation\n        var r = (0, _geom.transformEllipse)(p[0], p[1], p[2], matrix);\n\n        var sweepFlag = p[4];\n        if (matrix[0] * matrix[3] - matrix[1] * matrix[2] < 0) {\n          sweepFlag = sweepFlag ? '0' : '1';\n        }\n\n        // transform endpoint\n        var pts = [{ x: p[5], y: p[6] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n        if (r.isDegenerate) {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        } else {\n          return {\n            command: 'A',\n            params: [r.rx, r.ry, r.ax, p[3], sweepFlag, newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'C': function C(instruction, matrix, prev) {\n        var pts = [{ x: p[0], y: p[1] }, { x: p[2], y: p[3] }, { x: p[4], y: p[5] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        return {\n          command: 'C',\n          params: [newPts[0].x, newPts[0].y, newPts[1].x, newPts[1].y, newPts[2].x, newPts[2].y]\n        };\n      },\n      'Z': function Z(instruction, matrix, prev) {\n        return {\n          command: 'Z',\n          params: []\n        };\n      },\n      'default': function _default(instruction, matrix, prev) {\n        var pts = [{ x: p[0], y: p[1] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        var newParams = instruction.params.slice(0, instruction.params.length);\n        newParams.splice(0, 2, newPts[0].x, newPts[0].y);\n        return {\n          command: instruction.command,\n          params: newParams\n        };\n      }\n    };\n\n    if (transformer[instruction.command]) {\n      return transformer[instruction.command](instruction, matrix, prev);\n    } else {\n      return transformer['default'](instruction, matrix, prev);\n    }\n  };\n\n  var verbosify = function verbosify(keys, f) {\n    return function (a) {\n      var args = typeof a === 'object' ? keys.map(function (k) {\n        return a[k];\n      }) : arguments;\n      return f.apply(null, args);\n    };\n  };\n\n  var plus = function plus(instruction) {\n    return Path(push(_instructions, instruction));\n  };\n\n  return {\n    moveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'M',\n        params: [x, y]\n      });\n    }),\n    lineto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'L',\n        params: [x, y]\n      });\n    }),\n    hlineto: verbosify(['x'], function (x) {\n      return plus({\n        command: 'H',\n        params: [x]\n      });\n    }),\n    vlineto: verbosify(['y'], function (y) {\n      return plus({\n        command: 'V',\n        params: [y]\n      });\n    }),\n    closepath: function closepath() {\n      return plus({\n        command: 'Z',\n        params: []\n      });\n    },\n    curveto: verbosify(['x1', 'y1', 'x2', 'y2', 'x', 'y'], function (x1, y1, x2, y2, x, y) {\n      return plus({\n        command: 'C',\n        params: [x1, y1, x2, y2, x, y]\n      });\n    }),\n    smoothcurveto: verbosify(['x2', 'y2', 'x', 'y'], function (x2, y2, x, y) {\n      return plus({\n        command: 'S',\n        params: [x2, y2, x, y]\n      });\n    }),\n    qcurveto: verbosify(['x1', 'y1', 'x', 'y'], function (x1, y1, x, y) {\n      return plus({\n        command: 'Q',\n        params: [x1, y1, x, y]\n      });\n    }),\n    smoothqcurveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'T',\n        params: [x, y]\n      });\n    }),\n    arc: verbosify(['rx', 'ry', 'xrot', 'largeArcFlag', 'sweepFlag', 'x', 'y'], function (rx, ry, xrot, largeArcFlag, sweepFlag, x, y) {\n      return plus({\n        command: 'A',\n        params: [rx, ry, xrot, largeArcFlag, sweepFlag, x, y]\n      });\n    }),\n    translate: verbosify(['dx', 'dy'], function () {\n      var dx = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n      var dy = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n      if (dx !== 0 || dy !== 0) {\n        var _ret = (function () {\n          var prev = [0, 0];\n          var matrix = [1, 0, 0, 1, dx, dy];\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret === 'object') return _ret.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    rotate: verbosify(['angle', 'rx', 'ry'], function (angle) {\n      var rx = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n      var ry = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n      if (angle !== 0) {\n        var _ret2 = (function () {\n          var prev = undefined;\n          var matrix = undefined;\n          var newInstructions = _instructions;\n\n          if (rx !== 0 && ry !== 0) {\n            prev = [0, 0];\n            matrix = [1, 0, 0, 1, -rx, -ry];\n            newInstructions = newInstructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n          }\n\n          var rad = angle * Math.PI / 180;\n          var cos = Math.cos(rad);\n          var sin = Math.sin(rad);\n\n          prev = [0, 0];\n          matrix = [cos, sin, -sin, cos, 0, 0];\n          newInstructions = newInstructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n\n          if (rx !== 0 && ry !== 0) {\n            prev = [0, 0];\n            matrix = [1, 0, 0, 1, rx, ry];\n            newInstructions = newInstructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n          }\n\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret2 === 'object') return _ret2.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    scale: verbosify(['sx', 'sy'], function () {\n      var sx = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n      var sy = arguments.length <= 1 || arguments[1] === undefined ? sx : arguments[1];\n      return (function () {\n        if (sx !== 1 || sy !== 1) {\n          var _ret3 = (function () {\n            var prev = [0, 0];\n            var matrix = [sx, 0, 0, sy, 0, 0];\n            var newInstructions = _instructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n            return {\n              v: Path(newInstructions)\n            };\n          })();\n\n          if (typeof _ret3 === 'object') return _ret3.v;\n        } else {\n          return Path(_instructions);\n        }\n      })();\n    }),\n    shearX: verbosify(['angle'], function () {\n      var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n      if (angle !== 0) {\n        var _ret4 = (function () {\n          var prev = [0, 0];\n          var matrix = [1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0];\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret4 === 'object') return _ret4.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    shearY: verbosify(['angle'], function () {\n      var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n      if (angle !== 0) {\n        var _ret5 = (function () {\n          var prev = [0, 0];\n          var matrix = [1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0];\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret5 === 'object') return _ret5.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    print: function print() {\n      return _instructions.map(printInstrunction).join(' ');\n    },\n    toString: function toString() {\n      return undefined.print();\n    },\n    points: function points() {\n      var ps = [];\n      var prev = [0, 0];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _instructions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var instruction = _step.value;\n\n          var p = point(instruction, prev);\n          prev = p;\n          if (p) {\n            ps.push(p);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator['return']) {\n            _iterator['return']();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return ps;\n    },\n    instructions: function instructions() {\n      return _instructions.slice(0, _instructions.length);\n    },\n    connect: function connect(path) {\n      var ps = this.points();\n      var last = ps[ps.length - 1];\n      var first = path.points()[0];\n      var newInstructions = undefined;\n      if (_instructions[_instructions.length - 1].command !== 'Z') {\n        newInstructions = path.instructions().slice(1);\n        if (!areEqualPoints(last, first)) {\n          newInstructions.unshift({\n            command: \"L\",\n            params: first\n          });\n        }\n      } else {\n        newInstructions = path.instructions();\n      }\n      return Path(this.instructions().concat(newInstructions));\n    }\n  };\n};\n\nexports['default'] = function () {\n  return Path();\n};\n\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}