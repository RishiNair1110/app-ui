{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nairr\\\\app-ui\\\\app-ui\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DiagramEngine, DiagramModel, DefaultNodeModel, LinkModel, DiagramWidget, DefaultLinkModel } from \"storm-react-diagrams\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ElmArchitecture = () => {\n  //1) setup the diagram engine\n  var engine = new DiagramEngine();\n  engine.installDefaultFactories(); //2) setup the diagram model\n\n  var model = new DiagramModel(); //3-A) create a default node\n\n  var node1 = new DefaultNodeModel(\"Source\", \"rgb(0,192,255)\");\n  let port1 = node1.addOutPort(\" \");\n  node1.setPosition(100, 100); //3-B) create another default node\n\n  var node2 = new DefaultNodeModel(\"Destination\", \"rgb(192,255,0)\");\n  let port2 = node2.addInPort(\" \");\n  let port3 = node2.addOutPort(\" \");\n  node2.setPosition(400, 100); // link the ports\n\n  let link1 = port1.link(port2); //4) add the models to the root graph\n\n  model.addAll(node1, node2, link1); //5) load model into engine\n\n  engine.setDiagramModel(model); //6) render the diagram!\n\n  return /*#__PURE__*/_jsxDEV(DiagramWidget, {\n    className: \"srd-demo-canvas\",\n    diagramEngine: engine\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ElmArchitecture;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ElmArchitecture, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElmArchitecture\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/nairr/app-ui/app-ui/src/index.js"],"names":["React","ReactDOM","DiagramEngine","DiagramModel","DefaultNodeModel","LinkModel","DiagramWidget","DefaultLinkModel","ElmArchitecture","engine","installDefaultFactories","model","node1","port1","addOutPort","setPosition","node2","port2","addInPort","port3","link1","link","addAll","setDiagramModel","App","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,gBAHF,EAIEC,SAJF,EAKEC,aALF,EAMEC,gBANF,QAOO,sBAPP;AASA,OAAO,WAAP;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B;AACA,MAAIC,MAAM,GAAG,IAAIP,aAAJ,EAAb;AACAO,EAAAA,MAAM,CAACC,uBAAP,GAH4B,CAK5B;;AACA,MAAIC,KAAK,GAAG,IAAIR,YAAJ,EAAZ,CAN4B,CAQ5B;;AACA,MAAIS,KAAK,GAAG,IAAIR,gBAAJ,CAAqB,QAArB,EAA+B,gBAA/B,CAAZ;AACA,MAAIS,KAAK,GAAGD,KAAK,CAACE,UAAN,CAAiB,GAAjB,CAAZ;AACAF,EAAAA,KAAK,CAACG,WAAN,CAAkB,GAAlB,EAAuB,GAAvB,EAX4B,CAa5B;;AACA,MAAIC,KAAK,GAAG,IAAIZ,gBAAJ,CAAqB,aAArB,EAAoC,gBAApC,CAAZ;AACA,MAAIa,KAAK,GAAGD,KAAK,CAACE,SAAN,CAAgB,GAAhB,CAAZ;AACA,MAAIC,KAAK,GAAGH,KAAK,CAACF,UAAN,CAAiB,GAAjB,CAAZ;AACAE,EAAAA,KAAK,CAACD,WAAN,CAAkB,GAAlB,EAAuB,GAAvB,EAjB4B,CAmB5B;;AACA,MAAIK,KAAK,GAAGP,KAAK,CAACQ,IAAN,CAAWJ,KAAX,CAAZ,CApB4B,CAsB5B;;AACAN,EAAAA,KAAK,CAACW,MAAN,CAAaV,KAAb,EAAoBI,KAApB,EAA2BI,KAA3B,EAvB4B,CAyB5B;;AACAX,EAAAA,MAAM,CAACc,eAAP,CAAuBZ,KAAvB,EA1B4B,CA4B5B;;AACA,sBAAO,QAAC,aAAD;AAAe,IAAA,SAAS,EAAC,iBAAzB;AAA2C,IAAA,aAAa,EAAEF;AAA1D;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA9BD;;KAAMD,e;;AAgCN,SAASgB,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQA,G;AAQT,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACA1B,QAAQ,CAAC2B,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBH,WAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  DiagramEngine,\n  DiagramModel,\n  DefaultNodeModel,\n  LinkModel,\n  DiagramWidget,\n  DefaultLinkModel\n} from \"storm-react-diagrams\";\n\nimport \"./app.css\";\n\nconst ElmArchitecture = () => {\n  //1) setup the diagram engine\n  var engine = new DiagramEngine();\n  engine.installDefaultFactories();\n\n  //2) setup the diagram model\n  var model = new DiagramModel();\n\n  //3-A) create a default node\n  var node1 = new DefaultNodeModel(\"Source\", \"rgb(0,192,255)\");\n  let port1 = node1.addOutPort(\" \");\n  node1.setPosition(100, 100);\n\n  //3-B) create another default node\n  var node2 = new DefaultNodeModel(\"Destination\", \"rgb(192,255,0)\");\n  let port2 = node2.addInPort(\" \");\n  let port3 = node2.addOutPort(\" \");\n  node2.setPosition(400, 100);\n\n  // link the ports\n  let link1 = port1.link(port2);\n\n  //4) add the models to the root graph\n  model.addAll(node1, node2, link1);\n\n  //5) load model into engine\n  engine.setDiagramModel(model);\n\n  //6) render the diagram!\n  return <DiagramWidget className=\"srd-demo-canvas\" diagramEngine={engine} />;\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ElmArchitecture />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}