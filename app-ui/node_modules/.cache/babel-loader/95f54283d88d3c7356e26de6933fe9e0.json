{"ast":null,"code":"var BiAStarFinder = require('./BiAStarFinder');\n/**\r\n * Bi-directional Dijkstra path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\n\n\nfunction BiDijkstraFinder(opt) {\n  BiAStarFinder.call(this, opt);\n\n  this.heuristic = function (dx, dy) {\n    return 0;\n  };\n}\n\nBiDijkstraFinder.prototype = new BiAStarFinder();\nBiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\nmodule.exports = BiDijkstraFinder;","map":{"version":3,"sources":["C:/Users/nairr/app-ui/app-ui/node_modules/pathfinding/src/finders/BiDijkstraFinder.js"],"names":["BiAStarFinder","require","BiDijkstraFinder","opt","call","heuristic","dx","dy","prototype","constructor","module","exports"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC3BH,EAAAA,aAAa,CAACI,IAAd,CAAmB,IAAnB,EAAyBD,GAAzB;;AACA,OAAKE,SAAL,GAAiB,UAASC,EAAT,EAAaC,EAAb,EAAiB;AAC9B,WAAO,CAAP;AACH,GAFD;AAGH;;AAEDL,gBAAgB,CAACM,SAAjB,GAA6B,IAAIR,aAAJ,EAA7B;AACAE,gBAAgB,CAACM,SAAjB,CAA2BC,WAA3B,GAAyCP,gBAAzC;AAEAQ,MAAM,CAACC,OAAP,GAAiBT,gBAAjB","sourcesContent":["var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-directional Dijkstra path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiDijkstraFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nBiDijkstraFinder.prototype = new BiAStarFinder();\r\nBiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\r\n\r\nmodule.exports = BiDijkstraFinder;\r\n"]},"metadata":{},"sourceType":"script"}