{"ast":null,"code":"var AStarFinder = require('./AStarFinder');\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\n\n\nfunction BestFirstFinder(opt) {\n  AStarFinder.call(this, opt);\n  var orig = this.heuristic;\n\n  this.heuristic = function (dx, dy) {\n    return orig(dx, dy) * 1000000;\n  };\n}\n\nBestFirstFinder.prototype = new AStarFinder();\nBestFirstFinder.prototype.constructor = BestFirstFinder;\nmodule.exports = BestFirstFinder;","map":{"version":3,"sources":["C:/Users/nairr/app-ui/app-ui/node_modules/pathfinding/src/finders/BestFirstFinder.js"],"names":["AStarFinder","require","BestFirstFinder","opt","call","orig","heuristic","dx","dy","prototype","constructor","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBC,GAAzB,EAA8B;AAC1BH,EAAAA,WAAW,CAACI,IAAZ,CAAiB,IAAjB,EAAuBD,GAAvB;AAEA,MAAIE,IAAI,GAAG,KAAKC,SAAhB;;AACA,OAAKA,SAAL,GAAiB,UAASC,EAAT,EAAaC,EAAb,EAAiB;AAC9B,WAAOH,IAAI,CAACE,EAAD,EAAKC,EAAL,CAAJ,GAAe,OAAtB;AACH,GAFD;AAGH;;AAEDN,eAAe,CAACO,SAAhB,GAA4B,IAAIT,WAAJ,EAA5B;AACAE,eAAe,CAACO,SAAhB,CAA0BC,WAA1B,GAAwCR,eAAxC;AAEAS,MAAM,CAACC,OAAP,GAAiBV,eAAjB","sourcesContent":["var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BestFirstFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBestFirstFinder.prototype = new AStarFinder();\r\nBestFirstFinder.prototype.constructor = BestFirstFinder;\r\n\r\nmodule.exports = BestFirstFinder;\r\n"]},"metadata":{},"sourceType":"script"}