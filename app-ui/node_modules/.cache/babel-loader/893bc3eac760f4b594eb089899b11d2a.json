{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DragDiagramItemsState = void 0;\n\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\n\nconst _ = require(\"lodash\");\n\nconst PointModel_1 = require(\"../entities/link/PointModel\");\n\nconst PortModel_1 = require(\"../entities/port/PortModel\");\n\nclass DragDiagramItemsState extends react_canvas_core_1.MoveItemsState {\n  constructor() {\n    super();\n    this.registerAction(new react_canvas_core_1.Action({\n      type: react_canvas_core_1.InputType.MOUSE_UP,\n      fire: event => {\n        const item = this.engine.getMouseElement(event.event);\n\n        if (item instanceof PortModel_1.PortModel) {\n          _.forEach(this.initialPositions, position => {\n            if (position.item instanceof PointModel_1.PointModel) {\n              const link = position.item.getParent(); // only care about the last links\n\n              if (link.getLastPoint() !== position.item) {\n                return;\n              }\n\n              if (link.getSourcePort().canLinkToPort(item)) {\n                link.setTargetPort(item);\n                item.reportPosition();\n                this.engine.repaintCanvas();\n              }\n            }\n          });\n        }\n      }\n    }));\n  }\n\n}\n\nexports.DragDiagramItemsState = DragDiagramItemsState;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAIA,MAAaA,qBAAb,SAA2CC,kCAA3C,CAAwE;AACvEC;AACC;AACA,SAAKC,cAAL,CACC,IAAIF,0BAAJ,CAAW;AACVG,UAAI,EAAEH,8BAAUI,QADN;AAEVC,UAAI,EAAGC,KAAD,IAAmC;AACxC,cAAMC,IAAI,GAAG,KAAKC,MAAL,CAAYC,eAAZ,CAA4BH,KAAK,CAACA,KAAlC,CAAb;;AACA,YAAIC,IAAI,YAAYG,qBAApB,EAA+B;AAC9BC,WAAC,CAACC,OAAF,CAAU,KAAKC,gBAAf,EAAkCC,QAAD,IAAa;AAC7C,gBAAIA,QAAQ,CAACP,IAAT,YAAyBQ,uBAA7B,EAAyC;AACxC,oBAAMC,IAAI,GAAGF,QAAQ,CAACP,IAAT,CAAcU,SAAd,EAAb,CADwC,CAGxC;;AACA,kBAAID,IAAI,CAACE,YAAL,OAAwBJ,QAAQ,CAACP,IAArC,EAA2C;AAC1C;AACA;;AACD,kBAAIS,IAAI,CAACG,aAAL,GAAqBC,aAArB,CAAmCb,IAAnC,CAAJ,EAA8C;AAC7CS,oBAAI,CAACK,aAAL,CAAmBd,IAAnB;AACAA,oBAAI,CAACe,cAAL;AACA,qBAAKd,MAAL,CAAYe,aAAZ;AACA;AACD;AACD,WAdD;AAeA;AACD;AArBS,KAAX,CADD;AAyBA;;AA5BsE;;AAAxEC","names":["DragDiagramItemsState","react_canvas_core_1","constructor","registerAction","type","MOUSE_UP","fire","event","item","engine","getMouseElement","PortModel_1","_","forEach","initialPositions","position","PointModel_1","link","getParent","getLastPoint","getSourcePort","canLinkToPort","setTargetPort","reportPosition","repaintCanvas","exports"],"sources":["C:\\Users\\nairr\\app-ui\\app-ui\\node_modules\\@projectstorm\\react-diagrams-core\\src\\states\\DragDiagramItemsState.ts"],"sourcesContent":["import { Action, ActionEvent, InputType, MoveItemsState } from '@projectstorm/react-canvas-core';\nimport * as _ from 'lodash';\nimport { PointModel } from '../entities/link/PointModel';\nimport { DiagramEngine } from '../DiagramEngine';\nimport { PortModel } from '../entities/port/PortModel';\nimport { MouseEvent } from 'react';\nimport { LinkModel } from '../entities/link/LinkModel';\n\nexport class DragDiagramItemsState extends MoveItemsState<DiagramEngine> {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_UP,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst item = this.engine.getMouseElement(event.event);\n\t\t\t\t\tif (item instanceof PortModel) {\n\t\t\t\t\t\t_.forEach(this.initialPositions, (position) => {\n\t\t\t\t\t\t\tif (position.item instanceof PointModel) {\n\t\t\t\t\t\t\t\tconst link = position.item.getParent() as LinkModel;\n\n\t\t\t\t\t\t\t\t// only care about the last links\n\t\t\t\t\t\t\t\tif (link.getLastPoint() !== position.item) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (link.getSourcePort().canLinkToPort(item)) {\n\t\t\t\t\t\t\t\t\tlink.setTargetPort(item);\n\t\t\t\t\t\t\t\t\titem.reportPosition();\n\t\t\t\t\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}