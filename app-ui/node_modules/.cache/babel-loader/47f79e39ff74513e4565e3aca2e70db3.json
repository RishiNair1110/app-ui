{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultState = void 0;\n\nconst State_1 = require(\"../core-state/State\");\n\nconst Action_1 = require(\"../core-actions/Action\");\n\nconst DragCanvasState_1 = require(\"./DragCanvasState\");\n\nconst SelectingState_1 = require(\"./SelectingState\");\n\nconst MoveItemsState_1 = require(\"./MoveItemsState\");\n\nclass DefaultState extends State_1.State {\n  constructor() {\n    super({\n      name: 'default'\n    });\n    this.childStates = [new SelectingState_1.SelectingState()]; // determine what was clicked on\n\n    this.registerAction(new Action_1.Action({\n      type: Action_1.InputType.MOUSE_DOWN,\n      fire: event => {\n        const element = this.engine.getActionEventBus().getModelForEvent(event); // the canvas was clicked on, transition to the dragging canvas state\n\n        if (!element) {\n          this.transitionWithEvent(new DragCanvasState_1.DragCanvasState(), event);\n        } else {\n          this.transitionWithEvent(new MoveItemsState_1.MoveItemsState(), event);\n        }\n      }\n    })); // touch drags the canvas\n\n    this.registerAction(new Action_1.Action({\n      type: Action_1.InputType.TOUCH_START,\n      fire: event => {\n        this.transitionWithEvent(new DragCanvasState_1.DragCanvasState(), event);\n      }\n    }));\n  }\n\n}\n\nexports.DefaultState = DefaultState;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AAEA,MAAaA,YAAb,SAAkCC,aAAlC,CAAuC;AACtCC;AACC,UAAM;AACLC,UAAI,EAAE;AADD,KAAN;AAGA,SAAKC,WAAL,GAAmB,CAAC,IAAIC,+BAAJ,EAAD,CAAnB,CAJD,CAMC;;AACA,SAAKC,cAAL,CACC,IAAIC,eAAJ,CAAW;AACVC,UAAI,EAAED,mBAAUE,UADN;AAEVC,UAAI,EAAGC,KAAD,IAAmC;AACxC,cAAMC,OAAO,GAAG,KAAKC,MAAL,CAAYC,iBAAZ,GAAgCC,gBAAhC,CAAiDJ,KAAjD,CAAhB,CADwC,CAGxC;;AACA,YAAI,CAACC,OAAL,EAAc;AACb,eAAKI,mBAAL,CAAyB,IAAIC,iCAAJ,EAAzB,EAAgDN,KAAhD;AACA,SAFD,MAEO;AACN,eAAKK,mBAAL,CAAyB,IAAIE,+BAAJ,EAAzB,EAA+CP,KAA/C;AACA;AACD;AAXS,KAAX,CADD,EAPD,CAuBC;;AACA,SAAKL,cAAL,CACC,IAAIC,eAAJ,CAAW;AACVC,UAAI,EAAED,mBAAUY,WADN;AAEVT,UAAI,EAAGC,KAAD,IAAmC;AACxC,aAAKK,mBAAL,CAAyB,IAAIC,iCAAJ,EAAzB,EAAgDN,KAAhD;AACA;AAJS,KAAX,CADD;AAQA;;AAjCqC;;AAAvCS","names":["DefaultState","State_1","constructor","name","childStates","SelectingState_1","registerAction","Action_1","type","MOUSE_DOWN","fire","event","element","engine","getActionEventBus","getModelForEvent","transitionWithEvent","DragCanvasState_1","MoveItemsState_1","TOUCH_START","exports"],"sources":["C:\\Users\\nairr\\app-ui\\app-ui\\node_modules\\@projectstorm\\react-canvas-core\\src\\states\\DefaultState.ts"],"sourcesContent":["import { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { MouseEvent, TouchEvent } from 'react';\nimport { DragCanvasState } from './DragCanvasState';\nimport { SelectingState } from './SelectingState';\nimport { MoveItemsState } from './MoveItemsState';\n\nexport class DefaultState extends State {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'default'\n\t\t});\n\t\tthis.childStates = [new SelectingState()];\n\n\t\t// determine what was clicked on\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\t// the canvas was clicked on, transition to the dragging canvas state\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tthis.transitionWithEvent(new DragCanvasState(), event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.transitionWithEvent(new MoveItemsState(), event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// touch drags the canvas\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_START,\n\t\t\t\tfire: (event: ActionEvent<TouchEvent>) => {\n\t\t\t\t\tthis.transitionWithEvent(new DragCanvasState(), event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}