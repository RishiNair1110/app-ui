{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultLinkPointWidget = void 0;\n\nconst React = require(\"react\");\n\nconst styled_1 = require(\"@emotion/styled\");\n\nvar S;\n\n(function (S) {\n  S.PointTop = styled_1.default.circle`\n\t\tpointer-events: all;\n\t`;\n})(S || (S = {}));\n\nclass DefaultLinkPointWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: false\n    };\n  }\n\n  render() {\n    const {\n      point\n    } = this.props;\n    return React.createElement(\"g\", null, React.createElement(\"circle\", {\n      cx: point.getPosition().x,\n      cy: point.getPosition().y,\n      r: 5,\n      fill: this.state.selected || this.props.point.isSelected() ? this.props.colorSelected : this.props.color\n    }), React.createElement(S.PointTop, {\n      className: \"point\",\n      onMouseLeave: () => {\n        this.setState({\n          selected: false\n        });\n      },\n      onMouseEnter: () => {\n        this.setState({\n          selected: true\n        });\n      },\n      \"data-id\": point.getID(),\n      \"data-linkid\": point.getLink().getID(),\n      cx: point.getPosition().x,\n      cy: point.getPosition().y,\n      r: 15,\n      opacity: 0.0\n    }));\n  }\n\n}\n\nexports.DefaultLinkPointWidget = DefaultLinkPointWidget;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AAYA,IAAUA,CAAV;;AAAA,WAAUA,CAAV,EAAW;AACGA,eAAWC,iBAAOC,MAAM;;EAAxB;AAGb,CAJD,EAAUF,CAAC,KAADA,CAAC,MAAX;;AAMA,MAAaG,sBAAb,SAA4CC,KAAK,CAACC,SAAlD,CAAqH;AACpHC,cAAYC,KAAZ,EAAiB;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,cAAQ,EAAE;AADE,KAAb;AAGA;;AAEDC,QAAM;AACL,UAAM;AAAEC;AAAF,QAAY,KAAKJ,KAAvB;AACA,WACCH,+BACCA;AACCQ,QAAE,EAAED,KAAK,CAACE,WAAN,GAAoBC,CADzB;AAECC,QAAE,EAAEJ,KAAK,CAACE,WAAN,GAAoBG,CAFzB;AAGCC,OAAC,EAAE,CAHJ;AAICC,UAAI,EAAE,KAAKV,KAAL,CAAWC,QAAX,IAAuB,KAAKF,KAAL,CAAWI,KAAX,CAAiBQ,UAAjB,EAAvB,GAAuD,KAAKZ,KAAL,CAAWa,aAAlE,GAAkF,KAAKb,KAAL,CAAWc;AAJpG,MADD,EAOCjB,oBAACJ,CAAC,CAACsB,QAAH,EAAW;AACVC,eAAS,EAAC,OADA;AAEVC,kBAAY,EAAE,MAAK;AAClB,aAAKC,QAAL,CAAc;AAAEhB,kBAAQ,EAAE;AAAZ,SAAd;AACA,OAJS;AAKViB,kBAAY,EAAE,MAAK;AAClB,aAAKD,QAAL,CAAc;AAAEhB,kBAAQ,EAAE;AAAZ,SAAd;AACA,OAPS;AAOT,iBACQE,KAAK,CAACgB,KAAN,EARC;AAQY,qBACThB,KAAK,CAACiB,OAAN,GAAgBD,KAAhB,EATH;AAUVf,QAAE,EAAED,KAAK,CAACE,WAAN,GAAoBC,CAVd;AAWVC,QAAE,EAAEJ,KAAK,CAACE,WAAN,GAAoBG,CAXd;AAYVC,OAAC,EAAE,EAZO;AAaVY,aAAO,EAAE;AAbC,KAAX,CAPD,CADD;AAyBA;;AAnCmH;;AAArHC","names":["S","styled_1","circle","DefaultLinkPointWidget","React","Component","constructor","props","state","selected","render","point","cx","getPosition","x","cy","y","r","fill","isSelected","colorSelected","color","PointTop","className","onMouseLeave","setState","onMouseEnter","getID","getLink","opacity","exports"],"sources":["C:\\Users\\nairr\\app-ui\\app-ui\\node_modules\\@projectstorm\\react-diagrams-defaults\\src\\link\\DefaultLinkPointWidget.tsx"],"sourcesContent":["import * as React from 'react';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport styled from '@emotion/styled';\n\nexport interface DefaultLinkPointWidgetProps {\n\tpoint: PointModel;\n\tcolor?: string;\n\tcolorSelected: string;\n}\n\nexport interface DefaultLinkPointWidgetState {\n\tselected: boolean;\n}\n\nnamespace S {\n\texport const PointTop = styled.circle`\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class DefaultLinkPointWidget extends React.Component<DefaultLinkPointWidgetProps, DefaultLinkPointWidgetState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { point } = this.props;\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<circle\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={5}\n\t\t\t\t\tfill={this.state.selected || this.props.point.isSelected() ? this.props.colorSelected : this.props.color}\n\t\t\t\t/>\n\t\t\t\t<S.PointTop\n\t\t\t\t\tclassName=\"point\"\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t\t}}\n\t\t\t\t\tdata-id={point.getID()}\n\t\t\t\t\tdata-linkid={point.getLink().getID()}\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={15}\n\t\t\t\t\topacity={0.0}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}