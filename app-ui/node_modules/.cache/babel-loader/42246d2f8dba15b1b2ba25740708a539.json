{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransformLayerWidget = void 0;\n\nconst React = require(\"react\");\n\nconst styled_1 = require(\"@emotion/styled\");\n\nconst react_1 = require(\"@emotion/react\");\n\nvar S;\n\n(function (S) {\n  const shared = react_1.css`\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tposition: absolute;\n\t\tpointer-events: none;\n\t\ttransform-origin: 0 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t`;\n  S.DivLayer = styled_1.default.div`\n\t\t${shared}\n\t`;\n  S.SvgLayer = styled_1.default.svg`\n\t\t${shared}\n\t`;\n})(S || (S = {}));\n\nclass TransformLayerWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getTransform() {\n    const model = this.props.layer.getParent();\n    return `\n\t\t\ttranslate(\n\t\t\t\t${model.getOffsetX()}px,\n\t\t\t\t${model.getOffsetY()}px)\n\t\t\tscale(\n\t\t\t\t${model.getZoomLevel() / 100.0}\n\t\t\t)\n  \t`;\n  }\n\n  getTransformStyle() {\n    if (this.props.layer.getOptions().transformed) {\n      return {\n        transform: this.getTransform()\n      };\n    }\n\n    return {};\n  }\n\n  render() {\n    if (this.props.layer.getOptions().isSvg) {\n      return React.createElement(S.SvgLayer, {\n        style: this.getTransformStyle()\n      }, this.props.children);\n    }\n\n    return React.createElement(S.DivLayer, {\n      style: this.getTransformStyle()\n    }, this.props.children);\n  }\n\n}\n\nexports.TransformLayerWidget = TransformLayerWidget;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAGA;;AAMA,IAAUA,CAAV;;AAAA,WAAUA,CAAV,EAAW;AACV,QAAMC,MAAM,GAAGC,WAAG;;;;;;;;;;;EAAlB;AAaaF,eAAWG,iBAAOC,GAAG;IAC/BH,MAAM;EADI;AAIAD,eAAWG,iBAAOE,GAAG;IAC/BJ,MAAM;EADI;AAGb,CArBD,EAAUD,CAAC,KAADA,CAAC,MAAX;;AAuBA,MAAaM,oBAAb,SAA0CC,KAAK,CAACC,SAAhD,CAAoF;AACnFC,cAAYC,KAAZ,EAA4C;AAC3C,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACA;;AAEDC,cAAY;AACX,UAAMC,KAAK,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,SAAjB,EAAd;AACA,WAAO;;MAEHF,KAAK,CAACG,UAAN,EAAkB;MAClBH,KAAK,CAACI,UAAN,EAAkB;;MAElBJ,KAAK,CAACK,YAAN,KAAuB,KAAK;;IALhC;AAQA;;AAEDC,mBAAiB;AAChB,QAAI,KAAKT,KAAL,CAAWI,KAAX,CAAiBM,UAAjB,GAA8BC,WAAlC,EAA+C;AAC9C,aAAO;AACNC,iBAAS,EAAE,KAAKV,YAAL;AADL,OAAP;AAGA;;AACD,WAAO,EAAP;AACA;;AAEDW,QAAM;AACL,QAAI,KAAKb,KAAL,CAAWI,KAAX,CAAiBM,UAAjB,GAA8BI,KAAlC,EAAyC;AACxC,aAAOjB,oBAACP,CAAC,CAACyB,QAAH,EAAW;AAACC,aAAK,EAAE,KAAKP,iBAAL;AAAR,OAAX,EAA8C,KAAKT,KAAL,CAAWiB,QAAzD,CAAP;AACA;;AACD,WAAOpB,oBAACP,CAAC,CAAC4B,QAAH,EAAW;AAACF,WAAK,EAAE,KAAKP,iBAAL;AAAR,KAAX,EAA8C,KAAKT,KAAL,CAAWiB,QAAzD,CAAP;AACA;;AAhCkF;;AAApFE","names":["S","shared","react_1","styled_1","div","svg","TransformLayerWidget","React","Component","constructor","props","state","getTransform","model","layer","getParent","getOffsetX","getOffsetY","getZoomLevel","getTransformStyle","getOptions","transformed","transform","render","isSvg","SvgLayer","style","children","DivLayer","exports"],"sources":["C:\\Users\\nairr\\app-ui\\app-ui\\node_modules\\@projectstorm\\react-canvas-core\\src\\entities\\layer\\TransformLayerWidget.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { CSSProperties } from 'react';\nimport { LayerModel } from './LayerModel';\nimport { css } from '@emotion/react';\n\nexport interface TransformLayerWidgetProps {\n\tlayer: LayerModel;\n}\n\nnamespace S {\n\tconst shared = css`\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tposition: absolute;\n\t\tpointer-events: none;\n\t\ttransform-origin: 0 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t`;\n\n\texport const DivLayer = styled.div`\n\t\t${shared}\n\t`;\n\n\texport const SvgLayer = styled.svg`\n\t\t${shared}\n\t`;\n}\n\nexport class TransformLayerWidget extends React.Component<TransformLayerWidgetProps> {\n\tconstructor(props: TransformLayerWidgetProps) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tgetTransform() {\n\t\tconst model = this.props.layer.getParent();\n\t\treturn `\n\t\t\ttranslate(\n\t\t\t\t${model.getOffsetX()}px,\n\t\t\t\t${model.getOffsetY()}px)\n\t\t\tscale(\n\t\t\t\t${model.getZoomLevel() / 100.0}\n\t\t\t)\n  \t`;\n\t}\n\n\tgetTransformStyle(): CSSProperties {\n\t\tif (this.props.layer.getOptions().transformed) {\n\t\t\treturn {\n\t\t\t\ttransform: this.getTransform()\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\trender() {\n\t\tif (this.props.layer.getOptions().isSvg) {\n\t\t\treturn <S.SvgLayer style={this.getTransformStyle()}>{this.props.children}</S.SvgLayer>;\n\t\t}\n\t\treturn <S.DivLayer style={this.getTransformStyle()}>{this.props.children}</S.DivLayer>;\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}