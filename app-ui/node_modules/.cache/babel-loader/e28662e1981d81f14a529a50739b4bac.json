{"ast":null,"code":"var BiAStarFinder = require('./BiAStarFinder');\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\n\n\nfunction BiBestFirstFinder(opt) {\n  BiAStarFinder.call(this, opt);\n  var orig = this.heuristic;\n\n  this.heuristic = function (dx, dy) {\n    return orig(dx, dy) * 1000000;\n  };\n}\n\nBiBestFirstFinder.prototype = new BiAStarFinder();\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\nmodule.exports = BiBestFirstFinder;","map":{"version":3,"sources":["C:/Users/nairr/app-ui/app-ui/node_modules/pathfinding/src/finders/BiBestFirstFinder.js"],"names":["BiAStarFinder","require","BiBestFirstFinder","opt","call","orig","heuristic","dx","dy","prototype","constructor","module","exports"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC5BH,EAAAA,aAAa,CAACI,IAAd,CAAmB,IAAnB,EAAyBD,GAAzB;AAEA,MAAIE,IAAI,GAAG,KAAKC,SAAhB;;AACA,OAAKA,SAAL,GAAiB,UAASC,EAAT,EAAaC,EAAb,EAAiB;AAC9B,WAAOH,IAAI,CAACE,EAAD,EAAKC,EAAL,CAAJ,GAAe,OAAtB;AACH,GAFD;AAGH;;AAEDN,iBAAiB,CAACO,SAAlB,GAA8B,IAAIT,aAAJ,EAA9B;AACAE,iBAAiB,CAACO,SAAlB,CAA4BC,WAA5B,GAA0CR,iBAA1C;AAEAS,MAAM,CAACC,OAAP,GAAiBV,iBAAjB","sourcesContent":["var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BiBestFirstFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBiBestFirstFinder.prototype = new BiAStarFinder();\r\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\r\n\r\nmodule.exports = BiBestFirstFinder;\r\n"]},"metadata":{},"sourceType":"script"}