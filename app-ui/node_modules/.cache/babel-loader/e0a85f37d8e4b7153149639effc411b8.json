{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nairr\\\\app-ui\\\\app-ui\\\\src\\\\BasicConnection.jsx\";\nimport createEngine, { DefaultLinkModel, DefaultNodeModel, DiagramModel } from '@projectstorm/react-diagrams';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core'; // create an instance of the engine with all the defaults\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst engine = createEngine(); // node 1\n\nconst node1 = new DefaultNodeModel({\n  name: 'Source',\n  color: 'rgb(0,192,255)'\n});\nnode1.setPosition(100, 100);\nlet port1 = node1.addOutPort('Out'); // node 2\n\nconst node2 = new DefaultNodeModel({\n  name: 'Destination',\n  color: 'rgb(0,192,255)'\n});\nnode2.setPosition(100, 100);\nlet port2 = node2.addOutPort('Out'); // link them and add a label to the link\n\nconst link = port1.link < DefaultLinkModel > port2;\nconst model = new DiagramModel();\nmodel.addAll(node1, node2, link);\nengine.setModel(model);\n\n/*#__PURE__*/\n_jsxDEV(CanvasWidget, {\n  engine: engine\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 1\n}, this);\n\nconst BasicConnection = props => {\n  const {\n    point,\n    previousPoint\n  } = props;\n  const angle = 90 + Math.atan2(point.getPosition().y - previousPoint.getPosition().y, point.getPosition().x - previousPoint.getPosition().x) * 180 / Math.PI; //translate(50, -10),\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"arrow\",\n    transform: 'translate(' + point.getPosition().x + ', ' + point.getPosition().y + ')',\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      style: {\n        transform: 'rotate(' + angle + 'deg)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: 'translate(0, -3)',\n        children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n          points: \"0,10 8,30 -8,30\",\n          fill: props.color,\n          \"data-id\": point.getID(),\n          \"data-linkid\": point.getLink().getID()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BasicConnection;\nexport default BasicConnection;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicConnection\");","map":{"version":3,"sources":["C:/Users/nairr/app-ui/app-ui/src/BasicConnection.jsx"],"names":["createEngine","DefaultLinkModel","DefaultNodeModel","DiagramModel","CanvasWidget","engine","node1","name","color","setPosition","port1","addOutPort","node2","port2","link","model","addAll","setModel","BasicConnection","props","point","previousPoint","angle","Math","atan2","getPosition","y","x","PI","transform","getID","getLink"],"mappings":";AAAA,OAAOA,YAAP,IACIC,gBADJ,EAEIC,gBAFJ,EAGIC,YAHJ,QAIO,8BAJP;AAMA,SACIC,YADJ,QAEO,iCAFP,C,CAGA;;;AACA,MAAMC,MAAM,GAAGL,YAAY,EAA3B,C,CAEA;;AACA,MAAMM,KAAK,GAAG,IAAIJ,gBAAJ,CAAqB;AAC/BK,EAAAA,IAAI,EAAE,QADyB;AAE/BC,EAAAA,KAAK,EAAE;AAFwB,CAArB,CAAd;AAIAF,KAAK,CAACG,WAAN,CAAkB,GAAlB,EAAuB,GAAvB;AACA,IAAIC,KAAK,GAAGJ,KAAK,CAACK,UAAN,CAAiB,KAAjB,CAAZ,C,CAEA;;AACA,MAAMC,KAAK,GAAG,IAAIV,gBAAJ,CAAqB;AAC/BK,EAAAA,IAAI,EAAE,aADyB;AAE/BC,EAAAA,KAAK,EAAE;AAFwB,CAArB,CAAd;AAIAI,KAAK,CAACH,WAAN,CAAkB,GAAlB,EAAuB,GAAvB;AACA,IAAII,KAAK,GAAGD,KAAK,CAACD,UAAN,CAAiB,KAAjB,CAAZ,C,CAEA;;AACA,MAAMG,IAAI,GAAGJ,KAAK,CAACI,IAAN,GAAab,gBAAb,GAAiCY,KAA9C;AAEA,MAAME,KAAK,GAAG,IAAIZ,YAAJ,EAAd;AACAY,KAAK,CAACC,MAAN,CAAaV,KAAb,EAAoBM,KAApB,EAA2BE,IAA3B;AACAT,MAAM,CAACY,QAAP,CAAgBF,KAAhB;;AAEA;AAAA,QAAC,YAAD;AAAc,EAAA,MAAM,EAAEV;AAAtB;AAAA;AAAA;AAAA;AAAA;;AAEA,MAAMa,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA2BF,KAAjC;AAEA,QAAMG,KAAK,GACP,KACCC,IAAI,CAACC,KAAL,CACGJ,KAAK,CAACK,WAAN,GAAoBC,CAApB,GAAwBL,aAAa,CAACI,WAAd,GAA4BC,CADvD,EAEGN,KAAK,CAACK,WAAN,GAAoBE,CAApB,GAAwBN,aAAa,CAACI,WAAd,GAA4BE,CAFvD,IAIG,GAJJ,GAKAJ,IAAI,CAACK,EAPT,CAH+B,CAY/B;;AACA,sBACI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAqB,IAAA,SAAS,EAAE,eAAeR,KAAK,CAACK,WAAN,GAAoBE,CAAnC,GAAuC,IAAvC,GAA8CP,KAAK,CAACK,WAAN,GAAoBC,CAAlE,GAAsE,GAAtG;AAAA,2BACI;AAAG,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE,YAAYP,KAAZ,GAAoB;AAAjC,OAAV;AAAA,6BACI;AAAG,QAAA,SAAS,EAAE,kBAAd;AAAA,+BACI;AACI,UAAA,MAAM,EAAC,iBADX;AAEI,UAAA,IAAI,EAAEH,KAAK,CAACX,KAFhB;AAGI,qBAASY,KAAK,CAACU,KAAN,EAHb;AAII,yBAAaV,KAAK,CAACW,OAAN,GAAgBD,KAAhB;AAJjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA3BD;;KAAMZ,e;AA4BN,eAAeA,eAAf","sourcesContent":["import createEngine, {\r\n    DefaultLinkModel,\r\n    DefaultNodeModel,\r\n    DiagramModel\r\n} from '@projectstorm/react-diagrams';\r\n\r\nimport {\r\n    CanvasWidget\r\n} from '@projectstorm/react-canvas-core';\r\n// create an instance of the engine with all the defaults\r\nconst engine = createEngine();\r\n\r\n// node 1\r\nconst node1 = new DefaultNodeModel({\r\n    name: 'Source',\r\n    color: 'rgb(0,192,255)',\r\n});\r\nnode1.setPosition(100, 100);\r\nlet port1 = node1.addOutPort('Out');\r\n\r\n// node 2\r\nconst node2 = new DefaultNodeModel({\r\n    name: 'Destination',\r\n    color: 'rgb(0,192,255)',\r\n});\r\nnode2.setPosition(100, 100);\r\nlet port2 = node2.addOutPort('Out');\r\n\r\n// link them and add a label to the link\r\nconst link = port1.link < DefaultLinkModel > (port2);\r\n\r\nconst model = new DiagramModel();\r\nmodel.addAll(node1, node2, link);\r\nengine.setModel(model);\r\n\r\n<CanvasWidget engine={engine} />\r\n\r\nconst BasicConnection = (props) => {\r\n    const { point, previousPoint } = props;\r\n\r\n    const angle =\r\n        90 +\r\n        (Math.atan2(\r\n            point.getPosition().y - previousPoint.getPosition().y,\r\n            point.getPosition().x - previousPoint.getPosition().x\r\n        ) *\r\n            180) /\r\n        Math.PI;\r\n\r\n    //translate(50, -10),\r\n    return (\r\n        <g className=\"arrow\" transform={'translate(' + point.getPosition().x + ', ' + point.getPosition().y + ')'}>\r\n            <g style={{ transform: 'rotate(' + angle + 'deg)' }}>\r\n                <g transform={'translate(0, -3)'}>\r\n                    <polygon\r\n                        points=\"0,10 8,30 -8,30\"\r\n                        fill={props.color}\r\n                        data-id={point.getID()}\r\n                        data-linkid={point.getLink().getID()}\r\n                    />\r\n                </g>\r\n            </g>\r\n        </g>\r\n    );\r\n};\r\nexport default BasicConnection;"]},"metadata":{},"sourceType":"module"}