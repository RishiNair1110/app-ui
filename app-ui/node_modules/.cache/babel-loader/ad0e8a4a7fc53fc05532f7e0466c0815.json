{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DeleteItemsAction = void 0;\n\nconst Action_1 = require(\"../core-actions/Action\");\n\nconst _ = require(\"lodash\");\n/**\n * Deletes all selected items\n */\n\n\nclass DeleteItemsAction extends Action_1.Action {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const keyCodes = options.keyCodes || [46, 8];\n    const modifiers = Object.assign({\n      ctrlKey: false,\n      shiftKey: false,\n      altKey: false,\n      metaKey: false\n    }, options.modifiers);\n    super({\n      type: Action_1.InputType.KEY_DOWN,\n      fire: event => {\n        const {\n          keyCode,\n          ctrlKey,\n          shiftKey,\n          altKey,\n          metaKey\n        } = event.event;\n\n        if (keyCodes.indexOf(keyCode) !== -1 && _.isEqual({\n          ctrlKey,\n          shiftKey,\n          altKey,\n          metaKey\n        }, modifiers)) {\n          _.forEach(this.engine.getModel().getSelectedEntities(), model => {\n            // only delete items which are not locked\n            if (!model.isLocked()) {\n              model.remove();\n            }\n          });\n\n          this.engine.repaintCanvas();\n        }\n      }\n    });\n  }\n\n}\n\nexports.DeleteItemsAction = DeleteItemsAction;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;AAYA;;;;;AAGA,MAAaA,iBAAb,SAAuCC,eAAvC,CAA6C;AAC5CC,gBAAkD;AAAA,QAAtCC,OAAsC,uEAAF,EAAE;AACjD,UAAMC,QAAQ,GAAGD,OAAO,CAACC,QAAR,IAAoB,CAAC,EAAD,EAAK,CAAL,CAArC;AACA,UAAMC,SAAS;AACdC,aAAO,EAAE,KADK;AAEdC,cAAQ,EAAE,KAFI;AAGdC,YAAM,EAAE,KAHM;AAIdC,aAAO,EAAE;AAJK,OAKXN,OAAO,CAACE,SALG,CAAf;AAQA,UAAM;AACLK,UAAI,EAAET,mBAAUU,QADX;AAELC,UAAI,EAAGC,KAAD,IAAsC;AAC3C,cAAM;AAAEC,iBAAF;AAAWR,iBAAX;AAAoBC,kBAApB;AAA8BC,gBAA9B;AAAsCC;AAAtC,YAAkDI,KAAK,CAACA,KAA9D;;AAEA,YAAIT,QAAQ,CAACW,OAAT,CAAiBD,OAAjB,MAA8B,CAAC,CAA/B,IAAoCE,CAAC,CAACC,OAAF,CAAU;AAAEX,iBAAF;AAAWC,kBAAX;AAAqBC,gBAArB;AAA6BC;AAA7B,SAAV,EAAkDJ,SAAlD,CAAxC,EAAsG;AACrGW,WAAC,CAACE,OAAF,CAAU,KAAKC,MAAL,CAAYC,QAAZ,GAAuBC,mBAAvB,EAAV,EAAyDC,KAAD,IAAU;AACjE;AACA,gBAAI,CAACA,KAAK,CAACC,QAAN,EAAL,EAAuB;AACtBD,mBAAK,CAACE,MAAN;AACA;AACD,WALD;;AAMA,eAAKL,MAAL,CAAYM,aAAZ;AACA;AACD;AAdI,KAAN;AAgBA;;AA3B2C;;AAA7CC","names":["DeleteItemsAction","Action_1","constructor","options","keyCodes","modifiers","ctrlKey","shiftKey","altKey","metaKey","type","KEY_DOWN","fire","event","keyCode","indexOf","_","isEqual","forEach","engine","getModel","getSelectedEntities","model","isLocked","remove","repaintCanvas","exports"],"sources":["C:\\Users\\nairr\\app-ui\\app-ui\\node_modules\\@projectstorm\\react-canvas-core\\src\\actions\\DeleteItemsAction.ts"],"sourcesContent":["import { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { KeyboardEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface DeleteItemsActionOptions {\n\tkeyCodes?: number[];\n\tmodifiers?: {\n\t\tctrlKey?: boolean;\n\t\tshiftKey?: boolean;\n\t\taltKey?: boolean;\n\t\tmetaKey?: boolean;\n\t};\n}\n\n/**\n * Deletes all selected items\n */\nexport class DeleteItemsAction extends Action {\n\tconstructor(options: DeleteItemsActionOptions = {}) {\n\t\tconst keyCodes = options.keyCodes || [46, 8];\n\t\tconst modifiers = {\n\t\t\tctrlKey: false,\n\t\t\tshiftKey: false,\n\t\t\taltKey: false,\n\t\t\tmetaKey: false,\n\t\t\t...options.modifiers\n\t\t};\n\n\t\tsuper({\n\t\t\ttype: InputType.KEY_DOWN,\n\t\t\tfire: (event: ActionEvent<KeyboardEvent>) => {\n\t\t\t\tconst { keyCode, ctrlKey, shiftKey, altKey, metaKey } = event.event;\n\n\t\t\t\tif (keyCodes.indexOf(keyCode) !== -1 && _.isEqual({ ctrlKey, shiftKey, altKey, metaKey }, modifiers)) {\n\t\t\t\t\t_.forEach(this.engine.getModel().getSelectedEntities(), (model) => {\n\t\t\t\t\t\t// only delete items which are not locked\n\t\t\t\t\t\tif (!model.isLocked()) {\n\t\t\t\t\t\t\tmodel.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}