{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BezierCurve = exports.BezierCurvepPoints = void 0;\n\nconst Point_1 = require(\"./Point\");\n\nconst Polygon_1 = require(\"./Polygon\");\n\nvar BezierCurvepPoints;\n\n(function (BezierCurvepPoints) {\n  BezierCurvepPoints[BezierCurvepPoints[\"SOURCE\"] = 0] = \"SOURCE\";\n  BezierCurvepPoints[BezierCurvepPoints[\"SOURCE_CONTROL\"] = 1] = \"SOURCE_CONTROL\";\n  BezierCurvepPoints[BezierCurvepPoints[\"TARGET_CONTROL\"] = 2] = \"TARGET_CONTROL\";\n  BezierCurvepPoints[BezierCurvepPoints[\"TARGET\"] = 3] = \"TARGET\";\n})(BezierCurvepPoints = exports.BezierCurvepPoints || (exports.BezierCurvepPoints = {}));\n\nclass BezierCurve extends Polygon_1.Polygon {\n  constructor() {\n    super([new Point_1.Point(0, 0), new Point_1.Point(0, 0), new Point_1.Point(0, 0), new Point_1.Point(0, 0)]);\n  }\n\n  getSVGCurve() {\n    return `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n  }\n\n  setPoints(points) {\n    if (points.length !== 4) {\n      throw new Error('BezierCurve must have extactly 4 points');\n    }\n\n    super.setPoints(points);\n  }\n\n  getSource() {\n    return this.points[BezierCurvepPoints.SOURCE];\n  }\n\n  getSourceControl() {\n    return this.points[BezierCurvepPoints.SOURCE_CONTROL];\n  }\n\n  getTargetControl() {\n    return this.points[BezierCurvepPoints.TARGET_CONTROL];\n  }\n\n  getTarget() {\n    return this.points[BezierCurvepPoints.TARGET];\n  }\n\n  setSource(point) {\n    this.points[BezierCurvepPoints.SOURCE] = point;\n  }\n\n  setSourceControl(point) {\n    this.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n  }\n\n  setTargetControl(point) {\n    this.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n  }\n\n  setTarget(point) {\n    this.points[BezierCurvepPoints.TARGET] = point;\n  }\n\n}\n\nexports.BezierCurve = BezierCurve;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAEA,IAAYA,kBAAZ;;AAAA,WAAYA,kBAAZ,EAA8B;AAC7BA;AACAA;AACAA;AACAA;AACA,CALD,EAAYA,kBAAkB,GAAlBC,4DAAkB,EAAlB,CAAZ;;AAOA,MAAaC,WAAb,SAAiCC,iBAAjC,CAAwC;AACvCC;AACC,UAAM,CAAC,IAAIC,aAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,IAAIA,aAAJ,CAAU,CAAV,EAAa,CAAb,CAAlB,EAAmC,IAAIA,aAAJ,CAAU,CAAV,EAAa,CAAb,CAAnC,EAAoD,IAAIA,aAAJ,CAAU,CAAV,EAAa,CAAb,CAApD,CAAN;AACA;;AAEDC,aAAW;AACV,WAAO,IAAI,KAAKC,SAAL,GAAiBC,KAAjB,EAAwB,KAAK,KAAKC,gBAAL,GAAwBD,KAAxB,EAA+B,KAAK,KAAKE,gBAAL,GAAwBF,KAAxB,EAA+B,KAAK,KAAKG,SAAL,GAAiBH,KAAjB,EAAwB,EAAxI;AACA;;AAEDI,WAAS,CAACC,MAAD,EAAgB;AACxB,QAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACxB,YAAM,IAAIC,KAAJ,CAAU,yCAAV,CAAN;AACA;;AACD,UAAMH,SAAN,CAAgBC,MAAhB;AACA;;AAEDN,WAAS;AACR,WAAO,KAAKM,MAAL,CAAYb,kBAAkB,CAACgB,MAA/B,CAAP;AACA;;AAEDP,kBAAgB;AACf,WAAO,KAAKI,MAAL,CAAYb,kBAAkB,CAACiB,cAA/B,CAAP;AACA;;AAEDP,kBAAgB;AACf,WAAO,KAAKG,MAAL,CAAYb,kBAAkB,CAACkB,cAA/B,CAAP;AACA;;AAEDP,WAAS;AACR,WAAO,KAAKE,MAAL,CAAYb,kBAAkB,CAACmB,MAA/B,CAAP;AACA;;AAEDC,WAAS,CAACC,KAAD,EAAa;AACrB,SAAKR,MAAL,CAAYb,kBAAkB,CAACgB,MAA/B,IAAyCK,KAAzC;AACA;;AAEDC,kBAAgB,CAACD,KAAD,EAAa;AAC5B,SAAKR,MAAL,CAAYb,kBAAkB,CAACiB,cAA/B,IAAiDI,KAAjD;AACA;;AAEDE,kBAAgB,CAACF,KAAD,EAAa;AAC5B,SAAKR,MAAL,CAAYb,kBAAkB,CAACkB,cAA/B,IAAiDG,KAAjD;AACA;;AAEDG,WAAS,CAACH,KAAD,EAAa;AACrB,SAAKR,MAAL,CAAYb,kBAAkB,CAACmB,MAA/B,IAAyCE,KAAzC;AACA;;AA9CsC;;AAAxCpB","names":["BezierCurvepPoints","exports","BezierCurve","Polygon_1","constructor","Point_1","getSVGCurve","getSource","toSVG","getSourceControl","getTargetControl","getTarget","setPoints","points","length","Error","SOURCE","SOURCE_CONTROL","TARGET_CONTROL","TARGET","setSource","point","setSourceControl","setTargetControl","setTarget"],"sources":["C:\\Users\\nairr\\app-ui\\app-ui\\node_modules\\@projectstorm\\geometry\\src\\BezierCurve.ts"],"sourcesContent":["import { Point } from './Point';\nimport { Polygon } from './Polygon';\n\nexport enum BezierCurvepPoints {\n\tSOURCE = 0,\n\tSOURCE_CONTROL = 1,\n\tTARGET_CONTROL = 2,\n\tTARGET = 3\n}\n\nexport class BezierCurve extends Polygon {\n\tconstructor() {\n\t\tsuper([new Point(0, 0), new Point(0, 0), new Point(0, 0), new Point(0, 0)]);\n\t}\n\n\tgetSVGCurve(): string {\n\t\treturn `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow new Error('BezierCurve must have extactly 4 points');\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tgetSource(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE];\n\t}\n\n\tgetSourceControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE_CONTROL];\n\t}\n\n\tgetTargetControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET_CONTROL];\n\t}\n\n\tgetTarget(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET];\n\t}\n\n\tsetSource(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE] = point;\n\t}\n\n\tsetSourceControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n\t}\n\n\tsetTargetControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n\t}\n\n\tsetTarget(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET] = point;\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}