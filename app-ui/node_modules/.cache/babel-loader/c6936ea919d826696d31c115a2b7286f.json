{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultPortModel = void 0;\n\nconst react_diagrams_core_1 = require(\"@projectstorm/react-diagrams-core\");\n\nconst DefaultLinkModel_1 = require(\"../link/DefaultLinkModel\");\n\nclass DefaultPortModel extends react_diagrams_core_1.PortModel {\n  constructor(options, name, label) {\n    if (!!name) {\n      options = {\n        in: !!options,\n        name: name,\n        label: label\n      };\n    }\n\n    options = options;\n    super(Object.assign({\n      label: options.label || options.name,\n      alignment: options.in ? react_diagrams_core_1.PortModelAlignment.LEFT : react_diagrams_core_1.PortModelAlignment.RIGHT,\n      type: 'default'\n    }, options));\n  }\n\n  deserialize(event) {\n    super.deserialize(event);\n    this.options.in = event.data.in;\n    this.options.label = event.data.label;\n  }\n\n  serialize() {\n    return Object.assign(Object.assign({}, super.serialize()), {\n      in: this.options.in,\n      label: this.options.label\n    });\n  }\n\n  link(port, factory) {\n    let link = this.createLinkModel(factory);\n    link.setSourcePort(this);\n    link.setTargetPort(port);\n    return link;\n  }\n\n  canLinkToPort(port) {\n    if (port instanceof DefaultPortModel) {\n      return this.options.in !== port.getOptions().in;\n    }\n\n    return true;\n  }\n\n  createLinkModel(factory) {\n    let link = super.createLinkModel();\n\n    if (!link && factory) {\n      return factory.generateModel({});\n    }\n\n    return link || new DefaultLinkModel_1.DefaultLinkModel();\n  }\n\n}\n\nexports.DefaultPortModel = DefaultPortModel;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAOA;;AAaA,MAAaA,gBAAb,SAAsCC,+BAAtC,CAAyE;AAGxEC,cAAYC,OAAZ,EAAwDC,IAAxD,EAAuEC,KAAvE,EAAqF;AACpF,QAAI,CAAC,CAACD,IAAN,EAAY;AACXD,aAAO,GAAG;AACTG,UAAE,EAAE,CAAC,CAACH,OADG;AAETC,YAAI,EAAEA,IAFG;AAGTC,aAAK,EAAEA;AAHE,OAAV;AAKA;;AACDF,WAAO,GAAGA,OAAV;AACA,UAAKI;AACJF,WAAK,EAAEF,OAAO,CAACE,KAAR,IAAiBF,OAAO,CAACC,IAD5B;AAEJI,eAAS,EAAEL,OAAO,CAACG,EAAR,GAAaL,yCAAmBQ,IAAhC,GAAuCR,yCAAmBS,KAFjE;AAGJC,UAAI,EAAE;AAHF,OAIDR,OAJC,CAAL;AAMA;;AAEDS,aAAW,CAACC,KAAD,EAA8B;AACxC,UAAMD,WAAN,CAAkBC,KAAlB;AACA,SAAKV,OAAL,CAAaG,EAAb,GAAkBO,KAAK,CAACC,IAAN,CAAWR,EAA7B;AACA,SAAKH,OAAL,CAAaE,KAAb,GAAqBQ,KAAK,CAACC,IAAN,CAAWT,KAAhC;AACA;;AAEDU,WAAS;AACR,2CACI,MAAMA,SAAN,EADJ,GACqB;AACpBT,QAAE,EAAE,KAAKH,OAAL,CAAaG,EADG;AAEpBD,WAAK,EAAE,KAAKF,OAAL,CAAaE;AAFA,KADrB;AAKA;;AAEDW,MAAI,CAAsBC,IAAtB,EAAuCC,OAAvC,EAAwE;AAC3E,QAAIF,IAAI,GAAG,KAAKG,eAAL,CAAqBD,OAArB,CAAX;AACAF,QAAI,CAACI,aAAL,CAAmB,IAAnB;AACAJ,QAAI,CAACK,aAAL,CAAmBJ,IAAnB;AACA,WAAOD,IAAP;AACA;;AAEDM,eAAa,CAACL,IAAD,EAAgB;AAC5B,QAAIA,IAAI,YAAYjB,gBAApB,EAAsC;AACrC,aAAO,KAAKG,OAAL,CAAaG,EAAb,KAAoBW,IAAI,CAACM,UAAL,GAAkBjB,EAA7C;AACA;;AACD,WAAO,IAAP;AACA;;AAEDa,iBAAe,CAACD,OAAD,EAA0C;AACxD,QAAIF,IAAI,GAAG,MAAMG,eAAN,EAAX;;AACA,QAAI,CAACH,IAAD,IAASE,OAAb,EAAsB;AACrB,aAAOA,OAAO,CAACM,aAAR,CAAsB,EAAtB,CAAP;AACA;;AACD,WAAOR,IAAI,IAAI,IAAIS,mCAAJ,EAAf;AACA;;AAtDuE;;AAAzEC","names":["DefaultPortModel","react_diagrams_core_1","constructor","options","name","label","in","Object","alignment","LEFT","RIGHT","type","deserialize","event","data","serialize","link","port","factory","createLinkModel","setSourcePort","setTargetPort","canLinkToPort","getOptions","generateModel","DefaultLinkModel_1","exports"],"sources":["C:\\Users\\nairr\\app-ui\\app-ui\\node_modules\\@projectstorm\\react-diagrams-defaults\\src\\port\\DefaultPortModel.ts"],"sourcesContent":["import {\n\tLinkModel,\n\tPortModel,\n\tPortModelAlignment,\n\tPortModelGenerics,\n\tPortModelOptions\n} from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from '../link/DefaultLinkModel';\nimport { AbstractModelFactory, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultPortModelOptions extends PortModelOptions {\n\tlabel?: string;\n\tin?: boolean;\n\ttype?: string;\n}\n\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\n\tOPTIONS: DefaultPortModelOptions;\n}\n\nexport class DefaultPortModel extends PortModel<DefaultPortModelGenerics> {\n\tconstructor(isIn: boolean, name?: string, label?: string);\n\tconstructor(options: DefaultPortModelOptions);\n\tconstructor(options: DefaultPortModelOptions | boolean, name?: string, label?: string) {\n\t\tif (!!name) {\n\t\t\toptions = {\n\t\t\t\tin: !!options,\n\t\t\t\tname: name,\n\t\t\t\tlabel: label\n\t\t\t};\n\t\t}\n\t\toptions = options as DefaultPortModelOptions;\n\t\tsuper({\n\t\t\tlabel: options.label || options.name,\n\t\t\talignment: options.in ? PortModelAlignment.LEFT : PortModelAlignment.RIGHT,\n\t\t\ttype: 'default',\n\t\t\t...options\n\t\t});\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.in = event.data.in;\n\t\tthis.options.label = event.data.label;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tin: this.options.in,\n\t\t\tlabel: this.options.label\n\t\t};\n\t}\n\n\tlink<T extends LinkModel>(port: PortModel, factory?: AbstractModelFactory<T>): T {\n\t\tlet link = this.createLinkModel(factory);\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(port);\n\t\treturn link as T;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\tif (port instanceof DefaultPortModel) {\n\t\t\treturn this.options.in !== port.getOptions().in;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcreateLinkModel(factory?: AbstractModelFactory<LinkModel>): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\tif (!link && factory) {\n\t\t\treturn factory.generateModel({});\n\t\t}\n\t\treturn link || new DefaultLinkModel();\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}