{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"lodash\"), require(\"react\"));else if (typeof define === \"function\" && define.amd) define([\"_\", \"react\"], factory);else if (typeof exports === \"object\") exports[\"storm-react-diagrams\"] = factory(require(\"lodash\"), require(\"react\"));else root[\"storm-react-diagrams\"] = factory(root[\"_\"], root[\"React\"]);\n})(window, function (__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\n  return function (modules) {\n    var installedModules = {};\n\n    function __webpack_require__(moduleId) {\n      if (installedModules[moduleId]) {\n        return installedModules[moduleId].exports;\n      }\n\n      var module = installedModules[moduleId] = {\n        i: moduleId,\n        l: false,\n        exports: {}\n      };\n      modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n      module.l = true;\n      return module.exports;\n    }\n\n    __webpack_require__.m = modules;\n    __webpack_require__.c = installedModules;\n\n    __webpack_require__.d = function (exports, name, getter) {\n      if (!__webpack_require__.o(exports, name)) {\n        Object.defineProperty(exports, name, {\n          configurable: false,\n          enumerable: true,\n          get: getter\n        });\n      }\n    };\n\n    __webpack_require__.r = function (exports) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n    };\n\n    __webpack_require__.n = function (module) {\n      var getter = module && module.__esModule ? function getDefault() {\n        return module[\"default\"];\n      } : function getModuleExports() {\n        return module;\n      };\n\n      __webpack_require__.d(getter, \"a\", getter);\n\n      return getter;\n    };\n\n    __webpack_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    };\n\n    __webpack_require__.p = \"\";\n    return __webpack_require__(__webpack_require__.s = 45);\n  }([function (module, exports) {\n    module.exports = __WEBPACK_EXTERNAL_MODULE__0__;\n  }, function (module, exports) {\n    module.exports = __WEBPACK_EXTERNAL_MODULE__1__;\n  }, function (module, exports) {\n    var DiagonalMovement = {\n      Always: 1,\n      Never: 2,\n      IfAtMostOneObstacle: 3,\n      OnlyWhenNoObstacles: 4\n    };\n    module.exports = DiagonalMovement;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var BaseWidget = function (_super) {\n      __extends(BaseWidget, _super);\n\n      function BaseWidget(name, props) {\n        var _this = _super.call(this, props) || this;\n\n        _this.className = name;\n        return _this;\n      }\n\n      BaseWidget.prototype.bem = function (selector) {\n        return (this.props.baseClass || this.className) + selector + \" \";\n      };\n\n      BaseWidget.prototype.getClassName = function () {\n        return (this.props.baseClass || this.className) + \" \" + (this.props.className ? this.props.className + \" \" : \"\");\n      };\n\n      BaseWidget.prototype.getProps = function () {\n        return __assign({}, this.props.extraProps || {}, {\n          className: this.getClassName()\n        });\n      };\n\n      return BaseWidget;\n    }(React.Component);\n\n    exports.BaseWidget = BaseWidget;\n  }, function (module, exports) {\n    function backtrace(node) {\n      var path = [[node.x, node.y]];\n\n      while (node.parent) {\n        node = node.parent;\n        path.push([node.x, node.y]);\n      }\n\n      return path.reverse();\n    }\n\n    exports.backtrace = backtrace;\n\n    function biBacktrace(nodeA, nodeB) {\n      var pathA = backtrace(nodeA),\n          pathB = backtrace(nodeB);\n      return pathA.concat(pathB.reverse());\n    }\n\n    exports.biBacktrace = biBacktrace;\n\n    function pathLength(path) {\n      var i,\n          sum = 0,\n          a,\n          b,\n          dx,\n          dy;\n\n      for (i = 1; i < path.length; ++i) {\n        a = path[i - 1];\n        b = path[i];\n        dx = a[0] - b[0];\n        dy = a[1] - b[1];\n        sum += Math.sqrt(dx * dx + dy * dy);\n      }\n\n      return sum;\n    }\n\n    exports.pathLength = pathLength;\n\n    function interpolate(x0, y0, x1, y1) {\n      var abs = Math.abs,\n          line = [],\n          sx,\n          sy,\n          dx,\n          dy,\n          err,\n          e2;\n      dx = abs(x1 - x0);\n      dy = abs(y1 - y0);\n      sx = x0 < x1 ? 1 : -1;\n      sy = y0 < y1 ? 1 : -1;\n      err = dx - dy;\n\n      while (true) {\n        line.push([x0, y0]);\n\n        if (x0 === x1 && y0 === y1) {\n          break;\n        }\n\n        e2 = 2 * err;\n\n        if (e2 > -dy) {\n          err = err - dy;\n          x0 = x0 + sx;\n        }\n\n        if (e2 < dx) {\n          err = err + dx;\n          y0 = y0 + sy;\n        }\n      }\n\n      return line;\n    }\n\n    exports.interpolate = interpolate;\n\n    function expandPath(path) {\n      var expanded = [],\n          len = path.length,\n          coord0,\n          coord1,\n          interpolated,\n          interpolatedLen,\n          i,\n          j;\n\n      if (len < 2) {\n        return expanded;\n      }\n\n      for (i = 0; i < len - 1; ++i) {\n        coord0 = path[i];\n        coord1 = path[i + 1];\n        interpolated = interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\n        interpolatedLen = interpolated.length;\n\n        for (j = 0; j < interpolatedLen - 1; ++j) {\n          expanded.push(interpolated[j]);\n        }\n      }\n\n      expanded.push(path[len - 1]);\n      return expanded;\n    }\n\n    exports.expandPath = expandPath;\n\n    function smoothenPath(grid, path) {\n      var len = path.length,\n          x0 = path[0][0],\n          y0 = path[0][1],\n          x1 = path[len - 1][0],\n          y1 = path[len - 1][1],\n          sx,\n          sy,\n          ex,\n          ey,\n          newPath,\n          i,\n          j,\n          coord,\n          line,\n          testCoord,\n          blocked;\n      sx = x0;\n      sy = y0;\n      newPath = [[sx, sy]];\n\n      for (i = 2; i < len; ++i) {\n        coord = path[i];\n        ex = coord[0];\n        ey = coord[1];\n        line = interpolate(sx, sy, ex, ey);\n        blocked = false;\n\n        for (j = 1; j < line.length; ++j) {\n          testCoord = line[j];\n\n          if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\n            blocked = true;\n            break;\n          }\n        }\n\n        if (blocked) {\n          lastValidCoord = path[i - 1];\n          newPath.push(lastValidCoord);\n          sx = lastValidCoord[0];\n          sy = lastValidCoord[1];\n        }\n      }\n\n      newPath.push([x1, y1]);\n      return newPath;\n    }\n\n    exports.smoothenPath = smoothenPath;\n\n    function compressPath(path) {\n      if (path.length < 3) {\n        return path;\n      }\n\n      var compressed = [],\n          sx = path[0][0],\n          sy = path[0][1],\n          px = path[1][0],\n          py = path[1][1],\n          dx = px - sx,\n          dy = py - sy,\n          lx,\n          ly,\n          ldx,\n          ldy,\n          sq,\n          i;\n      sq = Math.sqrt(dx * dx + dy * dy);\n      dx /= sq;\n      dy /= sq;\n      compressed.push([sx, sy]);\n\n      for (i = 2; i < path.length; i++) {\n        lx = px;\n        ly = py;\n        ldx = dx;\n        ldy = dy;\n        px = path[i][0];\n        py = path[i][1];\n        dx = px - lx;\n        dy = py - ly;\n        sq = Math.sqrt(dx * dx + dy * dy);\n        dx /= sq;\n        dy /= sq;\n\n        if (dx !== ldx || dy !== ldy) {\n          compressed.push([lx, ly]);\n        }\n      }\n\n      compressed.push([px, py]);\n      return compressed;\n    }\n\n    exports.compressPath = compressPath;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseModel_1 = __webpack_require__(6);\n\n    var _ = __webpack_require__(0);\n\n    var PointModel = function (_super) {\n      __extends(PointModel, _super);\n\n      function PointModel(link, points) {\n        var _this = _super.call(this) || this;\n\n        _this.x = points.x;\n        _this.y = points.y;\n        _this.parent = link;\n        return _this;\n      }\n\n      PointModel.prototype.getSelectedEntities = function () {\n        if (_super.prototype.isSelected.call(this) && !this.isConnectedToPort()) {\n          return [this];\n        }\n\n        return [];\n      };\n\n      PointModel.prototype.isConnectedToPort = function () {\n        return this.parent.getPortForPoint(this) !== null;\n      };\n\n      PointModel.prototype.getLink = function () {\n        return this.getParent();\n      };\n\n      PointModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.x = ob.x;\n        this.y = ob.y;\n      };\n\n      PointModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          x: this.x,\n          y: this.y\n        });\n      };\n\n      PointModel.prototype.remove = function () {\n        if (this.parent) {\n          this.parent.removePoint(this);\n        }\n\n        _super.prototype.remove.call(this);\n      };\n\n      PointModel.prototype.updateLocation = function (points) {\n        this.x = points.x;\n        this.y = points.y;\n      };\n\n      PointModel.prototype.getX = function () {\n        return this.x;\n      };\n\n      PointModel.prototype.getY = function () {\n        return this.y;\n      };\n\n      PointModel.prototype.isLocked = function () {\n        return _super.prototype.isLocked.call(this) || this.getParent().isLocked();\n      };\n\n      return PointModel;\n    }(BaseModel_1.BaseModel);\n\n    exports.PointModel = PointModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseEntity_1 = __webpack_require__(13);\n\n    var _ = __webpack_require__(0);\n\n    var BaseModel = function (_super) {\n      __extends(BaseModel, _super);\n\n      function BaseModel(type, id) {\n        var _this = _super.call(this, id) || this;\n\n        _this.type = type;\n        _this.selected = false;\n        return _this;\n      }\n\n      BaseModel.prototype.getParent = function () {\n        return this.parent;\n      };\n\n      BaseModel.prototype.setParent = function (parent) {\n        this.parent = parent;\n      };\n\n      BaseModel.prototype.getSelectedEntities = function () {\n        if (this.isSelected()) {\n          return [this];\n        }\n\n        return [];\n      };\n\n      BaseModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.type = ob.type;\n        this.selected = ob.selected;\n      };\n\n      BaseModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          type: this.type,\n          selected: this.selected\n        });\n      };\n\n      BaseModel.prototype.getType = function () {\n        return this.type;\n      };\n\n      BaseModel.prototype.getID = function () {\n        return this.id;\n      };\n\n      BaseModel.prototype.isSelected = function () {\n        return this.selected;\n      };\n\n      BaseModel.prototype.setSelected = function (selected) {\n        if (selected === void 0) {\n          selected = true;\n        }\n\n        this.selected = selected;\n        this.iterateListeners(function (listener, event) {\n          if (listener.selectionChanged) {\n            listener.selectionChanged(__assign({}, event, {\n              isSelected: selected\n            }));\n          }\n        });\n      };\n\n      BaseModel.prototype.remove = function () {\n        this.iterateListeners(function (listener, event) {\n          if (listener.entityRemoved) {\n            listener.entityRemoved(event);\n          }\n        });\n      };\n\n      return BaseModel;\n    }(BaseEntity_1.BaseEntity);\n\n    exports.BaseModel = BaseModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var closest = __webpack_require__(70);\n\n    var PathFinding_1 = __webpack_require__(16);\n\n    var Path = __webpack_require__(51);\n\n    var Toolkit = function () {\n      function Toolkit() {}\n\n      Toolkit.UID = function () {\n        if (Toolkit.TESTING) {\n          Toolkit.TESTING_UID++;\n          return \"\" + Toolkit.TESTING_UID;\n        }\n\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n          var r = Math.random() * 16 | 0;\n          var v = c === \"x\" ? r : r & 3 | 8;\n          return v.toString(16);\n        });\n      };\n\n      Toolkit.closest = function (element, selector) {\n        if (document.body.closest) {\n          return element.closest(selector);\n        }\n\n        return closest(element, selector);\n      };\n\n      Toolkit.generateLinePath = function (firstPoint, lastPoint) {\n        return \"M\" + firstPoint.x + \",\" + firstPoint.y + \" L \" + lastPoint.x + \",\" + lastPoint.y;\n      };\n\n      Toolkit.generateCurvePath = function (firstPoint, lastPoint, curvy) {\n        if (curvy === void 0) {\n          curvy = 0;\n        }\n\n        var isHorizontal = Math.abs(firstPoint.x - lastPoint.x) > Math.abs(firstPoint.y - lastPoint.y);\n        var curvyX = isHorizontal ? curvy : 0;\n        var curvyY = isHorizontal ? 0 : curvy;\n        return \"M\" + firstPoint.x + \",\" + firstPoint.y + \" C \" + (firstPoint.x + curvyX) + \",\" + (firstPoint.y + curvyY) + \"\\n    \" + (lastPoint.x - curvyX) + \",\" + (lastPoint.y - curvyY) + \" \" + lastPoint.x + \",\" + lastPoint.y;\n      };\n\n      Toolkit.generateDynamicPath = function (pathCoords) {\n        var path = Path();\n        path = path.moveto(pathCoords[0][0] * PathFinding_1.ROUTING_SCALING_FACTOR, pathCoords[0][1] * PathFinding_1.ROUTING_SCALING_FACTOR);\n        pathCoords.slice(1).forEach(function (coords) {\n          path = path.lineto(coords[0] * PathFinding_1.ROUTING_SCALING_FACTOR, coords[1] * PathFinding_1.ROUTING_SCALING_FACTOR);\n        });\n        return path.print();\n      };\n\n      Toolkit.TESTING = false;\n      Toolkit.TESTING_UID = 0;\n      return Toolkit;\n    }();\n\n    exports.Toolkit = Toolkit;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var AbstractFactory = function () {\n      function AbstractFactory(name) {\n        this.type = name;\n      }\n\n      AbstractFactory.prototype.getType = function () {\n        return this.type;\n      };\n\n      return AbstractFactory;\n    }();\n\n    exports.AbstractFactory = AbstractFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseModel_1 = __webpack_require__(6);\n\n    var _ = __webpack_require__(0);\n\n    var NodeModel = function (_super) {\n      __extends(NodeModel, _super);\n\n      function NodeModel(nodeType, id) {\n        if (nodeType === void 0) {\n          nodeType = \"default\";\n        }\n\n        var _this = _super.call(this, nodeType, id) || this;\n\n        _this.x = 0;\n        _this.y = 0;\n        _this.extras = {};\n        _this.ports = {};\n        return _this;\n      }\n\n      NodeModel.prototype.setPosition = function (x, y) {\n        var oldX = this.x;\n        var oldY = this.y;\n\n        _.forEach(this.ports, function (port) {\n          _.forEach(port.getLinks(), function (link) {\n            var point = link.getPointForPort(port);\n            point.x = point.x + x - oldX;\n            point.y = point.y + y - oldY;\n          });\n        });\n\n        this.x = x;\n        this.y = y;\n      };\n\n      NodeModel.prototype.getSelectedEntities = function () {\n        var entities = _super.prototype.getSelectedEntities.call(this);\n\n        if (this.isSelected()) {\n          _.forEach(this.ports, function (port) {\n            entities = entities.concat(_.map(port.getLinks(), function (link) {\n              return link.getPointForPort(port);\n            }));\n          });\n        }\n\n        return entities;\n      };\n\n      NodeModel.prototype.deSerialize = function (ob, engine) {\n        var _this = this;\n\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.x = ob.x;\n        this.y = ob.y;\n        this.extras = ob.extras;\n\n        _.forEach(ob.ports, function (port) {\n          var portOb = engine.getPortFactory(port.type).getNewInstance();\n          portOb.deSerialize(port, engine);\n\n          _this.addPort(portOb);\n        });\n      };\n\n      NodeModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          x: this.x,\n          y: this.y,\n          extras: this.extras,\n          ports: _.map(this.ports, function (port) {\n            return port.serialize();\n          })\n        });\n      };\n\n      NodeModel.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) {\n          lookupTable = {};\n        }\n\n        clone.ports = {};\n\n        _.forEach(this.ports, function (port) {\n          clone.addPort(port.clone(lookupTable));\n        });\n      };\n\n      NodeModel.prototype.remove = function () {\n        _super.prototype.remove.call(this);\n\n        _.forEach(this.ports, function (port) {\n          _.forEach(port.getLinks(), function (link) {\n            link.remove();\n          });\n        });\n      };\n\n      NodeModel.prototype.getPortFromID = function (id) {\n        for (var i in this.ports) {\n          if (this.ports[i].id === id) {\n            return this.ports[i];\n          }\n        }\n\n        return null;\n      };\n\n      NodeModel.prototype.getPort = function (name) {\n        return this.ports[name];\n      };\n\n      NodeModel.prototype.getPorts = function () {\n        return this.ports;\n      };\n\n      NodeModel.prototype.removePort = function (port) {\n        if (this.ports[port.name]) {\n          this.ports[port.name].setParent(null);\n          delete this.ports[port.name];\n        }\n      };\n\n      NodeModel.prototype.addPort = function (port) {\n        port.setParent(this);\n        this.ports[port.name] = port;\n        return port;\n      };\n\n      NodeModel.prototype.updateDimensions = function (_a) {\n        var width = _a.width,\n            height = _a.height;\n        this.width = width;\n        this.height = height;\n      };\n\n      return NodeModel;\n    }(BaseModel_1.BaseModel);\n\n    exports.NodeModel = NodeModel;\n  }, function (module, exports) {\n    module.exports = {\n      manhattan: function (dx, dy) {\n        return dx + dy;\n      },\n      euclidean: function (dx, dy) {\n        return Math.sqrt(dx * dx + dy * dy);\n      },\n      octile: function (dx, dy) {\n        var F = Math.SQRT2 - 1;\n        return dx < dy ? F * dx + dy : F * dy + dx;\n      },\n      chebyshev: function (dx, dy) {\n        return Math.max(dx, dy);\n      }\n    };\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseAction = function () {\n      function BaseAction(mouseX, mouseY) {\n        this.mouseX = mouseX;\n        this.mouseY = mouseY;\n        this.ms = new Date().getTime();\n      }\n\n      return BaseAction;\n    }();\n\n    exports.BaseAction = BaseAction;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseModel_1 = __webpack_require__(6);\n\n    var _ = __webpack_require__(0);\n\n    var PortModel = function (_super) {\n      __extends(PortModel, _super);\n\n      function PortModel(name, type, id, maximumLinks) {\n        var _this = _super.call(this, type, id) || this;\n\n        _this.name = name;\n        _this.links = {};\n        _this.maximumLinks = maximumLinks;\n        return _this;\n      }\n\n      PortModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.name = ob.name;\n        this.maximumLinks = ob.maximumLinks;\n      };\n\n      PortModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          name: this.name,\n          parentNode: this.parent.id,\n          links: _.map(this.links, function (link) {\n            return link.id;\n          }),\n          maximumLinks: this.maximumLinks\n        });\n      };\n\n      PortModel.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) {\n          lookupTable = {};\n        }\n\n        clone.links = {};\n        clone.parentNode = this.getParent().clone(lookupTable);\n      };\n\n      PortModel.prototype.getNode = function () {\n        return this.getParent();\n      };\n\n      PortModel.prototype.getName = function () {\n        return this.name;\n      };\n\n      PortModel.prototype.getMaximumLinks = function () {\n        return this.maximumLinks;\n      };\n\n      PortModel.prototype.setMaximumLinks = function (maximumLinks) {\n        this.maximumLinks = maximumLinks;\n      };\n\n      PortModel.prototype.removeLink = function (link) {\n        delete this.links[link.getID()];\n      };\n\n      PortModel.prototype.addLink = function (link) {\n        this.links[link.getID()] = link;\n      };\n\n      PortModel.prototype.getLinks = function () {\n        return this.links;\n      };\n\n      PortModel.prototype.createLinkModel = function () {\n        if (_.isFinite(this.maximumLinks)) {\n          var numberOfLinks = _.size(this.links);\n\n          if (this.maximumLinks === 1 && numberOfLinks >= 1) {\n            return _.values(this.links)[0];\n          } else if (numberOfLinks >= this.maximumLinks) {\n            return null;\n          }\n        }\n\n        return null;\n      };\n\n      PortModel.prototype.updateCoords = function (_a) {\n        var x = _a.x,\n            y = _a.y,\n            width = _a.width,\n            height = _a.height;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n      };\n\n      PortModel.prototype.canLinkToPort = function (port) {\n        return true;\n      };\n\n      PortModel.prototype.isLocked = function () {\n        return _super.prototype.isLocked.call(this) || this.getParent().isLocked();\n      };\n\n      return PortModel;\n    }(BaseModel_1.BaseModel);\n\n    exports.PortModel = PortModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var Toolkit_1 = __webpack_require__(7);\n\n    var _ = __webpack_require__(0);\n\n    var BaseEntity = function () {\n      function BaseEntity(id) {\n        this.listeners = {};\n        this.id = id || Toolkit_1.Toolkit.UID();\n        this.locked = false;\n      }\n\n      BaseEntity.prototype.getID = function () {\n        return this.id;\n      };\n\n      BaseEntity.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) {\n          lookupTable = {};\n        }\n      };\n\n      BaseEntity.prototype.clone = function (lookupTable) {\n        if (lookupTable === void 0) {\n          lookupTable = {};\n        }\n\n        if (lookupTable[this.id]) {\n          return lookupTable[this.id];\n        }\n\n        var clone = _.clone(this);\n\n        clone.id = Toolkit_1.Toolkit.UID();\n        clone.clearListeners();\n        lookupTable[this.id] = clone;\n        this.doClone(lookupTable, clone);\n        return clone;\n      };\n\n      BaseEntity.prototype.clearListeners = function () {\n        this.listeners = {};\n      };\n\n      BaseEntity.prototype.deSerialize = function (data, engine) {\n        this.id = data.id;\n      };\n\n      BaseEntity.prototype.serialize = function () {\n        return {\n          id: this.id\n        };\n      };\n\n      BaseEntity.prototype.iterateListeners = function (cb) {\n        var event = {\n          id: Toolkit_1.Toolkit.UID(),\n          firing: true,\n          entity: this,\n          stopPropagation: function () {\n            event.firing = false;\n          }\n        };\n\n        for (var i in this.listeners) {\n          if (this.listeners.hasOwnProperty(i)) {\n            if (!event.firing) {\n              return;\n            }\n\n            cb(this.listeners[i], event);\n          }\n        }\n      };\n\n      BaseEntity.prototype.removeListener = function (listener) {\n        if (this.listeners[listener]) {\n          delete this.listeners[listener];\n          return true;\n        }\n\n        return false;\n      };\n\n      BaseEntity.prototype.addListener = function (listener) {\n        var uid = Toolkit_1.Toolkit.UID();\n        this.listeners[uid] = listener;\n        return uid;\n      };\n\n      BaseEntity.prototype.isLocked = function () {\n        return this.locked;\n      };\n\n      BaseEntity.prototype.setLocked = function (locked) {\n        if (locked === void 0) {\n          locked = true;\n        }\n\n        this.locked = locked;\n        this.iterateListeners(function (listener, event) {\n          if (listener.lockChanged) {\n            listener.lockChanged(__assign({}, event, {\n              locked: locked\n            }));\n          }\n        });\n      };\n\n      return BaseEntity;\n    }();\n\n    exports.BaseEntity = BaseEntity;\n  }, function (module, exports, __webpack_require__) {\n    var Heap = __webpack_require__(15);\n\n    var Util = __webpack_require__(4);\n\n    var Heuristic = __webpack_require__(10);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function JumpPointFinderBase(opt) {\n      opt = opt || {};\n      this.heuristic = opt.heuristic || Heuristic.manhattan;\n      this.trackJumpRecursion = opt.trackJumpRecursion || false;\n    }\n\n    JumpPointFinderBase.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var openList = this.openList = new Heap(function (nodeA, nodeB) {\n        return nodeA.f - nodeB.f;\n      }),\n          startNode = this.startNode = grid.getNodeAt(startX, startY),\n          endNode = this.endNode = grid.getNodeAt(endX, endY),\n          node;\n      this.grid = grid;\n      startNode.g = 0;\n      startNode.f = 0;\n      openList.push(startNode);\n      startNode.opened = true;\n\n      while (!openList.empty()) {\n        node = openList.pop();\n        node.closed = true;\n\n        if (node === endNode) {\n          return Util.expandPath(Util.backtrace(endNode));\n        }\n\n        this._identifySuccessors(node);\n      }\n\n      return [];\n    };\n\n    JumpPointFinderBase.prototype._identifySuccessors = function (node) {\n      var grid = this.grid,\n          heuristic = this.heuristic,\n          openList = this.openList,\n          endX = this.endNode.x,\n          endY = this.endNode.y,\n          neighbors,\n          neighbor,\n          jumpPoint,\n          i,\n          l,\n          x = node.x,\n          y = node.y,\n          jx,\n          jy,\n          dx,\n          dy,\n          d,\n          ng,\n          jumpNode,\n          abs = Math.abs,\n          max = Math.max;\n      neighbors = this._findNeighbors(node);\n\n      for (i = 0, l = neighbors.length; i < l; ++i) {\n        neighbor = neighbors[i];\n        jumpPoint = this._jump(neighbor[0], neighbor[1], x, y);\n\n        if (jumpPoint) {\n          jx = jumpPoint[0];\n          jy = jumpPoint[1];\n          jumpNode = grid.getNodeAt(jx, jy);\n\n          if (jumpNode.closed) {\n            continue;\n          }\n\n          d = Heuristic.octile(abs(jx - x), abs(jy - y));\n          ng = node.g + d;\n\n          if (!jumpNode.opened || ng < jumpNode.g) {\n            jumpNode.g = ng;\n            jumpNode.h = jumpNode.h || heuristic(abs(jx - endX), abs(jy - endY));\n            jumpNode.f = jumpNode.g + jumpNode.h;\n            jumpNode.parent = node;\n\n            if (!jumpNode.opened) {\n              openList.push(jumpNode);\n              jumpNode.opened = true;\n            } else {\n              openList.updateItem(jumpNode);\n            }\n          }\n        }\n      }\n    };\n\n    module.exports = JumpPointFinderBase;\n  }, function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(66);\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var PF = __webpack_require__(68);\n\n    exports.ROUTING_SCALING_FACTOR = 5;\n    var pathFinderInstance = new PF.JumpPointFinder({\n      heuristic: PF.Heuristic.manhattan,\n      diagonalMovement: PF.DiagonalMovement.Never\n    });\n\n    var PathFinding = function () {\n      function PathFinding(diagramEngine) {\n        this.instance = pathFinderInstance;\n        this.diagramEngine = diagramEngine;\n      }\n\n      PathFinding.prototype.calculateDirectPath = function (from, to) {\n        var matrix = this.diagramEngine.getCanvasMatrix();\n        var grid = new PF.Grid(matrix);\n        return pathFinderInstance.findPath(this.diagramEngine.translateRoutingX(Math.floor(from.x / exports.ROUTING_SCALING_FACTOR)), this.diagramEngine.translateRoutingY(Math.floor(from.y / exports.ROUTING_SCALING_FACTOR)), this.diagramEngine.translateRoutingX(Math.floor(to.x / exports.ROUTING_SCALING_FACTOR)), this.diagramEngine.translateRoutingY(Math.floor(to.y / exports.ROUTING_SCALING_FACTOR)), grid);\n      };\n\n      PathFinding.prototype.calculateLinkStartEndCoords = function (matrix, path) {\n        var startIndex = path.findIndex(function (point) {\n          return matrix[point[1]][point[0]] === 0;\n        });\n        var endIndex = path.length - 1 - path.slice().reverse().findIndex(function (point) {\n          return matrix[point[1]][point[0]] === 0;\n        });\n\n        if (startIndex === -1 || endIndex === -1) {\n          return undefined;\n        }\n\n        var pathToStart = path.slice(0, startIndex);\n        var pathToEnd = path.slice(endIndex);\n        return {\n          start: {\n            x: path[startIndex][0],\n            y: path[startIndex][1]\n          },\n          end: {\n            x: path[endIndex][0],\n            y: path[endIndex][1]\n          },\n          pathToStart: pathToStart,\n          pathToEnd: pathToEnd\n        };\n      };\n\n      PathFinding.prototype.calculateDynamicPath = function (routingMatrix, start, end, pathToStart, pathToEnd) {\n        var _this = this;\n\n        var grid = new PF.Grid(routingMatrix);\n        var dynamicPath = pathFinderInstance.findPath(start.x, start.y, end.x, end.y, grid);\n        var pathCoords = pathToStart.concat(dynamicPath, pathToEnd).map(function (coords) {\n          return [_this.diagramEngine.translateRoutingX(coords[0], true), _this.diagramEngine.translateRoutingY(coords[1], true)];\n        });\n        return PF.Util.compressPath(pathCoords);\n      };\n\n      return PathFinding;\n    }();\n\n    exports.default = PathFinding;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseModel_1 = __webpack_require__(6);\n\n    var _ = __webpack_require__(0);\n\n    var LabelModel = function (_super) {\n      __extends(LabelModel, _super);\n\n      function LabelModel(type, id) {\n        var _this = _super.call(this, type, id) || this;\n\n        _this.offsetX = 0;\n        _this.offsetY = 0;\n        return _this;\n      }\n\n      LabelModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.offsetX = ob.offsetX;\n        this.offsetY = ob.offsetY;\n      };\n\n      LabelModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          offsetX: this.offsetX,\n          offsetY: this.offsetY\n        });\n      };\n\n      return LabelModel;\n    }(BaseModel_1.BaseModel);\n\n    exports.LabelModel = LabelModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var LabelModel_1 = __webpack_require__(17);\n\n    var _ = __webpack_require__(0);\n\n    var DefaultLabelModel = function (_super) {\n      __extends(DefaultLabelModel, _super);\n\n      function DefaultLabelModel() {\n        var _this = _super.call(this, \"default\") || this;\n\n        _this.offsetY = -23;\n        return _this;\n      }\n\n      DefaultLabelModel.prototype.setLabel = function (label) {\n        this.label = label;\n      };\n\n      DefaultLabelModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.label = ob.label;\n      };\n\n      DefaultLabelModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          label: this.label\n        });\n      };\n\n      return DefaultLabelModel;\n    }(LabelModel_1.LabelModel);\n\n    exports.DefaultLabelModel = DefaultLabelModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var LinkModel_1 = __webpack_require__(21);\n\n    var _ = __webpack_require__(0);\n\n    var DefaultLabelModel_1 = __webpack_require__(18);\n\n    var LabelModel_1 = __webpack_require__(17);\n\n    var DefaultLinkModel = function (_super) {\n      __extends(DefaultLinkModel, _super);\n\n      function DefaultLinkModel(type) {\n        if (type === void 0) {\n          type = \"default\";\n        }\n\n        var _this = _super.call(this, type) || this;\n\n        _this.color = \"rgba(255,255,255,0.5)\";\n        _this.width = 3;\n        _this.curvyness = 50;\n        return _this;\n      }\n\n      DefaultLinkModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          width: this.width,\n          color: this.color,\n          curvyness: this.curvyness\n        });\n      };\n\n      DefaultLinkModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.color = ob.color;\n        this.width = ob.width;\n        this.curvyness = ob.curvyness;\n      };\n\n      DefaultLinkModel.prototype.addLabel = function (label) {\n        if (label instanceof LabelModel_1.LabelModel) {\n          return _super.prototype.addLabel.call(this, label);\n        }\n\n        var labelOb = new DefaultLabelModel_1.DefaultLabelModel();\n        labelOb.setLabel(label);\n        return _super.prototype.addLabel.call(this, labelOb);\n      };\n\n      DefaultLinkModel.prototype.setWidth = function (width) {\n        this.width = width;\n        this.iterateListeners(function (listener, event) {\n          if (listener.widthChanged) {\n            listener.widthChanged(__assign({}, event, {\n              width: width\n            }));\n          }\n        });\n      };\n\n      DefaultLinkModel.prototype.setColor = function (color) {\n        this.color = color;\n        this.iterateListeners(function (listener, event) {\n          if (listener.colorChanged) {\n            listener.colorChanged(__assign({}, event, {\n              color: color\n            }));\n          }\n        });\n      };\n\n      return DefaultLinkModel;\n    }(LinkModel_1.LinkModel);\n\n    exports.DefaultLinkModel = DefaultLinkModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var _ = __webpack_require__(0);\n\n    var PortModel_1 = __webpack_require__(12);\n\n    var DefaultLinkModel_1 = __webpack_require__(19);\n\n    var DefaultPortModel = function (_super) {\n      __extends(DefaultPortModel, _super);\n\n      function DefaultPortModel(isInput, name, label, id) {\n        if (label === void 0) {\n          label = null;\n        }\n\n        var _this = _super.call(this, name, \"default\", id) || this;\n\n        _this.in = isInput;\n        _this.label = label || name;\n        return _this;\n      }\n\n      DefaultPortModel.prototype.deSerialize = function (object, engine) {\n        _super.prototype.deSerialize.call(this, object, engine);\n\n        this.in = object.in;\n        this.label = object.label;\n      };\n\n      DefaultPortModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          in: this.in,\n          label: this.label\n        });\n      };\n\n      DefaultPortModel.prototype.link = function (port) {\n        var link = this.createLinkModel();\n        link.setSourcePort(this);\n        link.setTargetPort(port);\n        return link;\n      };\n\n      DefaultPortModel.prototype.canLinkToPort = function (port) {\n        if (port instanceof DefaultPortModel) {\n          return this.in !== port.in;\n        }\n\n        return true;\n      };\n\n      DefaultPortModel.prototype.createLinkModel = function () {\n        var link = _super.prototype.createLinkModel.call(this);\n\n        return link || new DefaultLinkModel_1.DefaultLinkModel();\n      };\n\n      return DefaultPortModel;\n    }(PortModel_1.PortModel);\n\n    exports.DefaultPortModel = DefaultPortModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseModel_1 = __webpack_require__(6);\n\n    var PointModel_1 = __webpack_require__(5);\n\n    var _ = __webpack_require__(0);\n\n    var LinkModel = function (_super) {\n      __extends(LinkModel, _super);\n\n      function LinkModel(linkType, id) {\n        if (linkType === void 0) {\n          linkType = \"default\";\n        }\n\n        var _this = _super.call(this, linkType, id) || this;\n\n        _this.points = [new PointModel_1.PointModel(_this, {\n          x: 0,\n          y: 0\n        }), new PointModel_1.PointModel(_this, {\n          x: 0,\n          y: 0\n        })];\n        _this.extras = {};\n        _this.sourcePort = null;\n        _this.targetPort = null;\n        _this.labels = [];\n        return _this;\n      }\n\n      LinkModel.prototype.deSerialize = function (ob, engine) {\n        var _this = this;\n\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.extras = ob.extras;\n        this.points = _.map(ob.points || [], function (point) {\n          var p = new PointModel_1.PointModel(_this, {\n            x: point.x,\n            y: point.y\n          });\n          p.deSerialize(point, engine);\n          return p;\n        });\n\n        _.forEach(ob.labels || [], function (label) {\n          var labelOb = engine.getLabelFactory(label.type).getNewInstance();\n          labelOb.deSerialize(label, engine);\n\n          _this.addLabel(labelOb);\n        });\n\n        if (ob.target) {\n          this.setTargetPort(this.getParent().getNode(ob.target).getPortFromID(ob.targetPort));\n        }\n\n        if (ob.source) {\n          this.setSourcePort(this.getParent().getNode(ob.source).getPortFromID(ob.sourcePort));\n        }\n      };\n\n      LinkModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          source: this.sourcePort ? this.sourcePort.getParent().id : null,\n          sourcePort: this.sourcePort ? this.sourcePort.id : null,\n          target: this.targetPort ? this.targetPort.getParent().id : null,\n          targetPort: this.targetPort ? this.targetPort.id : null,\n          points: _.map(this.points, function (point) {\n            return point.serialize();\n          }),\n          extras: this.extras,\n          labels: _.map(this.labels, function (label) {\n            return label.serialize();\n          })\n        });\n      };\n\n      LinkModel.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) {\n          lookupTable = {};\n        }\n\n        clone.setPoints(_.map(this.getPoints(), function (point) {\n          return point.clone(lookupTable);\n        }));\n\n        if (this.sourcePort) {\n          clone.setSourcePort(this.sourcePort.clone(lookupTable));\n        }\n\n        if (this.targetPort) {\n          clone.setTargetPort(this.targetPort.clone(lookupTable));\n        }\n      };\n\n      LinkModel.prototype.remove = function () {\n        if (this.sourcePort) {\n          this.sourcePort.removeLink(this);\n        }\n\n        if (this.targetPort) {\n          this.targetPort.removeLink(this);\n        }\n\n        _super.prototype.remove.call(this);\n      };\n\n      LinkModel.prototype.isLastPoint = function (point) {\n        var index = this.getPointIndex(point);\n        return index === this.points.length - 1;\n      };\n\n      LinkModel.prototype.getPointIndex = function (point) {\n        return this.points.indexOf(point);\n      };\n\n      LinkModel.prototype.getPointModel = function (id) {\n        for (var i = 0; i < this.points.length; i++) {\n          if (this.points[i].id === id) {\n            return this.points[i];\n          }\n        }\n\n        return null;\n      };\n\n      LinkModel.prototype.getPortForPoint = function (point) {\n        if (this.sourcePort !== null && this.getFirstPoint().getID() === point.getID()) {\n          return this.sourcePort;\n        }\n\n        if (this.targetPort !== null && this.getLastPoint().getID() === point.getID()) {\n          return this.targetPort;\n        }\n\n        return null;\n      };\n\n      LinkModel.prototype.getPointForPort = function (port) {\n        if (this.sourcePort !== null && this.sourcePort.getID() === port.getID()) {\n          return this.getFirstPoint();\n        }\n\n        if (this.targetPort !== null && this.targetPort.getID() === port.getID()) {\n          return this.getLastPoint();\n        }\n\n        return null;\n      };\n\n      LinkModel.prototype.getFirstPoint = function () {\n        return this.points[0];\n      };\n\n      LinkModel.prototype.getLastPoint = function () {\n        return this.points[this.points.length - 1];\n      };\n\n      LinkModel.prototype.setSourcePort = function (port) {\n        if (port !== null) {\n          port.addLink(this);\n        }\n\n        if (this.sourcePort !== null) {\n          this.sourcePort.removeLink(this);\n        }\n\n        this.sourcePort = port;\n        this.iterateListeners(function (listener, event) {\n          if (listener.sourcePortChanged) {\n            listener.sourcePortChanged(__assign({}, event, {\n              port: port\n            }));\n          }\n        });\n      };\n\n      LinkModel.prototype.getSourcePort = function () {\n        return this.sourcePort;\n      };\n\n      LinkModel.prototype.getTargetPort = function () {\n        return this.targetPort;\n      };\n\n      LinkModel.prototype.setTargetPort = function (port) {\n        if (port !== null) {\n          port.addLink(this);\n        }\n\n        if (this.targetPort !== null) {\n          this.targetPort.removeLink(this);\n        }\n\n        this.targetPort = port;\n        this.iterateListeners(function (listener, event) {\n          if (listener.targetPortChanged) {\n            listener.targetPortChanged(__assign({}, event, {\n              port: port\n            }));\n          }\n        });\n      };\n\n      LinkModel.prototype.point = function (x, y) {\n        return this.addPoint(this.generatePoint(x, y));\n      };\n\n      LinkModel.prototype.addLabel = function (label) {\n        label.setParent(this);\n        this.labels.push(label);\n      };\n\n      LinkModel.prototype.getPoints = function () {\n        return this.points;\n      };\n\n      LinkModel.prototype.setPoints = function (points) {\n        var _this = this;\n\n        _.forEach(points, function (point) {\n          point.setParent(_this);\n        });\n\n        this.points = points;\n      };\n\n      LinkModel.prototype.removePoint = function (pointModel) {\n        this.points.splice(this.getPointIndex(pointModel), 1);\n      };\n\n      LinkModel.prototype.removePointsBefore = function (pointModel) {\n        this.points.splice(0, this.getPointIndex(pointModel));\n      };\n\n      LinkModel.prototype.removePointsAfter = function (pointModel) {\n        this.points.splice(this.getPointIndex(pointModel) + 1);\n      };\n\n      LinkModel.prototype.removeMiddlePoints = function () {\n        if (this.points.length > 2) {\n          this.points.splice(0, this.points.length - 2);\n        }\n      };\n\n      LinkModel.prototype.addPoint = function (pointModel, index) {\n        if (index === void 0) {\n          index = 1;\n        }\n\n        pointModel.setParent(this);\n        this.points.splice(index, 0, pointModel);\n        return pointModel;\n      };\n\n      LinkModel.prototype.generatePoint = function (x, y) {\n        if (x === void 0) {\n          x = 0;\n        }\n\n        if (y === void 0) {\n          y = 0;\n        }\n\n        return new PointModel_1.PointModel(this, {\n          x: x,\n          y: y\n        });\n      };\n\n      return LinkModel;\n    }(BaseModel_1.BaseModel);\n\n    exports.LinkModel = LinkModel;\n  }, function (module, exports, __webpack_require__) {\n    var Heap = __webpack_require__(15);\n\n    var Util = __webpack_require__(4);\n\n    var Heuristic = __webpack_require__(10);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function BiAStarFinder(opt) {\n      opt = opt || {};\n      this.allowDiagonal = opt.allowDiagonal;\n      this.dontCrossCorners = opt.dontCrossCorners;\n      this.diagonalMovement = opt.diagonalMovement;\n      this.heuristic = opt.heuristic || Heuristic.manhattan;\n      this.weight = opt.weight || 1;\n\n      if (!this.diagonalMovement) {\n        if (!this.allowDiagonal) {\n          this.diagonalMovement = DiagonalMovement.Never;\n        } else {\n          if (this.dontCrossCorners) {\n            this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\n          } else {\n            this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\n          }\n        }\n      }\n\n      if (this.diagonalMovement === DiagonalMovement.Never) {\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\n      } else {\n        this.heuristic = opt.heuristic || Heuristic.octile;\n      }\n    }\n\n    BiAStarFinder.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var cmp = function (nodeA, nodeB) {\n        return nodeA.f - nodeB.f;\n      },\n          startOpenList = new Heap(cmp),\n          endOpenList = new Heap(cmp),\n          startNode = grid.getNodeAt(startX, startY),\n          endNode = grid.getNodeAt(endX, endY),\n          heuristic = this.heuristic,\n          diagonalMovement = this.diagonalMovement,\n          weight = this.weight,\n          abs = Math.abs,\n          SQRT2 = Math.SQRT2,\n          node,\n          neighbors,\n          neighbor,\n          i,\n          l,\n          x,\n          y,\n          ng,\n          BY_START = 1,\n          BY_END = 2;\n\n      startNode.g = 0;\n      startNode.f = 0;\n      startOpenList.push(startNode);\n      startNode.opened = BY_START;\n      endNode.g = 0;\n      endNode.f = 0;\n      endOpenList.push(endNode);\n      endNode.opened = BY_END;\n\n      while (!startOpenList.empty() && !endOpenList.empty()) {\n        node = startOpenList.pop();\n        node.closed = true;\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed) {\n            continue;\n          }\n\n          if (neighbor.opened === BY_END) {\n            return Util.biBacktrace(node, neighbor);\n          }\n\n          x = neighbor.x;\n          y = neighbor.y;\n          ng = node.g + (x - node.x === 0 || y - node.y === 0 ? 1 : SQRT2);\n\n          if (!neighbor.opened || ng < neighbor.g) {\n            neighbor.g = ng;\n            neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\n            neighbor.f = neighbor.g + neighbor.h;\n            neighbor.parent = node;\n\n            if (!neighbor.opened) {\n              startOpenList.push(neighbor);\n              neighbor.opened = BY_START;\n            } else {\n              startOpenList.updateItem(neighbor);\n            }\n          }\n        }\n\n        node = endOpenList.pop();\n        node.closed = true;\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed) {\n            continue;\n          }\n\n          if (neighbor.opened === BY_START) {\n            return Util.biBacktrace(neighbor, node);\n          }\n\n          x = neighbor.x;\n          y = neighbor.y;\n          ng = node.g + (x - node.x === 0 || y - node.y === 0 ? 1 : SQRT2);\n\n          if (!neighbor.opened || ng < neighbor.g) {\n            neighbor.g = ng;\n            neighbor.h = neighbor.h || weight * heuristic(abs(x - startX), abs(y - startY));\n            neighbor.f = neighbor.g + neighbor.h;\n            neighbor.parent = node;\n\n            if (!neighbor.opened) {\n              endOpenList.push(neighbor);\n              neighbor.opened = BY_END;\n            } else {\n              endOpenList.updateItem(neighbor);\n            }\n          }\n        }\n      }\n\n      return [];\n    };\n\n    module.exports = BiAStarFinder;\n  }, function (module, exports, __webpack_require__) {\n    var Heap = __webpack_require__(15);\n\n    var Util = __webpack_require__(4);\n\n    var Heuristic = __webpack_require__(10);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function AStarFinder(opt) {\n      opt = opt || {};\n      this.allowDiagonal = opt.allowDiagonal;\n      this.dontCrossCorners = opt.dontCrossCorners;\n      this.heuristic = opt.heuristic || Heuristic.manhattan;\n      this.weight = opt.weight || 1;\n      this.diagonalMovement = opt.diagonalMovement;\n\n      if (!this.diagonalMovement) {\n        if (!this.allowDiagonal) {\n          this.diagonalMovement = DiagonalMovement.Never;\n        } else {\n          if (this.dontCrossCorners) {\n            this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\n          } else {\n            this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\n          }\n        }\n      }\n\n      if (this.diagonalMovement === DiagonalMovement.Never) {\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\n      } else {\n        this.heuristic = opt.heuristic || Heuristic.octile;\n      }\n    }\n\n    AStarFinder.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var openList = new Heap(function (nodeA, nodeB) {\n        return nodeA.f - nodeB.f;\n      }),\n          startNode = grid.getNodeAt(startX, startY),\n          endNode = grid.getNodeAt(endX, endY),\n          heuristic = this.heuristic,\n          diagonalMovement = this.diagonalMovement,\n          weight = this.weight,\n          abs = Math.abs,\n          SQRT2 = Math.SQRT2,\n          node,\n          neighbors,\n          neighbor,\n          i,\n          l,\n          x,\n          y,\n          ng;\n      startNode.g = 0;\n      startNode.f = 0;\n      openList.push(startNode);\n      startNode.opened = true;\n\n      while (!openList.empty()) {\n        node = openList.pop();\n        node.closed = true;\n\n        if (node === endNode) {\n          return Util.backtrace(endNode);\n        }\n\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed) {\n            continue;\n          }\n\n          x = neighbor.x;\n          y = neighbor.y;\n          ng = node.g + (x - node.x === 0 || y - node.y === 0 ? 1 : SQRT2);\n\n          if (!neighbor.opened || ng < neighbor.g) {\n            neighbor.g = ng;\n            neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\n            neighbor.f = neighbor.g + neighbor.h;\n            neighbor.parent = node;\n\n            if (!neighbor.opened) {\n              openList.push(neighbor);\n              neighbor.opened = true;\n            } else {\n              openList.updateItem(neighbor);\n            }\n          }\n        }\n      }\n\n      return [];\n    };\n\n    module.exports = AStarFinder;\n  }, function (module, exports) {\n    function Node(x, y, walkable) {\n      this.x = x;\n      this.y = y;\n      this.walkable = walkable === undefined ? true : walkable;\n    }\n\n    module.exports = Node;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var NodeWidget = function (_super) {\n      __extends(NodeWidget, _super);\n\n      function NodeWidget(props) {\n        var _this = _super.call(this, \"srd-node\", props) || this;\n\n        _this.state = {};\n        return _this;\n      }\n\n      NodeWidget.prototype.shouldComponentUpdate = function () {\n        return this.props.diagramEngine.canEntityRepaint(this.props.node);\n      };\n\n      NodeWidget.prototype.getClassName = function () {\n        return \"node \" + _super.prototype.getClassName.call(this) + (this.props.node.isSelected() ? this.bem(\"--selected\") : \"\");\n      };\n\n      NodeWidget.prototype.render = function () {\n        return React.createElement(\"div\", __assign({}, this.getProps(), {\n          \"data-nodeid\": this.props.node.id,\n          style: {\n            top: this.props.node.y,\n            left: this.props.node.x\n          }\n        }), this.props.children);\n      };\n\n      return NodeWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.NodeWidget = NodeWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var _ = __webpack_require__(0);\n\n    var NodeWidget_1 = __webpack_require__(25);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var NodeLayerWidget = function (_super) {\n      __extends(NodeLayerWidget, _super);\n\n      function NodeLayerWidget(props) {\n        var _this = _super.call(this, \"srd-node-layer\", props) || this;\n\n        _this.updateNodeDimensions = function () {\n          if (!_this.props.diagramEngine.nodesRendered) {\n            var diagramModel = _this.props.diagramEngine.getDiagramModel();\n\n            _.map(diagramModel.getNodes(), function (node) {\n              node.updateDimensions(_this.props.diagramEngine.getNodeDimensions(node));\n            });\n          }\n        };\n\n        _this.state = {};\n        return _this;\n      }\n\n      NodeLayerWidget.prototype.componentDidUpdate = function () {\n        this.updateNodeDimensions();\n        this.props.diagramEngine.nodesRendered = true;\n      };\n\n      NodeLayerWidget.prototype.render = function () {\n        var _this = this;\n\n        var diagramModel = this.props.diagramEngine.getDiagramModel();\n        return React.createElement(\"div\", __assign({}, this.getProps(), {\n          style: {\n            transform: \"translate(\" + diagramModel.getOffsetX() + \"px,\" + diagramModel.getOffsetY() + \"px) scale(\" + diagramModel.getZoomLevel() / 100 + \")\"\n          }\n        }), _.map(diagramModel.getNodes(), function (node) {\n          return React.createElement(NodeWidget_1.NodeWidget, {\n            diagramEngine: _this.props.diagramEngine,\n            key: node.id,\n            node: node\n          }, _this.props.diagramEngine.generateWidgetForNode(node));\n        }));\n      };\n\n      return NodeLayerWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.NodeLayerWidget = NodeLayerWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var LinkWidget = function (_super) {\n      __extends(LinkWidget, _super);\n\n      function LinkWidget(props) {\n        var _this = _super.call(this, \"srd-link\", props) || this;\n\n        _this.state = {};\n        return _this;\n      }\n\n      LinkWidget.prototype.shouldComponentUpdate = function () {\n        return this.props.diagramEngine.canEntityRepaint(this.props.link);\n      };\n\n      LinkWidget.prototype.render = function () {\n        return this.props.children;\n      };\n\n      return LinkWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.LinkWidget = LinkWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var LinkWidget_1 = __webpack_require__(27);\n\n    var _ = __webpack_require__(0);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var LinkLayerWidget = function (_super) {\n      __extends(LinkLayerWidget, _super);\n\n      function LinkLayerWidget(props) {\n        var _this = _super.call(this, \"srd-link-layer\", props) || this;\n\n        _this.state = {};\n        return _this;\n      }\n\n      LinkLayerWidget.prototype.render = function () {\n        var _this = this;\n\n        var diagramModel = this.props.diagramEngine.getDiagramModel();\n        return React.createElement(\"svg\", __assign({}, this.getProps(), {\n          style: {\n            transform: \"translate(\" + diagramModel.getOffsetX() + \"px,\" + diagramModel.getOffsetY() + \"px) scale(\" + diagramModel.getZoomLevel() / 100 + \")\"\n          }\n        }), this.props.diagramEngine.canvas && _.map(diagramModel.getLinks(), function (link) {\n          if (_this.props.diagramEngine.nodesRendered && !_this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id]) {\n            if (link.sourcePort !== null) {\n              try {\n                var portCenter = _this.props.diagramEngine.getPortCenter(link.sourcePort);\n\n                link.points[0].updateLocation(portCenter);\n\n                var portCoords = _this.props.diagramEngine.getPortCoords(link.sourcePort);\n\n                link.sourcePort.updateCoords(portCoords);\n                _this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n              } catch (ignore) {}\n            }\n\n            if (link.targetPort !== null) {\n              try {\n                var portCenter = _this.props.diagramEngine.getPortCenter(link.targetPort);\n\n                _.last(link.points).updateLocation(portCenter);\n\n                var portCoords = _this.props.diagramEngine.getPortCoords(link.targetPort);\n\n                link.targetPort.updateCoords(portCoords);\n                _this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n              } catch (ignore) {}\n            }\n          }\n\n          var generatedLink = _this.props.diagramEngine.generateWidgetForLink(link);\n\n          if (!generatedLink) {\n            throw new Error(\"no link generated for type: \" + link.getType());\n          }\n\n          return React.createElement(LinkWidget_1.LinkWidget, {\n            key: link.getID(),\n            link: link,\n            diagramEngine: _this.props.diagramEngine\n          }, React.cloneElement(generatedLink, {\n            pointAdded: _this.props.pointAdded\n          }));\n        }));\n      };\n\n      return LinkLayerWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.LinkLayerWidget = LinkLayerWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseAction_1 = __webpack_require__(11);\n\n    var SelectingAction = function (_super) {\n      __extends(SelectingAction, _super);\n\n      function SelectingAction(mouseX, mouseY) {\n        var _this = _super.call(this, mouseX, mouseY) || this;\n\n        _this.mouseX2 = mouseX;\n        _this.mouseY2 = mouseY;\n        return _this;\n      }\n\n      SelectingAction.prototype.getBoxDimensions = function () {\n        return {\n          left: this.mouseX2 > this.mouseX ? this.mouseX : this.mouseX2,\n          top: this.mouseY2 > this.mouseY ? this.mouseY : this.mouseY2,\n          width: Math.abs(this.mouseX2 - this.mouseX),\n          height: Math.abs(this.mouseY2 - this.mouseY),\n          right: this.mouseX2 < this.mouseX ? this.mouseX : this.mouseX2,\n          bottom: this.mouseY2 < this.mouseY ? this.mouseY : this.mouseY2\n        };\n      };\n\n      SelectingAction.prototype.containsElement = function (x, y, diagramModel) {\n        var z = diagramModel.getZoomLevel() / 100;\n        var dimensions = this.getBoxDimensions();\n        return x * z + diagramModel.getOffsetX() > dimensions.left && x * z + diagramModel.getOffsetX() < dimensions.right && y * z + diagramModel.getOffsetY() > dimensions.top && y * z + diagramModel.getOffsetY() < dimensions.bottom;\n      };\n\n      return SelectingAction;\n    }(BaseAction_1.BaseAction);\n\n    exports.SelectingAction = SelectingAction;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseAction_1 = __webpack_require__(11);\n\n    var MoveItemsAction = function (_super) {\n      __extends(MoveItemsAction, _super);\n\n      function MoveItemsAction(mouseX, mouseY, diagramEngine) {\n        var _this = _super.call(this, mouseX, mouseY) || this;\n\n        _this.moved = false;\n        diagramEngine.enableRepaintEntities(diagramEngine.getDiagramModel().getSelectedItems());\n        var selectedItems = diagramEngine.getDiagramModel().getSelectedItems();\n        selectedItems = selectedItems.filter(function (item) {\n          return !diagramEngine.isModelLocked(item);\n        });\n        _this.selectionModels = selectedItems.map(function (item) {\n          return {\n            model: item,\n            initialX: item.x,\n            initialY: item.y\n          };\n        });\n        return _this;\n      }\n\n      return MoveItemsAction;\n    }(BaseAction_1.BaseAction);\n\n    exports.MoveItemsAction = MoveItemsAction;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseAction_1 = __webpack_require__(11);\n\n    var MoveCanvasAction = function (_super) {\n      __extends(MoveCanvasAction, _super);\n\n      function MoveCanvasAction(mouseX, mouseY, diagramModel) {\n        var _this = _super.call(this, mouseX, mouseY) || this;\n\n        _this.initialOffsetX = diagramModel.getOffsetX();\n        _this.initialOffsetY = diagramModel.getOffsetY();\n        return _this;\n      }\n\n      return MoveCanvasAction;\n    }(BaseAction_1.BaseAction);\n\n    exports.MoveCanvasAction = MoveCanvasAction;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var AbstractFactory_1 = __webpack_require__(8);\n\n    var AbstractNodeFactory = function (_super) {\n      __extends(AbstractNodeFactory, _super);\n\n      function AbstractNodeFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      return AbstractNodeFactory;\n    }(AbstractFactory_1.AbstractFactory);\n\n    exports.AbstractNodeFactory = AbstractNodeFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var PortWidget = function (_super) {\n      __extends(PortWidget, _super);\n\n      function PortWidget(props) {\n        var _this = _super.call(this, \"srd-port\", props) || this;\n\n        _this.state = {\n          selected: false\n        };\n        return _this;\n      }\n\n      PortWidget.prototype.getClassName = function () {\n        return \"port \" + _super.prototype.getClassName.call(this) + (this.state.selected ? this.bem(\"--selected\") : \"\");\n      };\n\n      PortWidget.prototype.render = function () {\n        var _this = this;\n\n        return React.createElement(\"div\", __assign({}, this.getProps(), {\n          onMouseEnter: function () {\n            _this.setState({\n              selected: true\n            });\n          },\n          onMouseLeave: function () {\n            _this.setState({\n              selected: false\n            });\n          },\n          \"data-name\": this.props.name,\n          \"data-nodeid\": this.props.node.getID()\n        }));\n      };\n\n      return PortWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.PortWidget = PortWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var PortWidget_1 = __webpack_require__(33);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var DefaultPortLabel = function (_super) {\n      __extends(DefaultPortLabel, _super);\n\n      function DefaultPortLabel(props) {\n        return _super.call(this, \"srd-default-port\", props) || this;\n      }\n\n      DefaultPortLabel.prototype.getClassName = function () {\n        return _super.prototype.getClassName.call(this) + (this.props.model.in ? this.bem(\"--in\") : this.bem(\"--out\"));\n      };\n\n      DefaultPortLabel.prototype.render = function () {\n        var port = React.createElement(PortWidget_1.PortWidget, {\n          node: this.props.model.getParent(),\n          name: this.props.model.name\n        });\n        var label = React.createElement(\"div\", {\n          className: \"name\"\n        }, this.props.model.label);\n        return React.createElement(\"div\", __assign({}, this.getProps()), this.props.model.in ? port : label, this.props.model.in ? label : port);\n      };\n\n      return DefaultPortLabel;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.DefaultPortLabel = DefaultPortLabel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var _ = __webpack_require__(0);\n\n    var DefaultPortLabelWidget_1 = __webpack_require__(34);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var DefaultNodeWidget = function (_super) {\n      __extends(DefaultNodeWidget, _super);\n\n      function DefaultNodeWidget(props) {\n        var _this = _super.call(this, \"srd-default-node\", props) || this;\n\n        _this.state = {};\n        return _this;\n      }\n\n      DefaultNodeWidget.prototype.generatePort = function (port) {\n        return React.createElement(DefaultPortLabelWidget_1.DefaultPortLabel, {\n          model: port,\n          key: port.id\n        });\n      };\n\n      DefaultNodeWidget.prototype.render = function () {\n        return React.createElement(\"div\", __assign({}, this.getProps(), {\n          style: {\n            background: this.props.node.color\n          }\n        }), React.createElement(\"div\", {\n          className: this.bem(\"__title\")\n        }, React.createElement(\"div\", {\n          className: this.bem(\"__name\")\n        }, this.props.node.name)), React.createElement(\"div\", {\n          className: this.bem(\"__ports\")\n        }, React.createElement(\"div\", {\n          className: this.bem(\"__in\")\n        }, _.map(this.props.node.getInPorts(), this.generatePort.bind(this))), React.createElement(\"div\", {\n          className: this.bem(\"__out\")\n        }, _.map(this.props.node.getOutPorts(), this.generatePort.bind(this)))));\n      };\n\n      return DefaultNodeWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.DefaultNodeWidget = DefaultNodeWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var AbstractFactory_1 = __webpack_require__(8);\n\n    var AbstractLinkFactory = function (_super) {\n      __extends(AbstractLinkFactory, _super);\n\n      function AbstractLinkFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      return AbstractLinkFactory;\n    }(AbstractFactory_1.AbstractFactory);\n\n    exports.AbstractLinkFactory = AbstractLinkFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var PointModel_1 = __webpack_require__(5);\n\n    var Toolkit_1 = __webpack_require__(7);\n\n    var PathFinding_1 = __webpack_require__(16);\n\n    var _ = __webpack_require__(0);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var DefaultLinkWidget = function (_super) {\n      __extends(DefaultLinkWidget, _super);\n\n      function DefaultLinkWidget(props) {\n        var _this = _super.call(this, \"srd-default-link\", props) || this;\n\n        _this.addPointToLink = function (event, index) {\n          if (!event.shiftKey && !_this.props.diagramEngine.isModelLocked(_this.props.link) && _this.props.link.points.length - 1 <= _this.props.diagramEngine.getMaxNumberPointsPerLink()) {\n            var point = new PointModel_1.PointModel(_this.props.link, _this.props.diagramEngine.getRelativeMousePoint(event));\n            point.setSelected(true);\n\n            _this.forceUpdate();\n\n            _this.props.link.addPoint(point, index);\n\n            _this.props.pointAdded(point, event);\n          }\n        };\n\n        _this.findPathAndRelativePositionToRenderLabel = function (index) {\n          var lengths = _this.refPaths.map(function (path) {\n            return path.getTotalLength();\n          });\n\n          var labelPosition = lengths.reduce(function (previousValue, currentValue) {\n            return previousValue + currentValue;\n          }, 0) * (index / (_this.props.link.labels.length + 1));\n          var pathIndex = 0;\n\n          while (pathIndex < _this.refPaths.length) {\n            if (labelPosition - lengths[pathIndex] < 0) {\n              return {\n                path: _this.refPaths[pathIndex],\n                position: labelPosition\n              };\n            }\n\n            labelPosition -= lengths[pathIndex];\n            pathIndex++;\n          }\n        };\n\n        _this.calculateLabelPosition = function (label, index) {\n          if (!_this.refLabels[label.id]) {\n            return;\n          }\n\n          var _a = _this.findPathAndRelativePositionToRenderLabel(index),\n              path = _a.path,\n              position = _a.position;\n\n          var labelDimensions = {\n            width: _this.refLabels[label.id].offsetWidth,\n            height: _this.refLabels[label.id].offsetHeight\n          };\n          var pathCentre = path.getPointAtLength(position);\n          var labelCoordinates = {\n            x: pathCentre.x - labelDimensions.width / 2 + label.offsetX,\n            y: pathCentre.y - labelDimensions.height / 2 + label.offsetY\n          };\n\n          _this.refLabels[label.id].setAttribute(\"style\", \"transform: translate(\" + labelCoordinates.x + \"px, \" + labelCoordinates.y + \"px);\");\n        };\n\n        _this.refLabels = {};\n        _this.refPaths = [];\n        _this.state = {\n          selected: false\n        };\n\n        if (props.diagramEngine.isSmartRoutingEnabled()) {\n          _this.pathFinding = new PathFinding_1.default(_this.props.diagramEngine);\n        }\n\n        return _this;\n      }\n\n      DefaultLinkWidget.prototype.calculateAllLabelPosition = function () {\n        var _this = this;\n\n        _.forEach(this.props.link.labels, function (label, index) {\n          _this.calculateLabelPosition(label, index + 1);\n        });\n      };\n\n      DefaultLinkWidget.prototype.componentDidUpdate = function () {\n        if (this.props.link.labels.length > 0) {\n          window.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n        }\n      };\n\n      DefaultLinkWidget.prototype.componentDidMount = function () {\n        if (this.props.link.labels.length > 0) {\n          window.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n        }\n      };\n\n      DefaultLinkWidget.prototype.generatePoint = function (pointIndex) {\n        var _this = this;\n\n        var x = this.props.link.points[pointIndex].x;\n        var y = this.props.link.points[pointIndex].y;\n        return React.createElement(\"g\", {\n          key: \"point-\" + this.props.link.points[pointIndex].id\n        }, React.createElement(\"circle\", {\n          cx: x,\n          cy: y,\n          r: 5,\n          className: \"point \" + this.bem(\"__point\") + (this.props.link.points[pointIndex].isSelected() ? this.bem(\"--point-selected\") : \"\")\n        }), React.createElement(\"circle\", {\n          onMouseLeave: function () {\n            _this.setState({\n              selected: false\n            });\n          },\n          onMouseEnter: function () {\n            _this.setState({\n              selected: true\n            });\n          },\n          \"data-id\": this.props.link.points[pointIndex].id,\n          \"data-linkid\": this.props.link.id,\n          cx: x,\n          cy: y,\n          r: 15,\n          opacity: 0,\n          className: \"point \" + this.bem(\"__point\")\n        }));\n      };\n\n      DefaultLinkWidget.prototype.generateLabel = function (label) {\n        var _this = this;\n\n        var canvas = this.props.diagramEngine.canvas;\n        return React.createElement(\"foreignObject\", {\n          key: label.id,\n          className: this.bem(\"__label\"),\n          width: canvas.offsetWidth,\n          height: canvas.offsetHeight\n        }, React.createElement(\"div\", {\n          ref: function (ref) {\n            return _this.refLabels[label.id] = ref;\n          }\n        }, this.props.diagramEngine.getFactoryForLabel(label).generateReactWidget(this.props.diagramEngine, label)));\n      };\n\n      DefaultLinkWidget.prototype.generateLink = function (path, extraProps, id) {\n        var _this = this;\n\n        var props = this.props;\n        var Bottom = React.cloneElement(props.diagramEngine.getFactoryForLink(this.props.link).generateLinkSegment(this.props.link, this, this.state.selected || this.props.link.isSelected(), path), {\n          ref: function (ref) {\n            return ref && _this.refPaths.push(ref);\n          }\n        });\n        var Top = React.cloneElement(Bottom, __assign({}, extraProps, {\n          strokeLinecap: \"round\",\n          onMouseLeave: function () {\n            _this.setState({\n              selected: false\n            });\n          },\n          onMouseEnter: function () {\n            _this.setState({\n              selected: true\n            });\n          },\n          ref: null,\n          \"data-linkid\": this.props.link.getID(),\n          strokeOpacity: this.state.selected ? .1 : 0,\n          strokeWidth: 20,\n          onContextMenu: function () {\n            if (!_this.props.diagramEngine.isModelLocked(_this.props.link)) {\n              event.preventDefault();\n\n              _this.props.link.remove();\n            }\n          }\n        }));\n        return React.createElement(\"g\", {\n          key: \"link-\" + id\n        }, Bottom, Top);\n      };\n\n      DefaultLinkWidget.prototype.isSmartRoutingApplicable = function () {\n        var _a = this.props,\n            diagramEngine = _a.diagramEngine,\n            link = _a.link;\n\n        if (!diagramEngine.isSmartRoutingEnabled()) {\n          return false;\n        }\n\n        if (link.points.length !== 2) {\n          return false;\n        }\n\n        if (link.sourcePort === null || link.targetPort === null) {\n          return false;\n        }\n\n        return true;\n      };\n\n      DefaultLinkWidget.prototype.render = function () {\n        var _this = this;\n\n        var diagramEngine = this.props.diagramEngine;\n\n        if (!diagramEngine.nodesRendered) {\n          return null;\n        }\n\n        var points = this.props.link.points;\n        var paths = [];\n\n        if (this.isSmartRoutingApplicable()) {\n          var directPathCoords = this.pathFinding.calculateDirectPath(_.first(points), _.last(points));\n          var routingMatrix = diagramEngine.getRoutingMatrix();\n          var smartLink = this.pathFinding.calculateLinkStartEndCoords(routingMatrix, directPathCoords);\n\n          if (smartLink) {\n            var start = smartLink.start,\n                end = smartLink.end,\n                pathToStart = smartLink.pathToStart,\n                pathToEnd = smartLink.pathToEnd;\n            var simplifiedPath = this.pathFinding.calculateDynamicPath(routingMatrix, start, end, pathToStart, pathToEnd);\n            paths.push(this.generateLink(Toolkit_1.Toolkit.generateDynamicPath(simplifiedPath), {\n              onMouseDown: function (event) {\n                _this.addPointToLink(event, 1);\n              }\n            }, \"0\"));\n          }\n        }\n\n        if (paths.length === 0) {\n          if (points.length === 2) {\n            var isHorizontal = Math.abs(points[0].x - points[1].x) > Math.abs(points[0].y - points[1].y);\n            var xOrY = isHorizontal ? \"x\" : \"y\";\n            var margin = 50;\n\n            if (Math.abs(points[0][xOrY] - points[1][xOrY]) < 50) {\n              margin = 5;\n            }\n\n            var pointLeft = points[0];\n            var pointRight = points[1];\n\n            if (pointLeft[xOrY] > pointRight[xOrY]) {\n              pointLeft = points[1];\n              pointRight = points[0];\n            }\n\n            paths.push(this.generateLink(Toolkit_1.Toolkit.generateCurvePath(pointLeft, pointRight, this.props.link.curvyness), {\n              onMouseDown: function (event) {\n                _this.addPointToLink(event, 1);\n              }\n            }, \"0\"));\n\n            if (this.props.link.targetPort === null) {\n              paths.push(this.generatePoint(1));\n            }\n          } else {\n            var _loop_1 = function (j) {\n              paths.push(this_1.generateLink(Toolkit_1.Toolkit.generateLinePath(points[j], points[j + 1]), {\n                \"data-linkid\": this_1.props.link.id,\n                \"data-point\": j,\n                onMouseDown: function (event) {\n                  _this.addPointToLink(event, j + 1);\n                }\n              }, j));\n            };\n\n            var this_1 = this;\n\n            for (var j = 0; j < points.length - 1; j++) {\n              _loop_1(j);\n            }\n\n            for (var i = 1; i < points.length - 1; i++) {\n              paths.push(this.generatePoint(i));\n            }\n\n            if (this.props.link.targetPort === null) {\n              paths.push(this.generatePoint(points.length - 1));\n            }\n          }\n        }\n\n        this.refPaths = [];\n        return React.createElement(\"g\", __assign({}, this.getProps()), paths, _.map(this.props.link.labels, function (labelModel) {\n          return _this.generateLabel(labelModel);\n        }));\n      };\n\n      DefaultLinkWidget.defaultProps = {\n        color: \"black\",\n        width: 3,\n        link: null,\n        engine: null,\n        smooth: false,\n        diagramEngine: null\n      };\n      return DefaultLinkWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.DefaultLinkWidget = DefaultLinkWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var DefaultPortModel_1 = __webpack_require__(20);\n\n    var _ = __webpack_require__(0);\n\n    var NodeModel_1 = __webpack_require__(9);\n\n    var Toolkit_1 = __webpack_require__(7);\n\n    var DefaultNodeModel = function (_super) {\n      __extends(DefaultNodeModel, _super);\n\n      function DefaultNodeModel(name, color) {\n        if (name === void 0) {\n          name = \"Untitled\";\n        }\n\n        if (color === void 0) {\n          color = \"rgb(0,192,255)\";\n        }\n\n        var _this = _super.call(this, \"default\") || this;\n\n        _this.name = name;\n        _this.color = color;\n        return _this;\n      }\n\n      DefaultNodeModel.prototype.addInPort = function (label) {\n        return this.addPort(new DefaultPortModel_1.DefaultPortModel(true, Toolkit_1.Toolkit.UID(), label));\n      };\n\n      DefaultNodeModel.prototype.addOutPort = function (label) {\n        return this.addPort(new DefaultPortModel_1.DefaultPortModel(false, Toolkit_1.Toolkit.UID(), label));\n      };\n\n      DefaultNodeModel.prototype.deSerialize = function (object, engine) {\n        _super.prototype.deSerialize.call(this, object, engine);\n\n        this.name = object.name;\n        this.color = object.color;\n      };\n\n      DefaultNodeModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          name: this.name,\n          color: this.color\n        });\n      };\n\n      DefaultNodeModel.prototype.getInPorts = function () {\n        return _.filter(this.ports, function (portModel) {\n          return portModel.in;\n        });\n      };\n\n      DefaultNodeModel.prototype.getOutPorts = function () {\n        return _.filter(this.ports, function (portModel) {\n          return !portModel.in;\n        });\n      };\n\n      return DefaultNodeModel;\n    }(NodeModel_1.NodeModel);\n\n    exports.DefaultNodeModel = DefaultNodeModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var DefaultLabelWidget = function (_super) {\n      __extends(DefaultLabelWidget, _super);\n\n      function DefaultLabelWidget(props) {\n        return _super.call(this, \"srd-default-label\", props) || this;\n      }\n\n      DefaultLabelWidget.prototype.render = function () {\n        return React.createElement(\"div\", __assign({}, this.getProps()), this.props.model.label);\n      };\n\n      return DefaultLabelWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.DefaultLabelWidget = DefaultLabelWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var AbstractFactory_1 = __webpack_require__(8);\n\n    var AbstractLabelFactory = function (_super) {\n      __extends(AbstractLabelFactory, _super);\n\n      function AbstractLabelFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      return AbstractLabelFactory;\n    }(AbstractFactory_1.AbstractFactory);\n\n    exports.AbstractLabelFactory = AbstractLabelFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var AbstractLabelFactory_1 = __webpack_require__(40);\n\n    var DefaultLabelModel_1 = __webpack_require__(18);\n\n    var DefaultLabelWidget_1 = __webpack_require__(39);\n\n    var DefaultLabelFactory = function (_super) {\n      __extends(DefaultLabelFactory, _super);\n\n      function DefaultLabelFactory() {\n        return _super.call(this, \"default\") || this;\n      }\n\n      DefaultLabelFactory.prototype.generateReactWidget = function (diagramEngine, label) {\n        return React.createElement(DefaultLabelWidget_1.DefaultLabelWidget, {\n          model: label\n        });\n      };\n\n      DefaultLabelFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultLabelModel_1.DefaultLabelModel();\n      };\n\n      return DefaultLabelFactory;\n    }(AbstractLabelFactory_1.AbstractLabelFactory);\n\n    exports.DefaultLabelFactory = DefaultLabelFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var AbstractFactory_1 = __webpack_require__(8);\n\n    var AbstractPortFactory = function (_super) {\n      __extends(AbstractPortFactory, _super);\n\n      function AbstractPortFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      return AbstractPortFactory;\n    }(AbstractFactory_1.AbstractFactory);\n\n    exports.AbstractPortFactory = AbstractPortFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var DefaultPortModel_1 = __webpack_require__(20);\n\n    var AbstractPortFactory_1 = __webpack_require__(42);\n\n    var DefaultPortFactory = function (_super) {\n      __extends(DefaultPortFactory, _super);\n\n      function DefaultPortFactory() {\n        return _super.call(this, \"default\") || this;\n      }\n\n      DefaultPortFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultPortModel_1.DefaultPortModel(true, \"unknown\");\n      };\n\n      return DefaultPortFactory;\n    }(AbstractPortFactory_1.AbstractPortFactory);\n\n    exports.DefaultPortFactory = DefaultPortFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseEntity_1 = __webpack_require__(13);\n\n    var _ = __webpack_require__(0);\n\n    var LinkModel_1 = __webpack_require__(21);\n\n    var NodeModel_1 = __webpack_require__(9);\n\n    var PortModel_1 = __webpack_require__(12);\n\n    var PointModel_1 = __webpack_require__(5);\n\n    var DiagramModel = function (_super) {\n      __extends(DiagramModel, _super);\n\n      function DiagramModel() {\n        var _this = _super.call(this) || this;\n\n        _this.links = {};\n        _this.nodes = {};\n        _this.offsetX = 0;\n        _this.offsetY = 0;\n        _this.zoom = 100;\n        _this.rendered = false;\n        _this.gridSize = 0;\n        return _this;\n      }\n\n      DiagramModel.prototype.setGridSize = function (size) {\n        if (size === void 0) {\n          size = 0;\n        }\n\n        this.gridSize = size;\n        this.iterateListeners(function (listener, event) {\n          if (listener.gridUpdated) {\n            listener.gridUpdated(__assign({}, event, {\n              size: size\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.getGridPosition = function (pos) {\n        if (this.gridSize === 0) {\n          return pos;\n        }\n\n        return this.gridSize * Math.floor((pos + this.gridSize / 2) / this.gridSize);\n      };\n\n      DiagramModel.prototype.deSerializeDiagram = function (object, diagramEngine) {\n        var _this = this;\n\n        this.deSerialize(object, diagramEngine);\n        this.offsetX = object.offsetX;\n        this.offsetY = object.offsetY;\n        this.zoom = object.zoom;\n        this.gridSize = object.gridSize;\n\n        _.forEach(object.nodes, function (node) {\n          var nodeOb = diagramEngine.getNodeFactory(node.type).getNewInstance(node);\n          nodeOb.setParent(_this);\n          nodeOb.deSerialize(node, diagramEngine);\n\n          _this.addNode(nodeOb);\n        });\n\n        _.forEach(object.links, function (link) {\n          var linkOb = diagramEngine.getLinkFactory(link.type).getNewInstance();\n          linkOb.setParent(_this);\n          linkOb.deSerialize(link, diagramEngine);\n\n          _this.addLink(linkOb);\n        });\n      };\n\n      DiagramModel.prototype.serializeDiagram = function () {\n        return _.merge(this.serialize(), {\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          zoom: this.zoom,\n          gridSize: this.gridSize,\n          links: _.map(this.links, function (link) {\n            return link.serialize();\n          }),\n          nodes: _.map(this.nodes, function (node) {\n            return node.serialize();\n          })\n        });\n      };\n\n      DiagramModel.prototype.clearSelection = function (ignore) {\n        if (ignore === void 0) {\n          ignore = null;\n        }\n\n        _.forEach(this.getSelectedItems(), function (element) {\n          if (ignore && ignore.getID() === element.getID()) {\n            return;\n          }\n\n          element.setSelected(false);\n        });\n      };\n\n      DiagramModel.prototype.getSelectedItems = function () {\n        var filters = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          filters[_i] = arguments[_i];\n        }\n\n        if (!Array.isArray(filters)) {\n          filters = [filters];\n        }\n\n        var items = [];\n        items = items.concat(_.flatMap(this.nodes, function (node) {\n          return node.getSelectedEntities();\n        }));\n        items = items.concat(_.flatMap(this.links, function (link) {\n          return link.getSelectedEntities();\n        }));\n        items = items.concat(_.flatMap(this.links, function (link) {\n          return _.flatMap(link.points, function (point) {\n            return point.getSelectedEntities();\n          });\n        }));\n        items = _.uniq(items);\n\n        if (filters.length > 0) {\n          items = _.filter(_.uniq(items), function (item) {\n            if (_.includes(filters, \"node\") && item instanceof NodeModel_1.NodeModel) {\n              return true;\n            }\n\n            if (_.includes(filters, \"link\") && item instanceof LinkModel_1.LinkModel) {\n              return true;\n            }\n\n            if (_.includes(filters, \"port\") && item instanceof PortModel_1.PortModel) {\n              return true;\n            }\n\n            if (_.includes(filters, \"point\") && item instanceof PointModel_1.PointModel) {\n              return true;\n            }\n\n            return false;\n          });\n        }\n\n        return items;\n      };\n\n      DiagramModel.prototype.setZoomLevel = function (zoom) {\n        this.zoom = zoom;\n        this.iterateListeners(function (listener, event) {\n          if (listener.zoomUpdated) {\n            listener.zoomUpdated(__assign({}, event, {\n              zoom: zoom\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.setOffset = function (offsetX, offsetY) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.iterateListeners(function (listener, event) {\n          if (listener.offsetUpdated) {\n            listener.offsetUpdated(__assign({}, event, {\n              offsetX: offsetX,\n              offsetY: offsetY\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.setOffsetX = function (offsetX) {\n        var _this = this;\n\n        this.offsetX = offsetX;\n        this.iterateListeners(function (listener, event) {\n          if (listener.offsetUpdated) {\n            listener.offsetUpdated(__assign({}, event, {\n              offsetX: offsetX,\n              offsetY: _this.offsetY\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.setOffsetY = function (offsetY) {\n        var _this = this;\n\n        this.offsetY = offsetY;\n        this.iterateListeners(function (listener, event) {\n          if (listener.offsetUpdated) {\n            listener.offsetUpdated(__assign({}, event, {\n              offsetX: _this.offsetX,\n              offsetY: _this.offsetY\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.getOffsetY = function () {\n        return this.offsetY;\n      };\n\n      DiagramModel.prototype.getOffsetX = function () {\n        return this.offsetX;\n      };\n\n      DiagramModel.prototype.getZoomLevel = function () {\n        return this.zoom;\n      };\n\n      DiagramModel.prototype.getNode = function (node) {\n        if (node instanceof NodeModel_1.NodeModel) {\n          return node;\n        }\n\n        if (!this.nodes[node]) {\n          return null;\n        }\n\n        return this.nodes[node];\n      };\n\n      DiagramModel.prototype.getLink = function (link) {\n        if (link instanceof LinkModel_1.LinkModel) {\n          return link;\n        }\n\n        if (!this.links[link]) {\n          return null;\n        }\n\n        return this.links[link];\n      };\n\n      DiagramModel.prototype.addAll = function () {\n        var _this = this;\n\n        var models = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          models[_i] = arguments[_i];\n        }\n\n        _.forEach(models, function (model) {\n          if (model instanceof LinkModel_1.LinkModel) {\n            _this.addLink(model);\n          } else if (model instanceof NodeModel_1.NodeModel) {\n            _this.addNode(model);\n          }\n        });\n\n        return models;\n      };\n\n      DiagramModel.prototype.addLink = function (link) {\n        var _this = this;\n\n        link.addListener({\n          entityRemoved: function () {\n            _this.removeLink(link);\n          }\n        });\n        this.links[link.getID()] = link;\n        this.iterateListeners(function (listener, event) {\n          if (listener.linksUpdated) {\n            listener.linksUpdated(__assign({}, event, {\n              link: link,\n              isCreated: true\n            }));\n          }\n        });\n        return link;\n      };\n\n      DiagramModel.prototype.addNode = function (node) {\n        var _this = this;\n\n        node.addListener({\n          entityRemoved: function () {\n            _this.removeNode(node);\n          }\n        });\n        this.nodes[node.getID()] = node;\n        this.iterateListeners(function (listener, event) {\n          if (listener.nodesUpdated) {\n            listener.nodesUpdated(__assign({}, event, {\n              node: node,\n              isCreated: true\n            }));\n          }\n        });\n        return node;\n      };\n\n      DiagramModel.prototype.removeLink = function (link) {\n        link = this.getLink(link);\n        delete this.links[link.getID()];\n        this.iterateListeners(function (listener, event) {\n          if (listener.linksUpdated) {\n            listener.linksUpdated(__assign({}, event, {\n              link: link,\n              isCreated: false\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.removeNode = function (node) {\n        node = this.getNode(node);\n        delete this.nodes[node.getID()];\n        this.iterateListeners(function (listener, event) {\n          if (listener.nodesUpdated) {\n            listener.nodesUpdated(__assign({}, event, {\n              node: node,\n              isCreated: false\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.getLinks = function () {\n        return this.links;\n      };\n\n      DiagramModel.prototype.getNodes = function () {\n        return this.nodes;\n      };\n\n      return DiagramModel;\n    }(BaseEntity_1.BaseEntity);\n\n    exports.DiagramModel = DiagramModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function __export(m) {\n      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    __export(__webpack_require__(7));\n\n    __export(__webpack_require__(13));\n\n    __export(__webpack_require__(49));\n\n    __export(__webpack_require__(38));\n\n    __export(__webpack_require__(20));\n\n    __export(__webpack_require__(19));\n\n    __export(__webpack_require__(18));\n\n    __export(__webpack_require__(48));\n\n    __export(__webpack_require__(47));\n\n    __export(__webpack_require__(43));\n\n    __export(__webpack_require__(41));\n\n    __export(__webpack_require__(37));\n\n    __export(__webpack_require__(39));\n\n    __export(__webpack_require__(35));\n\n    __export(__webpack_require__(34));\n\n    __export(__webpack_require__(8));\n\n    __export(__webpack_require__(40));\n\n    __export(__webpack_require__(36));\n\n    __export(__webpack_require__(32));\n\n    __export(__webpack_require__(42));\n\n    __export(__webpack_require__(16));\n\n    __export(__webpack_require__(11));\n\n    __export(__webpack_require__(31));\n\n    __export(__webpack_require__(30));\n\n    __export(__webpack_require__(29));\n\n    __export(__webpack_require__(6));\n\n    __export(__webpack_require__(44));\n\n    __export(__webpack_require__(21));\n\n    __export(__webpack_require__(9));\n\n    __export(__webpack_require__(5));\n\n    __export(__webpack_require__(12));\n\n    __export(__webpack_require__(17));\n\n    __export(__webpack_require__(46));\n\n    __export(__webpack_require__(27));\n\n    __export(__webpack_require__(25));\n\n    __export(__webpack_require__(33));\n\n    __export(__webpack_require__(3));\n\n    __export(__webpack_require__(28));\n\n    __export(__webpack_require__(26));\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var _ = __webpack_require__(0);\n\n    var LinkLayerWidget_1 = __webpack_require__(28);\n\n    var NodeLayerWidget_1 = __webpack_require__(26);\n\n    var Toolkit_1 = __webpack_require__(7);\n\n    var MoveCanvasAction_1 = __webpack_require__(31);\n\n    var MoveItemsAction_1 = __webpack_require__(30);\n\n    var SelectingAction_1 = __webpack_require__(29);\n\n    var NodeModel_1 = __webpack_require__(9);\n\n    var PointModel_1 = __webpack_require__(5);\n\n    var PortModel_1 = __webpack_require__(12);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var DiagramWidget = function (_super) {\n      __extends(DiagramWidget, _super);\n\n      function DiagramWidget(props) {\n        var _this = _super.call(this, \"srd-diagram\", props) || this;\n\n        _this.onKeyUpPointer = null;\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        _this.state = {\n          action: null,\n          wasMoved: false,\n          renderedNodes: false,\n          windowListener: null,\n          diagramEngineListener: null,\n          document: null\n        };\n        return _this;\n      }\n\n      DiagramWidget.prototype.componentWillUnmount = function () {\n        this.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n        this.props.diagramEngine.setCanvas(null);\n        window.removeEventListener(\"keyup\", this.onKeyUpPointer);\n        window.removeEventListener(\"mouseUp\", this.onMouseUp);\n        window.removeEventListener(\"mouseMove\", this.onMouseMove);\n      };\n\n      DiagramWidget.prototype.componentWillReceiveProps = function (nextProps) {\n        var _this = this;\n\n        if (this.props.diagramEngine !== nextProps.diagramEngine) {\n          this.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n          var diagramEngineListener = nextProps.diagramEngine.addListener({\n            repaintCanvas: function () {\n              return _this.forceUpdate();\n            }\n          });\n          this.setState({\n            diagramEngineListener: diagramEngineListener\n          });\n        }\n      };\n\n      DiagramWidget.prototype.componentWillUpdate = function (nextProps) {\n        if (this.props.diagramEngine.diagramModel.id !== nextProps.diagramEngine.diagramModel.id) {\n          this.setState({\n            renderedNodes: false\n          });\n          nextProps.diagramEngine.diagramModel.rendered = true;\n        }\n\n        if (!nextProps.diagramEngine.diagramModel.rendered) {\n          this.setState({\n            renderedNodes: false\n          });\n          nextProps.diagramEngine.diagramModel.rendered = true;\n        }\n      };\n\n      DiagramWidget.prototype.componentDidUpdate = function () {\n        if (!this.state.renderedNodes) {\n          this.setState({\n            renderedNodes: true\n          });\n        }\n      };\n\n      DiagramWidget.prototype.componentDidMount = function () {\n        var _this = this;\n\n        this.onKeyUpPointer = this.onKeyUp.bind(this);\n        this.setState({\n          document: document,\n          renderedNodes: true,\n          diagramEngineListener: this.props.diagramEngine.addListener({\n            repaintCanvas: function () {\n              _this.forceUpdate();\n            }\n          })\n        });\n        window.addEventListener(\"keyup\", this.onKeyUpPointer, false);\n\n        if (true) {\n          window.focus();\n        }\n      };\n\n      DiagramWidget.prototype.getMouseElement = function (event) {\n        var target = event.target;\n        var diagramModel = this.props.diagramEngine.diagramModel;\n        var element = Toolkit_1.Toolkit.closest(target, \".port[data-name]\");\n\n        if (element) {\n          var nodeElement = Toolkit_1.Toolkit.closest(target, \".node[data-nodeid]\");\n          return {\n            model: diagramModel.getNode(nodeElement.getAttribute(\"data-nodeid\")).getPort(element.getAttribute(\"data-name\")),\n            element: element\n          };\n        }\n\n        element = Toolkit_1.Toolkit.closest(target, \".point[data-id]\");\n\n        if (element) {\n          return {\n            model: diagramModel.getLink(element.getAttribute(\"data-linkid\")).getPointModel(element.getAttribute(\"data-id\")),\n            element: element\n          };\n        }\n\n        element = Toolkit_1.Toolkit.closest(target, \"[data-linkid]\");\n\n        if (element) {\n          return {\n            model: diagramModel.getLink(element.getAttribute(\"data-linkid\")),\n            element: element\n          };\n        }\n\n        element = Toolkit_1.Toolkit.closest(target, \".node[data-nodeid]\");\n\n        if (element) {\n          return {\n            model: diagramModel.getNode(element.getAttribute(\"data-nodeid\")),\n            element: element\n          };\n        }\n\n        return null;\n      };\n\n      DiagramWidget.prototype.fireAction = function () {\n        if (this.state.action && this.props.actionStillFiring) {\n          this.props.actionStillFiring(this.state.action);\n        }\n      };\n\n      DiagramWidget.prototype.stopFiringAction = function (shouldSkipEvent) {\n        if (this.props.actionStoppedFiring && !shouldSkipEvent) {\n          this.props.actionStoppedFiring(this.state.action);\n        }\n\n        this.setState({\n          action: null\n        });\n      };\n\n      DiagramWidget.prototype.startFiringAction = function (action) {\n        var setState = true;\n\n        if (this.props.actionStartedFiring) {\n          setState = this.props.actionStartedFiring(action);\n        }\n\n        if (setState) {\n          this.setState({\n            action: action\n          });\n        }\n      };\n\n      DiagramWidget.prototype.onMouseMove = function (event) {\n        var _this = this;\n\n        var diagramEngine = this.props.diagramEngine;\n        var diagramModel = diagramEngine.getDiagramModel();\n\n        if (this.state.action instanceof SelectingAction_1.SelectingAction) {\n          var relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n\n          _.forEach(diagramModel.getNodes(), function (node) {\n            if (_this.state.action.containsElement(node.x, node.y, diagramModel)) {\n              node.setSelected(true);\n            }\n          });\n\n          _.forEach(diagramModel.getLinks(), function (link) {\n            var allSelected = true;\n\n            _.forEach(link.points, function (point) {\n              if (_this.state.action.containsElement(point.x, point.y, diagramModel)) {\n                point.setSelected(true);\n              } else {\n                allSelected = false;\n              }\n            });\n\n            if (allSelected) {\n              link.setSelected(true);\n            }\n          });\n\n          this.state.action.mouseX2 = relative.x;\n          this.state.action.mouseY2 = relative.y;\n          this.fireAction();\n          this.setState({\n            action: this.state.action\n          });\n          return;\n        } else if (this.state.action instanceof MoveItemsAction_1.MoveItemsAction) {\n          var amountX_1 = event.clientX - this.state.action.mouseX;\n          var amountY_1 = event.clientY - this.state.action.mouseY;\n          var amountZoom_1 = diagramModel.getZoomLevel() / 100;\n\n          _.forEach(this.state.action.selectionModels, function (model) {\n            if (model.model instanceof NodeModel_1.NodeModel || model.model instanceof PointModel_1.PointModel && !model.model.isConnectedToPort()) {\n              model.model.x = diagramModel.getGridPosition(model.initialX + amountX_1 / amountZoom_1);\n              model.model.y = diagramModel.getGridPosition(model.initialY + amountY_1 / amountZoom_1);\n\n              if (model.model instanceof NodeModel_1.NodeModel) {\n                _.forEach(model.model.getPorts(), function (port) {\n                  var portCoords = _this.props.diagramEngine.getPortCoords(port);\n\n                  port.updateCoords(portCoords);\n                });\n              }\n\n              if (diagramEngine.isSmartRoutingEnabled()) {\n                diagramEngine.calculateRoutingMatrix();\n              }\n            } else if (model.model instanceof PointModel_1.PointModel) {\n              model.model.x = model.initialX + diagramModel.getGridPosition(amountX_1 / amountZoom_1);\n              model.model.y = model.initialY + diagramModel.getGridPosition(amountY_1 / amountZoom_1);\n            }\n          });\n\n          if (diagramEngine.isSmartRoutingEnabled()) {\n            diagramEngine.calculateCanvasMatrix();\n          }\n\n          this.fireAction();\n\n          if (!this.state.wasMoved) {\n            this.setState({\n              wasMoved: true\n            });\n          } else {\n            this.forceUpdate();\n          }\n        } else if (this.state.action instanceof MoveCanvasAction_1.MoveCanvasAction) {\n          if (this.props.allowCanvasTranslation) {\n            diagramModel.setOffset(this.state.action.initialOffsetX + (event.clientX - this.state.action.mouseX), this.state.action.initialOffsetY + (event.clientY - this.state.action.mouseY));\n            this.fireAction();\n            this.forceUpdate();\n          }\n        }\n      };\n\n      DiagramWidget.prototype.onKeyUp = function (event) {\n        var _this = this;\n\n        if (this.props.deleteKeys.indexOf(event.keyCode) !== -1) {\n          _.forEach(this.props.diagramEngine.getDiagramModel().getSelectedItems(), function (element) {\n            if (!_this.props.diagramEngine.isModelLocked(element)) {\n              element.remove();\n            }\n          });\n\n          this.forceUpdate();\n        }\n      };\n\n      DiagramWidget.prototype.onMouseUp = function (event) {\n        var _this = this;\n\n        var diagramEngine = this.props.diagramEngine;\n\n        if (this.state.action instanceof MoveItemsAction_1.MoveItemsAction) {\n          var element = this.getMouseElement(event);\n\n          _.forEach(this.state.action.selectionModels, function (model) {\n            if (!(model.model instanceof PointModel_1.PointModel)) {\n              return;\n            }\n\n            if (element && element.model instanceof PortModel_1.PortModel && !diagramEngine.isModelLocked(element.model)) {\n              var link = model.model.getLink();\n\n              if (link.getTargetPort() !== null) {\n                if (link.getTargetPort() !== element.model && link.getSourcePort() !== element.model) {\n                  var targetPort = link.getTargetPort();\n                  var newLink = link.clone({});\n                  newLink.setSourcePort(element.model);\n                  newLink.setTargetPort(targetPort);\n                  link.setTargetPort(element.model);\n                  targetPort.removeLink(link);\n                  newLink.removePointsBefore(newLink.getPoints()[link.getPointIndex(model.model)]);\n                  link.removePointsAfter(model.model);\n                  diagramEngine.getDiagramModel().addLink(newLink);\n                } else if (link.getTargetPort() === element.model) {\n                  link.removePointsAfter(model.model);\n                } else if (link.getSourcePort() === element.model) {\n                  link.removePointsBefore(model.model);\n                }\n              } else {\n                link.setTargetPort(element.model);\n              }\n\n              delete _this.props.diagramEngine.linksThatHaveInitiallyRendered[link.getID()];\n            }\n          });\n\n          if (!this.props.allowLooseLinks && this.state.wasMoved) {\n            _.forEach(this.state.action.selectionModels, function (model) {\n              if (!(model.model instanceof PointModel_1.PointModel)) {\n                return;\n              }\n\n              var selectedPoint = model.model;\n              var link = selectedPoint.getLink();\n\n              if (link.getSourcePort() === null || link.getTargetPort() === null) {\n                link.remove();\n              }\n            });\n          }\n\n          _.forEach(this.state.action.selectionModels, function (model) {\n            if (!(model.model instanceof PointModel_1.PointModel)) {\n              return;\n            }\n\n            var link = model.model.getLink();\n            var sourcePort = link.getSourcePort();\n            var targetPort = link.getTargetPort();\n\n            if (sourcePort !== null && targetPort !== null) {\n              if (!sourcePort.canLinkToPort(targetPort)) {\n                link.remove();\n              } else if (_.some(_.values(targetPort.getLinks()), function (l) {\n                return l !== link && (l.getSourcePort() === sourcePort || l.getTargetPort() === sourcePort);\n              })) {\n                link.remove();\n              }\n            }\n          });\n\n          diagramEngine.clearRepaintEntities();\n          this.stopFiringAction(!this.state.wasMoved);\n        } else {\n          diagramEngine.clearRepaintEntities();\n          this.stopFiringAction();\n        }\n\n        this.state.document.removeEventListener(\"mousemove\", this.onMouseMove);\n        this.state.document.removeEventListener(\"mouseup\", this.onMouseUp);\n      };\n\n      DiagramWidget.prototype.drawSelectionBox = function () {\n        var dimensions = this.state.action.getBoxDimensions();\n        return React.createElement(\"div\", {\n          className: this.bem(\"__selector\"),\n          style: {\n            top: dimensions.top,\n            left: dimensions.left,\n            width: dimensions.width,\n            height: dimensions.height\n          }\n        });\n      };\n\n      DiagramWidget.prototype.render = function () {\n        var _this = this;\n\n        var diagramEngine = this.props.diagramEngine;\n        diagramEngine.setMaxNumberPointsPerLink(this.props.maxNumberPointsPerLink);\n        diagramEngine.setSmartRoutingStatus(this.props.smartRouting);\n        var diagramModel = diagramEngine.getDiagramModel();\n        return React.createElement(\"div\", __assign({}, this.getProps(), {\n          ref: function (ref) {\n            if (ref) {\n              _this.props.diagramEngine.setCanvas(ref);\n            }\n          },\n          onWheel: function (event) {\n            if (_this.props.allowCanvasZoom) {\n              event.preventDefault();\n              event.stopPropagation();\n              var oldZoomFactor = diagramModel.getZoomLevel() / 100;\n              var scrollDelta = _this.props.inverseZoom ? -event.deltaY : event.deltaY;\n\n              if (event.ctrlKey && scrollDelta % 1 !== 0) {\n                scrollDelta /= 3;\n              } else {\n                scrollDelta /= 60;\n              }\n\n              if (diagramModel.getZoomLevel() + scrollDelta > 10) {\n                diagramModel.setZoomLevel(diagramModel.getZoomLevel() + scrollDelta);\n              }\n\n              var zoomFactor = diagramModel.getZoomLevel() / 100;\n              var boundingRect = event.currentTarget.getBoundingClientRect();\n              var clientWidth = boundingRect.width;\n              var clientHeight = boundingRect.height;\n              var widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n              var heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n              var clientX = event.clientX - boundingRect.left;\n              var clientY = event.clientY - boundingRect.top;\n              var xFactor = (clientX - diagramModel.getOffsetX()) / oldZoomFactor / clientWidth;\n              var yFactor = (clientY - diagramModel.getOffsetY()) / oldZoomFactor / clientHeight;\n              diagramModel.setOffset(diagramModel.getOffsetX() - widthDiff * xFactor, diagramModel.getOffsetY() - heightDiff * yFactor);\n              diagramEngine.enableRepaintEntities([]);\n\n              _this.forceUpdate();\n            }\n          },\n          onMouseDown: function (event) {\n            _this.setState(__assign({}, _this.state, {\n              wasMoved: false\n            }));\n\n            diagramEngine.clearRepaintEntities();\n\n            var model = _this.getMouseElement(event);\n\n            if (model === null) {\n              if (event.shiftKey) {\n                var relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n\n                _this.startFiringAction(new SelectingAction_1.SelectingAction(relative.x, relative.y));\n              } else {\n                diagramModel.clearSelection();\n\n                _this.startFiringAction(new MoveCanvasAction_1.MoveCanvasAction(event.clientX, event.clientY, diagramModel));\n              }\n            } else if (model.model instanceof PortModel_1.PortModel) {\n              if (!_this.props.diagramEngine.isModelLocked(model.model)) {\n                var relative = diagramEngine.getRelativeMousePoint(event);\n                var sourcePort = model.model;\n                var link = sourcePort.createLinkModel();\n                link.setSourcePort(sourcePort);\n\n                if (link) {\n                  link.removeMiddlePoints();\n\n                  if (link.getSourcePort() !== sourcePort) {\n                    link.setSourcePort(sourcePort);\n                  }\n\n                  link.setTargetPort(null);\n                  link.getFirstPoint().updateLocation(relative);\n                  link.getLastPoint().updateLocation(relative);\n                  diagramModel.clearSelection();\n                  link.getLastPoint().setSelected(true);\n                  diagramModel.addLink(link);\n\n                  _this.startFiringAction(new MoveItemsAction_1.MoveItemsAction(event.clientX, event.clientY, diagramEngine));\n                }\n              } else {\n                diagramModel.clearSelection();\n              }\n            } else {\n              if (!event.shiftKey && !model.model.isSelected()) {\n                diagramModel.clearSelection();\n              }\n\n              model.model.setSelected(true);\n\n              _this.startFiringAction(new MoveItemsAction_1.MoveItemsAction(event.clientX, event.clientY, diagramEngine));\n            }\n\n            _this.state.document.addEventListener(\"mousemove\", _this.onMouseMove);\n\n            _this.state.document.addEventListener(\"mouseup\", _this.onMouseUp);\n          }\n        }), this.state.renderedNodes && React.createElement(LinkLayerWidget_1.LinkLayerWidget, {\n          diagramEngine: diagramEngine,\n          pointAdded: function (point, event) {\n            _this.state.document.addEventListener(\"mousemove\", _this.onMouseMove);\n\n            _this.state.document.addEventListener(\"mouseup\", _this.onMouseUp);\n\n            event.stopPropagation();\n            diagramModel.clearSelection(point);\n\n            _this.setState({\n              action: new MoveItemsAction_1.MoveItemsAction(event.clientX, event.clientY, diagramEngine)\n            });\n          }\n        }), React.createElement(NodeLayerWidget_1.NodeLayerWidget, {\n          diagramEngine: diagramEngine\n        }), this.state.action instanceof SelectingAction_1.SelectingAction && this.drawSelectionBox());\n      };\n\n      DiagramWidget.defaultProps = {\n        diagramEngine: null,\n        allowLooseLinks: true,\n        allowCanvasTranslation: true,\n        allowCanvasZoom: true,\n        inverseZoom: false,\n        maxNumberPointsPerLink: Infinity,\n        smartRouting: false,\n        deleteKeys: [46, 8]\n      };\n      return DiagramWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.DiagramWidget = DiagramWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var DefaultNodeModel_1 = __webpack_require__(38);\n\n    var React = __webpack_require__(1);\n\n    var DefaultNodeWidget_1 = __webpack_require__(35);\n\n    var AbstractNodeFactory_1 = __webpack_require__(32);\n\n    var DefaultNodeFactory = function (_super) {\n      __extends(DefaultNodeFactory, _super);\n\n      function DefaultNodeFactory() {\n        return _super.call(this, \"default\") || this;\n      }\n\n      DefaultNodeFactory.prototype.generateReactWidget = function (diagramEngine, node) {\n        return React.createElement(DefaultNodeWidget_1.DefaultNodeWidget, {\n          node: node,\n          diagramEngine: diagramEngine\n        });\n      };\n\n      DefaultNodeFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultNodeModel_1.DefaultNodeModel();\n      };\n\n      return DefaultNodeFactory;\n    }(AbstractNodeFactory_1.AbstractNodeFactory);\n\n    exports.DefaultNodeFactory = DefaultNodeFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var DefaultLinkWidget_1 = __webpack_require__(37);\n\n    var AbstractLinkFactory_1 = __webpack_require__(36);\n\n    var DefaultLinkModel_1 = __webpack_require__(19);\n\n    var DefaultLinkFactory = function (_super) {\n      __extends(DefaultLinkFactory, _super);\n\n      function DefaultLinkFactory() {\n        return _super.call(this, \"default\") || this;\n      }\n\n      DefaultLinkFactory.prototype.generateReactWidget = function (diagramEngine, link) {\n        return React.createElement(DefaultLinkWidget_1.DefaultLinkWidget, {\n          link: link,\n          diagramEngine: diagramEngine\n        });\n      };\n\n      DefaultLinkFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultLinkModel_1.DefaultLinkModel();\n      };\n\n      DefaultLinkFactory.prototype.generateLinkSegment = function (model, widget, selected, path) {\n        return React.createElement(\"path\", {\n          className: selected ? widget.bem(\"--path-selected\") : \"\",\n          strokeWidth: model.width,\n          stroke: model.color,\n          d: path\n        });\n      };\n\n      return DefaultLinkFactory;\n    }(AbstractLinkFactory_1.AbstractLinkFactory);\n\n    exports.DefaultLinkFactory = DefaultLinkFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseEntity_1 = __webpack_require__(13);\n\n    var DiagramModel_1 = __webpack_require__(44);\n\n    var _ = __webpack_require__(0);\n\n    var NodeModel_1 = __webpack_require__(9);\n\n    var PointModel_1 = __webpack_require__(5);\n\n    var main_1 = __webpack_require__(45);\n\n    var PathFinding_1 = __webpack_require__(16);\n\n    var DefaultPortFactory_1 = __webpack_require__(43);\n\n    var DefaultLabelFactory_1 = __webpack_require__(41);\n\n    var Toolkit_1 = __webpack_require__(7);\n\n    var DiagramEngine = function (_super) {\n      __extends(DiagramEngine, _super);\n\n      function DiagramEngine() {\n        var _this = _super.call(this) || this;\n\n        _this.canvasMatrix = [];\n        _this.routingMatrix = [];\n        _this.hAdjustmentFactor = 0;\n        _this.vAdjustmentFactor = 0;\n\n        _this.calculateMatrixDimensions = function () {\n          var allNodesCoords = _.values(_this.diagramModel.nodes).map(function (item) {\n            return {\n              x: item.x,\n              width: item.width,\n              y: item.y,\n              height: item.height\n            };\n          });\n\n          var allLinks = _.values(_this.diagramModel.links);\n\n          var allPortsCoords = _.flatMap(allLinks.map(function (link) {\n            return [link.sourcePort, link.targetPort];\n          })).filter(function (port) {\n            return port !== null;\n          }).map(function (item) {\n            return {\n              x: item.x,\n              width: item.width,\n              y: item.y,\n              height: item.height\n            };\n          });\n\n          var allPointsCoords = _.flatMap(allLinks.map(function (link) {\n            return link.points;\n          })).map(function (item) {\n            return {\n              x: item.x,\n              width: 0,\n              y: item.y,\n              height: 0\n            };\n          });\n\n          var canvas = _this.canvas;\n          var minX = Math.floor(Math.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) {\n            return item.x;\n          }).x, 0) / PathFinding_1.ROUTING_SCALING_FACTOR) * PathFinding_1.ROUTING_SCALING_FACTOR;\n\n          var maxXElement = _.maxBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) {\n            return item.x + item.width;\n          });\n\n          var maxX = Math.max(maxXElement.x + maxXElement.width, canvas.offsetWidth);\n          var minY = Math.floor(Math.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) {\n            return item.y;\n          }).y, 0) / PathFinding_1.ROUTING_SCALING_FACTOR) * PathFinding_1.ROUTING_SCALING_FACTOR;\n\n          var maxYElement = _.maxBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) {\n            return item.y + item.height;\n          });\n\n          var maxY = Math.max(maxYElement.y + maxYElement.height, canvas.offsetHeight);\n          return {\n            width: Math.ceil(Math.abs(minX) + maxX),\n            hAdjustmentFactor: Math.abs(minX) / PathFinding_1.ROUTING_SCALING_FACTOR + 1,\n            height: Math.ceil(Math.abs(minY) + maxY),\n            vAdjustmentFactor: Math.abs(minY) / PathFinding_1.ROUTING_SCALING_FACTOR + 1\n          };\n        };\n\n        _this.markNodes = function (matrix) {\n          _.values(_this.diagramModel.nodes).forEach(function (node) {\n            var startX = Math.floor(node.x / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var endX = Math.ceil((node.x + node.width) / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var startY = Math.floor(node.y / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var endY = Math.ceil((node.y + node.height) / PathFinding_1.ROUTING_SCALING_FACTOR);\n\n            for (var x = startX - 1; x <= endX + 1; x++) {\n              for (var y = startY - 1; y < endY + 1; y++) {\n                _this.markMatrixPoint(matrix, _this.translateRoutingX(x), _this.translateRoutingY(y));\n              }\n            }\n          });\n        };\n\n        _this.markPorts = function (matrix) {\n          var allElements = _.flatMap(_.values(_this.diagramModel.links).map(function (link) {\n            return [].concat(link.sourcePort, link.targetPort);\n          }));\n\n          allElements.filter(function (port) {\n            return port !== null;\n          }).forEach(function (port) {\n            var startX = Math.floor(port.x / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var endX = Math.ceil((port.x + port.width) / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var startY = Math.floor(port.y / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var endY = Math.ceil((port.y + port.height) / PathFinding_1.ROUTING_SCALING_FACTOR);\n\n            for (var x = startX - 1; x <= endX + 1; x++) {\n              for (var y = startY - 1; y < endY + 1; y++) {\n                _this.markMatrixPoint(matrix, _this.translateRoutingX(x), _this.translateRoutingY(y));\n              }\n            }\n          });\n        };\n\n        _this.markMatrixPoint = function (matrix, x, y) {\n          if (matrix[y] !== undefined && matrix[y][x] !== undefined) {\n            matrix[y][x] = 1;\n          }\n        };\n\n        _this.diagramModel = new DiagramModel_1.DiagramModel();\n        _this.nodeFactories = {};\n        _this.linkFactories = {};\n        _this.portFactories = {};\n        _this.labelFactories = {};\n        _this.canvas = null;\n        _this.paintableWidgets = null;\n        _this.linksThatHaveInitiallyRendered = {};\n\n        if (Toolkit_1.Toolkit.TESTING) {\n          Toolkit_1.Toolkit.TESTING_UID = 0;\n\n          if (window) {\n            window[\"diagram_instance\"] = _this;\n          }\n        }\n\n        return _this;\n      }\n\n      DiagramEngine.prototype.installDefaultFactories = function () {\n        this.registerNodeFactory(new main_1.DefaultNodeFactory());\n        this.registerLinkFactory(new main_1.DefaultLinkFactory());\n        this.registerPortFactory(new DefaultPortFactory_1.DefaultPortFactory());\n        this.registerLabelFactory(new DefaultLabelFactory_1.DefaultLabelFactory());\n      };\n\n      DiagramEngine.prototype.repaintCanvas = function () {\n        this.iterateListeners(function (listener) {\n          if (listener.repaintCanvas) {\n            listener.repaintCanvas();\n          }\n        });\n      };\n\n      DiagramEngine.prototype.clearRepaintEntities = function () {\n        this.paintableWidgets = null;\n      };\n\n      DiagramEngine.prototype.enableRepaintEntities = function (entities) {\n        var _this = this;\n\n        this.paintableWidgets = {};\n        entities.forEach(function (entity) {\n          if (entity instanceof NodeModel_1.NodeModel) {\n            _.forEach(entity.getPorts(), function (port) {\n              _.forEach(port.getLinks(), function (link) {\n                _this.paintableWidgets[link.getID()] = true;\n              });\n            });\n          }\n\n          if (entity instanceof PointModel_1.PointModel) {\n            _this.paintableWidgets[entity.getLink().getID()] = true;\n          }\n\n          _this.paintableWidgets[entity.getID()] = true;\n        });\n      };\n\n      DiagramEngine.prototype.isModelLocked = function (model) {\n        if (this.diagramModel.isLocked()) {\n          return true;\n        }\n\n        return model.isLocked();\n      };\n\n      DiagramEngine.prototype.recalculatePortsVisually = function () {\n        this.nodesRendered = false;\n        this.linksThatHaveInitiallyRendered = {};\n      };\n\n      DiagramEngine.prototype.canEntityRepaint = function (baseModel) {\n        if (this.paintableWidgets === null) {\n          return true;\n        }\n\n        return this.paintableWidgets[baseModel.getID()] !== undefined;\n      };\n\n      DiagramEngine.prototype.setCanvas = function (canvas) {\n        this.canvas = canvas;\n      };\n\n      DiagramEngine.prototype.setDiagramModel = function (model) {\n        this.diagramModel = model;\n        this.recalculatePortsVisually();\n      };\n\n      DiagramEngine.prototype.getDiagramModel = function () {\n        return this.diagramModel;\n      }; //!-------------- FACTORIES ------------\n\n\n      DiagramEngine.prototype.getNodeFactories = function () {\n        return this.nodeFactories;\n      };\n\n      DiagramEngine.prototype.getLinkFactories = function () {\n        return this.linkFactories;\n      };\n\n      DiagramEngine.prototype.getLabelFactories = function () {\n        return this.labelFactories;\n      };\n\n      DiagramEngine.prototype.registerLabelFactory = function (factory) {\n        this.labelFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n          if (listener.labelFactoriesUpdated) {\n            listener.labelFactoriesUpdated();\n          }\n        });\n      };\n\n      DiagramEngine.prototype.registerPortFactory = function (factory) {\n        this.portFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n          if (listener.portFactoriesUpdated) {\n            listener.portFactoriesUpdated();\n          }\n        });\n      };\n\n      DiagramEngine.prototype.registerNodeFactory = function (factory) {\n        this.nodeFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n          if (listener.nodeFactoriesUpdated) {\n            listener.nodeFactoriesUpdated();\n          }\n        });\n      };\n\n      DiagramEngine.prototype.registerLinkFactory = function (factory) {\n        this.linkFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n          if (listener.linkFactoriesUpdated) {\n            listener.linkFactoriesUpdated();\n          }\n        });\n      };\n\n      DiagramEngine.prototype.getPortFactory = function (type) {\n        if (this.portFactories[type]) {\n          return this.portFactories[type];\n        }\n\n        throw new Error(\"cannot find factory for port of type: [\" + type + \"]\");\n      };\n\n      DiagramEngine.prototype.getNodeFactory = function (type) {\n        if (this.nodeFactories[type]) {\n          return this.nodeFactories[type];\n        }\n\n        throw new Error(\"cannot find factory for node of type: [\" + type + \"]\");\n      };\n\n      DiagramEngine.prototype.getLinkFactory = function (type) {\n        if (this.linkFactories[type]) {\n          return this.linkFactories[type];\n        }\n\n        throw new Error(\"cannot find factory for link of type: [\" + type + \"]\");\n      };\n\n      DiagramEngine.prototype.getLabelFactory = function (type) {\n        if (this.labelFactories[type]) {\n          return this.labelFactories[type];\n        }\n\n        throw new Error(\"cannot find factory for label of type: [\" + type + \"]\");\n      };\n\n      DiagramEngine.prototype.getFactoryForNode = function (node) {\n        return this.getNodeFactory(node.getType());\n      };\n\n      DiagramEngine.prototype.getFactoryForLink = function (link) {\n        return this.getLinkFactory(link.getType());\n      };\n\n      DiagramEngine.prototype.getFactoryForLabel = function (label) {\n        return this.getLabelFactory(label.getType());\n      };\n\n      DiagramEngine.prototype.generateWidgetForLink = function (link) {\n        var linkFactory = this.getFactoryForLink(link);\n\n        if (!linkFactory) {\n          throw new Error(\"Cannot find link factory for link: \" + link.getType());\n        }\n\n        return linkFactory.generateReactWidget(this, link);\n      };\n\n      DiagramEngine.prototype.generateWidgetForNode = function (node) {\n        var nodeFactory = this.getFactoryForNode(node);\n\n        if (!nodeFactory) {\n          throw new Error(\"Cannot find widget factory for node: \" + node.getType());\n        }\n\n        return nodeFactory.generateReactWidget(this, node);\n      };\n\n      DiagramEngine.prototype.getRelativeMousePoint = function (event) {\n        var point = this.getRelativePoint(event.clientX, event.clientY);\n        return {\n          x: (point.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100),\n          y: (point.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100)\n        };\n      };\n\n      DiagramEngine.prototype.getRelativePoint = function (x, y) {\n        var canvasRect = this.canvas.getBoundingClientRect();\n        return {\n          x: x - canvasRect.left,\n          y: y - canvasRect.top\n        };\n      };\n\n      DiagramEngine.prototype.getNodeElement = function (node) {\n        var selector = this.canvas.querySelector('.node[data-nodeid=\"' + node.getID() + '\"]');\n\n        if (selector === null) {\n          throw new Error(\"Cannot find Node element with nodeID: [\" + node.getID() + \"]\");\n        }\n\n        return selector;\n      };\n\n      DiagramEngine.prototype.getNodePortElement = function (port) {\n        var selector = this.canvas.querySelector('.port[data-name=\"' + port.getName() + '\"][data-nodeid=\"' + port.getParent().getID() + '\"]');\n\n        if (selector === null) {\n          throw new Error(\"Cannot find Node Port element with nodeID: [\" + port.getParent().getID() + \"] and name: [\" + port.getName() + \"]\");\n        }\n\n        return selector;\n      };\n\n      DiagramEngine.prototype.getPortCenter = function (port) {\n        var sourceElement = this.getNodePortElement(port);\n        var sourceRect = sourceElement.getBoundingClientRect();\n        var rel = this.getRelativePoint(sourceRect.left, sourceRect.top);\n        return {\n          x: sourceElement.offsetWidth / 2 + (rel.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100),\n          y: sourceElement.offsetHeight / 2 + (rel.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100)\n        };\n      };\n\n      DiagramEngine.prototype.getPortCoords = function (port) {\n        var sourceElement = this.getNodePortElement(port);\n        var sourceRect = sourceElement.getBoundingClientRect();\n        var canvasRect = this.canvas.getBoundingClientRect();\n        return {\n          x: (sourceRect.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100) - canvasRect.left,\n          y: (sourceRect.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100) - canvasRect.top,\n          width: sourceRect.width,\n          height: sourceRect.height\n        };\n      };\n\n      DiagramEngine.prototype.getNodeDimensions = function (node) {\n        if (!this.canvas) {\n          return {\n            width: 0,\n            height: 0\n          };\n        }\n\n        var nodeElement = this.getNodeElement(node);\n        var nodeRect = nodeElement.getBoundingClientRect();\n        return {\n          width: nodeRect.width,\n          height: nodeRect.height\n        };\n      };\n\n      DiagramEngine.prototype.getMaxNumberPointsPerLink = function () {\n        return this.maxNumberPointsPerLink;\n      };\n\n      DiagramEngine.prototype.setMaxNumberPointsPerLink = function (max) {\n        this.maxNumberPointsPerLink = max;\n      };\n\n      DiagramEngine.prototype.isSmartRoutingEnabled = function () {\n        return !!this.smartRouting;\n      };\n\n      DiagramEngine.prototype.setSmartRoutingStatus = function (status) {\n        this.smartRouting = status;\n      };\n\n      DiagramEngine.prototype.getCanvasMatrix = function () {\n        if (this.canvasMatrix.length === 0) {\n          this.calculateCanvasMatrix();\n        }\n\n        return this.canvasMatrix;\n      };\n\n      DiagramEngine.prototype.calculateCanvasMatrix = function () {\n        var _a = this.calculateMatrixDimensions(),\n            canvasWidth = _a.width,\n            hAdjustmentFactor = _a.hAdjustmentFactor,\n            canvasHeight = _a.height,\n            vAdjustmentFactor = _a.vAdjustmentFactor;\n\n        this.hAdjustmentFactor = hAdjustmentFactor;\n        this.vAdjustmentFactor = vAdjustmentFactor;\n        var matrixWidth = Math.ceil(canvasWidth / PathFinding_1.ROUTING_SCALING_FACTOR);\n        var matrixHeight = Math.ceil(canvasHeight / PathFinding_1.ROUTING_SCALING_FACTOR);\n        this.canvasMatrix = _.range(0, matrixHeight).map(function () {\n          return new Array(matrixWidth).fill(0);\n        });\n      };\n\n      DiagramEngine.prototype.getRoutingMatrix = function () {\n        if (this.routingMatrix.length === 0) {\n          this.calculateRoutingMatrix();\n        }\n\n        return this.routingMatrix;\n      };\n\n      DiagramEngine.prototype.calculateRoutingMatrix = function () {\n        var matrix = _.cloneDeep(this.getCanvasMatrix());\n\n        this.markNodes(matrix);\n        this.markPorts(matrix);\n        this.routingMatrix = matrix;\n      };\n\n      DiagramEngine.prototype.translateRoutingX = function (x, reverse) {\n        if (reverse === void 0) {\n          reverse = false;\n        }\n\n        return x + this.hAdjustmentFactor * (reverse ? -1 : 1);\n      };\n\n      DiagramEngine.prototype.translateRoutingY = function (y, reverse) {\n        if (reverse === void 0) {\n          reverse = false;\n        }\n\n        return y + this.vAdjustmentFactor * (reverse ? -1 : 1);\n      };\n\n      DiagramEngine.prototype.zoomToFit = function () {\n        var xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n        var yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n        var zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n        this.diagramModel.setZoomLevel(this.diagramModel.getZoomLevel() * zoomFactor);\n        this.diagramModel.setOffset(0, 0);\n        this.repaintCanvas();\n      };\n\n      return DiagramEngine;\n    }(BaseEntity_1.BaseEntity);\n\n    exports.DiagramEngine = DiagramEngine;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var _slicedToArray = function () {\n      function sliceIterator(arr, i) {\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n\n        try {\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n\n            if (i && _arr.length === i) break;\n          }\n        } catch (err) {\n          _d = true;\n          _e = err;\n        } finally {\n          try {\n            if (!_n && _i[\"return\"]) _i[\"return\"]();\n          } finally {\n            if (_d) throw _e;\n          }\n        }\n\n        return _arr;\n      }\n\n      return function (arr, i) {\n        if (Array.isArray(arr)) {\n          return arr;\n        } else if (Symbol.iterator in Object(arr)) {\n          return sliceIterator(arr, i);\n        } else {\n          throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n        }\n      };\n    }();\n\n    var sq = function sq(x) {\n      return x * x;\n    };\n\n    var distPointToPoint = function distPointToPoint(_ref, _ref3) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var ax = _ref2[0];\n      var ay = _ref2[1];\n\n      var _ref32 = _slicedToArray(_ref3, 2);\n\n      var bx = _ref32[0];\n      var by = _ref32[1];\n      return Math.sqrt(sq(ax - bx) + sq(ay - by));\n    };\n\n    var distPointToParabol = function distPointToParabol(a, f) {\n      var p = distPointToPoint(a, f);\n      return p == 0 ? Infinity : sq(p) / (2 * Math.abs(a[1] - f[1]));\n    };\n\n    var circumCenter = function circumCenter(a, b, c) {\n      var d = (a[0] - c[0]) * (b[1] - c[1]) - (b[0] - c[0]) * (a[1] - c[1]);\n      if (d == 0) return [Infinity, Infinity];\n      var xc = (((a[0] - c[0]) * (a[0] + c[0]) + (a[1] - c[1]) * (a[1] + c[1])) / 2 * (b[1] - c[1]) - ((b[0] - c[0]) * (b[0] + c[0]) + (b[1] - c[1]) * (b[1] + c[1])) / 2 * (a[1] - c[1])) / d;\n      var yc = (((b[0] - c[0]) * (b[0] + c[0]) + (b[1] - c[1]) * (b[1] + c[1])) / 2 * (a[0] - c[0]) - ((a[0] - c[0]) * (a[0] + c[0]) + (a[1] - c[1]) * (a[1] + c[1])) / 2 * (b[0] - c[0])) / d;\n      return [xc, yc];\n    };\n\n    var parabolsCrossX = function parabolsCrossX(fa, fb, q) {\n      if (fa[1] === fb[1]) return [(fa[0] + fb[0]) / 2, (fa[0] + fb[0]) / 2];\n      var s1 = (fa[1] * fb[0] - fa[0] * fb[1] + fa[0] * q - fb[0] * q + Math.sqrt((fa[0] * fa[0] + fa[1] * fa[1] - 2 * fa[0] * fb[0] + fb[0] * fb[0] - 2 * fa[1] * fb[1] + fb[1] * fb[1]) * (fa[1] * fb[1] - fa[1] * q - fb[1] * q + q * q))) / (fa[1] - fb[1]);\n      var s2 = (fa[1] * fb[0] - fa[0] * fb[1] + fa[0] * q - fb[0] * q - Math.sqrt((fa[0] * fa[0] + fa[1] * fa[1] - 2 * fa[0] * fb[0] + fb[0] * fb[0] - 2 * fa[1] * fb[1] + fb[1] * fb[1]) * (fa[1] * fb[1] - fa[1] * q - fb[1] * q + q * q))) / (fa[1] - fb[1]);\n      return s1 < s2 ? [s1, s2] : [s2, s1];\n    };\n\n    var doHalflinesCross = function doHalflinesCross(sa, sb) {\n      var approx = arguments.length <= 2 || arguments[2] === undefined ? 1e-10 : arguments[2];\n      var dx = sb.ps[0] - sa.ps[0];\n      var dy = sb.ps[1] - sa.ps[1];\n      if (sa.m == Infinity) return sa.hp * (sb.m * dx - dy) <= approx && sb.vec[0] * dx <= approx;\n      if (sb.m == Infinity) return sb.hp * (sa.m * dx - dy) >= -approx && sa.vec[0] * dx >= -approx;\n      var det = sb.vec[0] * sa.vec[1] - sb.vec[1] * sa.vec[0];\n      if (det === 0) return false;\n      var u = (dy * sb.vec[0] - dx * sb.vec[1]) / det;\n      var v = (dy * sa.vec[0] - dx * sa.vec[1]) / det;\n      return u >= -approx && v >= approx || u >= approx && v >= -approx;\n    };\n\n    var matrixTransform = function matrixTransform(points, matrix) {\n      return points.map(function (point) {\n        return {\n          x: point.x * matrix[0] + point.y * matrix[2] + matrix[4],\n          y: point.x * matrix[1] + point.y * matrix[3] + matrix[5]\n        };\n      });\n    };\n\n    var transformEllipse = function transformEllipse(rx, ry, ax, m) {\n      var torad = Math.PI / 180;\n      var epsilon = 1e-10;\n      var c = Math.cos(ax * torad),\n          s = Math.sin(ax * torad);\n      var ma = [rx * (m[0] * c + m[2] * s), rx * (m[1] * c + m[3] * s), ry * (-m[0] * s + m[2] * c), ry * (-m[1] * s + m[3] * c)];\n      var J = ma[0] * ma[0] + ma[2] * ma[2],\n          K = ma[1] * ma[1] + ma[3] * ma[3];\n      var D = ((ma[0] - ma[3]) * (ma[0] - ma[3]) + (ma[2] + ma[1]) * (ma[2] + ma[1])) * ((ma[0] + ma[3]) * (ma[0] + ma[3]) + (ma[2] - ma[1]) * (ma[2] - ma[1]));\n      var JK = (J + K) / 2;\n\n      if (D < epsilon * JK) {\n        return {\n          rx: Math.sqrt(JK),\n          ry: Math.sqrt(JK),\n          ax: 0,\n          isDegenerate: false\n        };\n      }\n\n      var L = ma[0] * ma[1] + ma[2] * ma[3];\n      D = Math.sqrt(D);\n      var l1 = JK + D / 2,\n          l2 = JK - D / 2;\n      var newAx = undefined,\n          newRx = undefined,\n          newRy = undefined;\n      newAx = Math.abs(L) < epsilon && Math.abs(l1 - K) < epsilon ? 90 : Math.atan(Math.abs(L) > Math.abs(l1 - K) ? (l1 - J) / L : L / (l1 - K)) * 180 / Math.PI;\n\n      if (newAx >= 0) {\n        newRx = Math.sqrt(l1);\n        newRy = Math.sqrt(l2);\n      } else {\n        newAx += 90;\n        newRx = Math.sqrt(l2);\n        newRy = Math.sqrt(l1);\n      }\n\n      return {\n        rx: newRx,\n        ry: newRy,\n        ax: newAx,\n        isDegenerate: newRx < epsilon * newRy || newRy < epsilon * newRx\n      };\n    };\n\n    exports[\"default\"] = {\n      distPointToPoint: distPointToPoint,\n      distPointToParabol: distPointToParabol,\n      circumCenter: circumCenter,\n      parabolsCrossX: parabolsCrossX,\n      doHalflinesCross: doHalflinesCross,\n      matrixTransform: matrixTransform,\n      transformEllipse: transformEllipse\n    };\n    module.exports = exports[\"default\"];\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var _slicedToArray = function () {\n      function sliceIterator(arr, i) {\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n\n        try {\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n\n            if (i && _arr.length === i) break;\n          }\n        } catch (err) {\n          _d = true;\n          _e = err;\n        } finally {\n          try {\n            if (!_n && _i[\"return\"]) _i[\"return\"]();\n          } finally {\n            if (_d) throw _e;\n          }\n        }\n\n        return _arr;\n      }\n\n      return function (arr, i) {\n        if (Array.isArray(arr)) {\n          return arr;\n        } else if (Symbol.iterator in Object(arr)) {\n          return sliceIterator(arr, i);\n        } else {\n          throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n        }\n      };\n    }();\n\n    var _geom = __webpack_require__(50);\n\n    var Path = function Path(init) {\n      var _instructions = init || [];\n\n      var push = function push(arr, el) {\n        var copy = arr.slice(0, arr.length);\n        copy.push(el);\n        return copy;\n      };\n\n      var areEqualPoints = function areEqualPoints(_ref, _ref3) {\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        var a1 = _ref2[0];\n        var b1 = _ref2[1];\n\n        var _ref32 = _slicedToArray(_ref3, 2);\n\n        var a2 = _ref32[0];\n        var b2 = _ref32[1];\n        return a1 === a2 && b1 === b2;\n      };\n\n      var trimZeros = function trimZeros(string, char) {\n        var l = string.length;\n\n        while (string.charAt(l - 1) === \"0\") {\n          l = l - 1;\n        }\n\n        if (string.charAt(l - 1) === \".\") {\n          l = l - 1;\n        }\n\n        return string.substr(0, l);\n      };\n\n      var round = function round(number, digits) {\n        var str = number.toFixed(digits);\n        return trimZeros(str);\n      };\n\n      var printInstrunction = function printInstrunction(_ref4) {\n        var command = _ref4.command;\n        var params = _ref4.params;\n        var numbers = params.map(function (param) {\n          return round(param, 6);\n        });\n        return command + \" \" + numbers.join(\" \");\n      };\n\n      var point = function point(_ref5, prev) {\n        var command = _ref5.command;\n        var params = _ref5.params;\n\n        switch (command) {\n          case \"M\":\n            return [params[0], params[1]];\n\n          case \"L\":\n            return [params[0], params[1]];\n\n          case \"H\":\n            return [params[0], prev[1]];\n\n          case \"V\":\n            return [prev[0], params[0]];\n\n          case \"Z\":\n            return null;\n\n          case \"C\":\n            return [params[4], params[5]];\n\n          case \"S\":\n            return [params[2], params[3]];\n\n          case \"Q\":\n            return [params[2], params[3]];\n\n          case \"T\":\n            return [params[0], params[1]];\n\n          case \"A\":\n            return [params[5], params[6]];\n        }\n      };\n\n      var transformParams = function transformParams(instruction, matrix, prev) {\n        var p = instruction.params;\n        var transformer = {\n          V: function V(instruction, matrix, prev) {\n            var pts = [{\n              x: prev[0],\n              y: p[1]\n            }];\n            var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n            if (newPts[0].x === (0, _geom.matrixTransform)([{\n              x: prev[0],\n              y: prev[1]\n            }])[0].x) {\n              return {\n                command: \"V\",\n                params: [newPts[0].y]\n              };\n            } else {\n              return {\n                command: \"L\",\n                params: [newPts[0].x, newPts[0].y]\n              };\n            }\n          },\n          H: function H(instruction, matrix, prev) {\n            var pts = [{\n              x: p[0],\n              y: prev[1]\n            }];\n            var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n            if (newPts[0].y === (0, _geom.matrixTransform)([{\n              x: prev[0],\n              y: prev[1]\n            }])[0].y) {\n              return {\n                command: \"H\",\n                params: [newPts[0].x]\n              };\n            } else {\n              return {\n                command: \"L\",\n                params: [newPts[0].x, newPts[0].y]\n              };\n            }\n          },\n          A: function A(instruction, matrix, prev) {\n            var r = (0, _geom.transformEllipse)(p[0], p[1], p[2], matrix);\n            var sweepFlag = p[4];\n\n            if (matrix[0] * matrix[3] - matrix[1] * matrix[2] < 0) {\n              sweepFlag = sweepFlag ? \"0\" : \"1\";\n            }\n\n            var pts = [{\n              x: p[5],\n              y: p[6]\n            }];\n            var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n            if (r.isDegenerate) {\n              return {\n                command: \"L\",\n                params: [newPts[0].x, newPts[0].y]\n              };\n            } else {\n              return {\n                command: \"A\",\n                params: [r.rx, r.ry, r.ax, p[3], sweepFlag, newPts[0].x, newPts[0].y]\n              };\n            }\n          },\n          C: function C(instruction, matrix, prev) {\n            var pts = [{\n              x: p[0],\n              y: p[1]\n            }, {\n              x: p[2],\n              y: p[3]\n            }, {\n              x: p[4],\n              y: p[5]\n            }];\n            var newPts = (0, _geom.matrixTransform)(pts, matrix);\n            return {\n              command: \"C\",\n              params: [newPts[0].x, newPts[0].y, newPts[1].x, newPts[1].y, newPts[2].x, newPts[2].y]\n            };\n          },\n          Z: function Z(instruction, matrix, prev) {\n            return {\n              command: \"Z\",\n              params: []\n            };\n          },\n          default: function _default(instruction, matrix, prev) {\n            var pts = [{\n              x: p[0],\n              y: p[1]\n            }];\n            var newPts = (0, _geom.matrixTransform)(pts, matrix);\n            var newParams = instruction.params.slice(0, instruction.params.length);\n            newParams.splice(0, 2, newPts[0].x, newPts[0].y);\n            return {\n              command: instruction.command,\n              params: newParams\n            };\n          }\n        };\n\n        if (transformer[instruction.command]) {\n          return transformer[instruction.command](instruction, matrix, prev);\n        } else {\n          return transformer[\"default\"](instruction, matrix, prev);\n        }\n      };\n\n      var verbosify = function verbosify(keys, f) {\n        return function (a) {\n          var args = typeof a === \"object\" ? keys.map(function (k) {\n            return a[k];\n          }) : arguments;\n          return f.apply(null, args);\n        };\n      };\n\n      var plus = function plus(instruction) {\n        return Path(push(_instructions, instruction));\n      };\n\n      return {\n        moveto: verbosify([\"x\", \"y\"], function (x, y) {\n          return plus({\n            command: \"M\",\n            params: [x, y]\n          });\n        }),\n        lineto: verbosify([\"x\", \"y\"], function (x, y) {\n          return plus({\n            command: \"L\",\n            params: [x, y]\n          });\n        }),\n        hlineto: verbosify([\"x\"], function (x) {\n          return plus({\n            command: \"H\",\n            params: [x]\n          });\n        }),\n        vlineto: verbosify([\"y\"], function (y) {\n          return plus({\n            command: \"V\",\n            params: [y]\n          });\n        }),\n        closepath: function closepath() {\n          return plus({\n            command: \"Z\",\n            params: []\n          });\n        },\n        curveto: verbosify([\"x1\", \"y1\", \"x2\", \"y2\", \"x\", \"y\"], function (x1, y1, x2, y2, x, y) {\n          return plus({\n            command: \"C\",\n            params: [x1, y1, x2, y2, x, y]\n          });\n        }),\n        smoothcurveto: verbosify([\"x2\", \"y2\", \"x\", \"y\"], function (x2, y2, x, y) {\n          return plus({\n            command: \"S\",\n            params: [x2, y2, x, y]\n          });\n        }),\n        qcurveto: verbosify([\"x1\", \"y1\", \"x\", \"y\"], function (x1, y1, x, y) {\n          return plus({\n            command: \"Q\",\n            params: [x1, y1, x, y]\n          });\n        }),\n        smoothqcurveto: verbosify([\"x\", \"y\"], function (x, y) {\n          return plus({\n            command: \"T\",\n            params: [x, y]\n          });\n        }),\n        arc: verbosify([\"rx\", \"ry\", \"xrot\", \"largeArcFlag\", \"sweepFlag\", \"x\", \"y\"], function (rx, ry, xrot, largeArcFlag, sweepFlag, x, y) {\n          return plus({\n            command: \"A\",\n            params: [rx, ry, xrot, largeArcFlag, sweepFlag, x, y]\n          });\n        }),\n        translate: verbosify([\"dx\", \"dy\"], function () {\n          var dx = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n          var dy = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n          if (dx !== 0 || dx !== 0) {\n            var _ret = function () {\n              var prev = [0, 0];\n              var matrix = [1, 0, 0, 1, dx, dy];\n\n              var newInstructions = _instructions.map(function (instruction) {\n                var p = transformParams(instruction, matrix, prev);\n                prev = point(instruction, prev);\n                return p;\n              });\n\n              return {\n                v: Path(newInstructions)\n              };\n            }();\n\n            if (typeof _ret === \"object\") return _ret.v;\n          } else {\n            return Path(_instructions);\n          }\n        }),\n        rotate: verbosify([\"angle\", \"rx\", \"ry\"], function (angle) {\n          var rx = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n          var ry = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n          if (angle !== 0) {\n            var _ret2 = function () {\n              var prev = undefined;\n              var matrix = undefined;\n              var newInstructions = _instructions;\n\n              if (rx !== 0 && ry !== 0) {\n                prev = [0, 0];\n                matrix = [1, 0, 0, 1, -rx, -ry];\n                newInstructions = newInstructions.map(function (instruction) {\n                  var p = transformParams(instruction, matrix, prev);\n                  prev = point(instruction, prev);\n                  return p;\n                });\n              }\n\n              var rad = angle * Math.PI / 180;\n              var cos = Math.cos(rad);\n              var sin = Math.sin(rad);\n              prev = [0, 0];\n              matrix = [cos, sin, -sin, cos, 0, 0];\n              newInstructions = newInstructions.map(function (instruction) {\n                var p = transformParams(instruction, matrix, prev);\n                prev = point(instruction, prev);\n                return p;\n              });\n\n              if (rx !== 0 && ry !== 0) {\n                prev = [0, 0];\n                matrix = [1, 0, 0, 1, rx, ry];\n                newInstructions = newInstructions.map(function (instruction) {\n                  var p = transformParams(instruction, matrix, prev);\n                  prev = point(instruction, prev);\n                  return p;\n                });\n              }\n\n              return {\n                v: Path(newInstructions)\n              };\n            }();\n\n            if (typeof _ret2 === \"object\") return _ret2.v;\n          } else {\n            return Path(_instructions);\n          }\n        }),\n        scale: verbosify([\"sx\", \"sy\"], function () {\n          var sx = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n          var sy = arguments.length <= 1 || arguments[1] === undefined ? sx : arguments[1];\n          return function () {\n            if (sx !== 1 || sy !== 1) {\n              var _ret3 = function () {\n                var prev = [0, 0];\n                var matrix = [sx, 0, 0, sy, 0, 0];\n\n                var newInstructions = _instructions.map(function (instruction) {\n                  var p = transformParams(instruction, matrix, prev);\n                  prev = point(instruction, prev);\n                  return p;\n                });\n\n                return {\n                  v: Path(newInstructions)\n                };\n              }();\n\n              if (typeof _ret3 === \"object\") return _ret3.v;\n            } else {\n              return Path(_instructions);\n            }\n          }();\n        }),\n        shearX: verbosify([\"angle\"], function () {\n          var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n          if (angle !== 0) {\n            var _ret4 = function () {\n              var prev = [0, 0];\n              var matrix = [1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0];\n\n              var newInstructions = _instructions.map(function (instruction) {\n                var p = transformParams(instruction, matrix, prev);\n                prev = point(instruction, prev);\n                return p;\n              });\n\n              return {\n                v: Path(newInstructions)\n              };\n            }();\n\n            if (typeof _ret4 === \"object\") return _ret4.v;\n          } else {\n            return Path(_instructions);\n          }\n        }),\n        shearY: verbosify([\"angle\"], function () {\n          var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n          if (angle !== 0) {\n            var _ret5 = function () {\n              var prev = [0, 0];\n              var matrix = [1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0];\n\n              var newInstructions = _instructions.map(function (instruction) {\n                var p = transformParams(instruction, matrix, prev);\n                prev = point(instruction, prev);\n                return p;\n              });\n\n              return {\n                v: Path(newInstructions)\n              };\n            }();\n\n            if (typeof _ret5 === \"object\") return _ret5.v;\n          } else {\n            return Path(_instructions);\n          }\n        }),\n        print: function print() {\n          return _instructions.map(printInstrunction).join(\" \");\n        },\n        toString: function toString() {\n          return undefined.print();\n        },\n        points: function points() {\n          var ps = [];\n          var prev = [0, 0];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _instructions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var instruction = _step.value;\n              var p = point(instruction, prev);\n              prev = p;\n\n              if (p) {\n                ps.push(p);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n                _iterator[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          return ps;\n        },\n        instructions: function instructions() {\n          return _instructions.slice(0, _instructions.length);\n        },\n        connect: function connect(path) {\n          var ps = this.points();\n          var last = ps[ps.length - 1];\n          var first = path.points()[0];\n          var newInstructions = undefined;\n\n          if (_instructions[_instructions.length - 1].command !== \"Z\") {\n            newInstructions = path.instructions().slice(1);\n\n            if (!areEqualPoints(last, first)) {\n              newInstructions.unshift({\n                command: \"L\",\n                params: first\n              });\n            }\n          } else {\n            newInstructions = path.instructions();\n          }\n\n          return Path(this.instructions().concat(newInstructions));\n        }\n      };\n    };\n\n    exports[\"default\"] = function () {\n      return Path();\n    };\n\n    module.exports = exports[\"default\"];\n  }, function (module, exports, __webpack_require__) {\n    var JumpPointFinderBase = __webpack_require__(14);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function JPFMoveDiagonallyIfAtMostOneObstacle(opt) {\n      JumpPointFinderBase.call(this, opt);\n    }\n\n    JPFMoveDiagonallyIfAtMostOneObstacle.prototype = new JumpPointFinderBase();\n    JPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor = JPFMoveDiagonallyIfAtMostOneObstacle;\n\n    JPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump = function (x, y, px, py) {\n      var grid = this.grid,\n          dx = x - px,\n          dy = y - py;\n\n      if (!grid.isWalkableAt(x, y)) {\n        return null;\n      }\n\n      if (this.trackJumpRecursion === true) {\n        grid.getNodeAt(x, y).tested = true;\n      }\n\n      if (grid.getNodeAt(x, y) === this.endNode) {\n        return [x, y];\n      }\n\n      if (dx !== 0 && dy !== 0) {\n        if (grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y) || grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy)) {\n          return [x, y];\n        }\n\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\n          return [x, y];\n        }\n      } else {\n        if (dx !== 0) {\n          if (grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1) || grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1)) {\n            return [x, y];\n          }\n        } else {\n          if (grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y) || grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y)) {\n            return [x, y];\n          }\n        }\n      }\n\n      if (grid.isWalkableAt(x + dx, y) || grid.isWalkableAt(x, y + dy)) {\n        return this._jump(x + dx, y + dy, x, y);\n      } else {\n        return null;\n      }\n    };\n\n    JPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors = function (node) {\n      var parent = node.parent,\n          x = node.x,\n          y = node.y,\n          grid = this.grid,\n          px,\n          py,\n          nx,\n          ny,\n          dx,\n          dy,\n          neighbors = [],\n          neighborNodes,\n          neighborNode,\n          i,\n          l;\n\n      if (parent) {\n        px = parent.x;\n        py = parent.y;\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\n\n        if (dx !== 0 && dy !== 0) {\n          if (grid.isWalkableAt(x, y + dy)) {\n            neighbors.push([x, y + dy]);\n          }\n\n          if (grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y]);\n          }\n\n          if (grid.isWalkableAt(x, y + dy) || grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y + dy]);\n          }\n\n          if (!grid.isWalkableAt(x - dx, y) && grid.isWalkableAt(x, y + dy)) {\n            neighbors.push([x - dx, y + dy]);\n          }\n\n          if (!grid.isWalkableAt(x, y - dy) && grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y - dy]);\n          }\n        } else {\n          if (dx === 0) {\n            if (grid.isWalkableAt(x, y + dy)) {\n              neighbors.push([x, y + dy]);\n\n              if (!grid.isWalkableAt(x + 1, y)) {\n                neighbors.push([x + 1, y + dy]);\n              }\n\n              if (!grid.isWalkableAt(x - 1, y)) {\n                neighbors.push([x - 1, y + dy]);\n              }\n            }\n          } else {\n            if (grid.isWalkableAt(x + dx, y)) {\n              neighbors.push([x + dx, y]);\n\n              if (!grid.isWalkableAt(x, y + 1)) {\n                neighbors.push([x + dx, y + 1]);\n              }\n\n              if (!grid.isWalkableAt(x, y - 1)) {\n                neighbors.push([x + dx, y - 1]);\n              }\n            }\n          }\n        }\n      } else {\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.IfAtMostOneObstacle);\n\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\n          neighborNode = neighborNodes[i];\n          neighbors.push([neighborNode.x, neighborNode.y]);\n        }\n      }\n\n      return neighbors;\n    };\n\n    module.exports = JPFMoveDiagonallyIfAtMostOneObstacle;\n  }, function (module, exports, __webpack_require__) {\n    var JumpPointFinderBase = __webpack_require__(14);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function JPFMoveDiagonallyIfNoObstacles(opt) {\n      JumpPointFinderBase.call(this, opt);\n    }\n\n    JPFMoveDiagonallyIfNoObstacles.prototype = new JumpPointFinderBase();\n    JPFMoveDiagonallyIfNoObstacles.prototype.constructor = JPFMoveDiagonallyIfNoObstacles;\n\n    JPFMoveDiagonallyIfNoObstacles.prototype._jump = function (x, y, px, py) {\n      var grid = this.grid,\n          dx = x - px,\n          dy = y - py;\n\n      if (!grid.isWalkableAt(x, y)) {\n        return null;\n      }\n\n      if (this.trackJumpRecursion === true) {\n        grid.getNodeAt(x, y).tested = true;\n      }\n\n      if (grid.getNodeAt(x, y) === this.endNode) {\n        return [x, y];\n      }\n\n      if (dx !== 0 && dy !== 0) {\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\n          return [x, y];\n        }\n      } else {\n        if (dx !== 0) {\n          if (grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1) || grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1)) {\n            return [x, y];\n          }\n        } else if (dy !== 0) {\n          if (grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy) || grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy)) {\n            return [x, y];\n          }\n        }\n      }\n\n      if (grid.isWalkableAt(x + dx, y) && grid.isWalkableAt(x, y + dy)) {\n        return this._jump(x + dx, y + dy, x, y);\n      } else {\n        return null;\n      }\n    };\n\n    JPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors = function (node) {\n      var parent = node.parent,\n          x = node.x,\n          y = node.y,\n          grid = this.grid,\n          px,\n          py,\n          nx,\n          ny,\n          dx,\n          dy,\n          neighbors = [],\n          neighborNodes,\n          neighborNode,\n          i,\n          l;\n\n      if (parent) {\n        px = parent.x;\n        py = parent.y;\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\n\n        if (dx !== 0 && dy !== 0) {\n          if (grid.isWalkableAt(x, y + dy)) {\n            neighbors.push([x, y + dy]);\n          }\n\n          if (grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y]);\n          }\n\n          if (grid.isWalkableAt(x, y + dy) && grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y + dy]);\n          }\n        } else {\n          var isNextWalkable;\n\n          if (dx !== 0) {\n            isNextWalkable = grid.isWalkableAt(x + dx, y);\n            var isTopWalkable = grid.isWalkableAt(x, y + 1);\n            var isBottomWalkable = grid.isWalkableAt(x, y - 1);\n\n            if (isNextWalkable) {\n              neighbors.push([x + dx, y]);\n\n              if (isTopWalkable) {\n                neighbors.push([x + dx, y + 1]);\n              }\n\n              if (isBottomWalkable) {\n                neighbors.push([x + dx, y - 1]);\n              }\n            }\n\n            if (isTopWalkable) {\n              neighbors.push([x, y + 1]);\n            }\n\n            if (isBottomWalkable) {\n              neighbors.push([x, y - 1]);\n            }\n          } else if (dy !== 0) {\n            isNextWalkable = grid.isWalkableAt(x, y + dy);\n            var isRightWalkable = grid.isWalkableAt(x + 1, y);\n            var isLeftWalkable = grid.isWalkableAt(x - 1, y);\n\n            if (isNextWalkable) {\n              neighbors.push([x, y + dy]);\n\n              if (isRightWalkable) {\n                neighbors.push([x + 1, y + dy]);\n              }\n\n              if (isLeftWalkable) {\n                neighbors.push([x - 1, y + dy]);\n              }\n            }\n\n            if (isRightWalkable) {\n              neighbors.push([x + 1, y]);\n            }\n\n            if (isLeftWalkable) {\n              neighbors.push([x - 1, y]);\n            }\n          }\n        }\n      } else {\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.OnlyWhenNoObstacles);\n\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\n          neighborNode = neighborNodes[i];\n          neighbors.push([neighborNode.x, neighborNode.y]);\n        }\n      }\n\n      return neighbors;\n    };\n\n    module.exports = JPFMoveDiagonallyIfNoObstacles;\n  }, function (module, exports, __webpack_require__) {\n    var JumpPointFinderBase = __webpack_require__(14);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function JPFAlwaysMoveDiagonally(opt) {\n      JumpPointFinderBase.call(this, opt);\n    }\n\n    JPFAlwaysMoveDiagonally.prototype = new JumpPointFinderBase();\n    JPFAlwaysMoveDiagonally.prototype.constructor = JPFAlwaysMoveDiagonally;\n\n    JPFAlwaysMoveDiagonally.prototype._jump = function (x, y, px, py) {\n      var grid = this.grid,\n          dx = x - px,\n          dy = y - py;\n\n      if (!grid.isWalkableAt(x, y)) {\n        return null;\n      }\n\n      if (this.trackJumpRecursion === true) {\n        grid.getNodeAt(x, y).tested = true;\n      }\n\n      if (grid.getNodeAt(x, y) === this.endNode) {\n        return [x, y];\n      }\n\n      if (dx !== 0 && dy !== 0) {\n        if (grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y) || grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy)) {\n          return [x, y];\n        }\n\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\n          return [x, y];\n        }\n      } else {\n        if (dx !== 0) {\n          if (grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1) || grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1)) {\n            return [x, y];\n          }\n        } else {\n          if (grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y) || grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y)) {\n            return [x, y];\n          }\n        }\n      }\n\n      return this._jump(x + dx, y + dy, x, y);\n    };\n\n    JPFAlwaysMoveDiagonally.prototype._findNeighbors = function (node) {\n      var parent = node.parent,\n          x = node.x,\n          y = node.y,\n          grid = this.grid,\n          px,\n          py,\n          nx,\n          ny,\n          dx,\n          dy,\n          neighbors = [],\n          neighborNodes,\n          neighborNode,\n          i,\n          l;\n\n      if (parent) {\n        px = parent.x;\n        py = parent.y;\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\n\n        if (dx !== 0 && dy !== 0) {\n          if (grid.isWalkableAt(x, y + dy)) {\n            neighbors.push([x, y + dy]);\n          }\n\n          if (grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y]);\n          }\n\n          if (grid.isWalkableAt(x + dx, y + dy)) {\n            neighbors.push([x + dx, y + dy]);\n          }\n\n          if (!grid.isWalkableAt(x - dx, y)) {\n            neighbors.push([x - dx, y + dy]);\n          }\n\n          if (!grid.isWalkableAt(x, y - dy)) {\n            neighbors.push([x + dx, y - dy]);\n          }\n        } else {\n          if (dx === 0) {\n            if (grid.isWalkableAt(x, y + dy)) {\n              neighbors.push([x, y + dy]);\n            }\n\n            if (!grid.isWalkableAt(x + 1, y)) {\n              neighbors.push([x + 1, y + dy]);\n            }\n\n            if (!grid.isWalkableAt(x - 1, y)) {\n              neighbors.push([x - 1, y + dy]);\n            }\n          } else {\n            if (grid.isWalkableAt(x + dx, y)) {\n              neighbors.push([x + dx, y]);\n            }\n\n            if (!grid.isWalkableAt(x, y + 1)) {\n              neighbors.push([x + dx, y + 1]);\n            }\n\n            if (!grid.isWalkableAt(x, y - 1)) {\n              neighbors.push([x + dx, y - 1]);\n            }\n          }\n        }\n      } else {\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Always);\n\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\n          neighborNode = neighborNodes[i];\n          neighbors.push([neighborNode.x, neighborNode.y]);\n        }\n      }\n\n      return neighbors;\n    };\n\n    module.exports = JPFAlwaysMoveDiagonally;\n  }, function (module, exports, __webpack_require__) {\n    var JumpPointFinderBase = __webpack_require__(14);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function JPFNeverMoveDiagonally(opt) {\n      JumpPointFinderBase.call(this, opt);\n    }\n\n    JPFNeverMoveDiagonally.prototype = new JumpPointFinderBase();\n    JPFNeverMoveDiagonally.prototype.constructor = JPFNeverMoveDiagonally;\n\n    JPFNeverMoveDiagonally.prototype._jump = function (x, y, px, py) {\n      var grid = this.grid,\n          dx = x - px,\n          dy = y - py;\n\n      if (!grid.isWalkableAt(x, y)) {\n        return null;\n      }\n\n      if (this.trackJumpRecursion === true) {\n        grid.getNodeAt(x, y).tested = true;\n      }\n\n      if (grid.getNodeAt(x, y) === this.endNode) {\n        return [x, y];\n      }\n\n      if (dx !== 0) {\n        if (grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1) || grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1)) {\n          return [x, y];\n        }\n      } else if (dy !== 0) {\n        if (grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy) || grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy)) {\n          return [x, y];\n        }\n\n        if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\n          return [x, y];\n        }\n      } else {\n        throw new Error(\"Only horizontal and vertical movements are allowed\");\n      }\n\n      return this._jump(x + dx, y + dy, x, y);\n    };\n\n    JPFNeverMoveDiagonally.prototype._findNeighbors = function (node) {\n      var parent = node.parent,\n          x = node.x,\n          y = node.y,\n          grid = this.grid,\n          px,\n          py,\n          nx,\n          ny,\n          dx,\n          dy,\n          neighbors = [],\n          neighborNodes,\n          neighborNode,\n          i,\n          l;\n\n      if (parent) {\n        px = parent.x;\n        py = parent.y;\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\n\n        if (dx !== 0) {\n          if (grid.isWalkableAt(x, y - 1)) {\n            neighbors.push([x, y - 1]);\n          }\n\n          if (grid.isWalkableAt(x, y + 1)) {\n            neighbors.push([x, y + 1]);\n          }\n\n          if (grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y]);\n          }\n        } else if (dy !== 0) {\n          if (grid.isWalkableAt(x - 1, y)) {\n            neighbors.push([x - 1, y]);\n          }\n\n          if (grid.isWalkableAt(x + 1, y)) {\n            neighbors.push([x + 1, y]);\n          }\n\n          if (grid.isWalkableAt(x, y + dy)) {\n            neighbors.push([x, y + dy]);\n          }\n        }\n      } else {\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Never);\n\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\n          neighborNode = neighborNodes[i];\n          neighbors.push([neighborNode.x, neighborNode.y]);\n        }\n      }\n\n      return neighbors;\n    };\n\n    module.exports = JPFNeverMoveDiagonally;\n  }, function (module, exports, __webpack_require__) {\n    var DiagonalMovement = __webpack_require__(2);\n\n    var JPFNeverMoveDiagonally = __webpack_require__(55);\n\n    var JPFAlwaysMoveDiagonally = __webpack_require__(54);\n\n    var JPFMoveDiagonallyIfNoObstacles = __webpack_require__(53);\n\n    var JPFMoveDiagonallyIfAtMostOneObstacle = __webpack_require__(52);\n\n    function JumpPointFinder(opt) {\n      opt = opt || {};\n\n      if (opt.diagonalMovement === DiagonalMovement.Never) {\n        return new JPFNeverMoveDiagonally(opt);\n      } else if (opt.diagonalMovement === DiagonalMovement.Always) {\n        return new JPFAlwaysMoveDiagonally(opt);\n      } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\n        return new JPFMoveDiagonallyIfNoObstacles(opt);\n      } else {\n        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);\n      }\n    }\n\n    module.exports = JumpPointFinder;\n  }, function (module, exports, __webpack_require__) {\n    var Util = __webpack_require__(4);\n\n    var Heuristic = __webpack_require__(10);\n\n    var Node = __webpack_require__(24);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function IDAStarFinder(opt) {\n      opt = opt || {};\n      this.allowDiagonal = opt.allowDiagonal;\n      this.dontCrossCorners = opt.dontCrossCorners;\n      this.diagonalMovement = opt.diagonalMovement;\n      this.heuristic = opt.heuristic || Heuristic.manhattan;\n      this.weight = opt.weight || 1;\n      this.trackRecursion = opt.trackRecursion || false;\n      this.timeLimit = opt.timeLimit || Infinity;\n\n      if (!this.diagonalMovement) {\n        if (!this.allowDiagonal) {\n          this.diagonalMovement = DiagonalMovement.Never;\n        } else {\n          if (this.dontCrossCorners) {\n            this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\n          } else {\n            this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\n          }\n        }\n      }\n\n      if (this.diagonalMovement === DiagonalMovement.Never) {\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\n      } else {\n        this.heuristic = opt.heuristic || Heuristic.octile;\n      }\n    }\n\n    IDAStarFinder.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var nodesVisited = 0;\n      var startTime = new Date().getTime();\n\n      var h = function (a, b) {\n        return this.heuristic(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\n      }.bind(this);\n\n      var cost = function (a, b) {\n        return a.x === b.x || a.y === b.y ? 1 : Math.SQRT2;\n      };\n\n      var search = function (node, g, cutoff, route, depth) {\n        nodesVisited++;\n\n        if (this.timeLimit > 0 && new Date().getTime() - startTime > this.timeLimit * 1e3) {\n          return Infinity;\n        }\n\n        var f = g + h(node, end) * this.weight;\n\n        if (f > cutoff) {\n          return f;\n        }\n\n        if (node == end) {\n          route[depth] = [node.x, node.y];\n          return node;\n        }\n\n        var min, t, k, neighbour;\n        var neighbours = grid.getNeighbors(node, this.diagonalMovement);\n\n        for (k = 0, min = Infinity; neighbour = neighbours[k]; ++k) {\n          if (this.trackRecursion) {\n            neighbour.retainCount = neighbour.retainCount + 1 || 1;\n\n            if (neighbour.tested !== true) {\n              neighbour.tested = true;\n            }\n          }\n\n          t = search(neighbour, g + cost(node, neighbour), cutoff, route, depth + 1);\n\n          if (t instanceof Node) {\n            route[depth] = [node.x, node.y];\n            return t;\n          }\n\n          if (this.trackRecursion && --neighbour.retainCount === 0) {\n            neighbour.tested = false;\n          }\n\n          if (t < min) {\n            min = t;\n          }\n        }\n\n        return min;\n      }.bind(this);\n\n      var start = grid.getNodeAt(startX, startY);\n      var end = grid.getNodeAt(endX, endY);\n      var cutOff = h(start, end);\n      var j, route, t;\n\n      for (j = 0; true; ++j) {\n        route = [];\n        t = search(start, 0, cutOff, route, 0);\n\n        if (t === Infinity) {\n          return [];\n        }\n\n        if (t instanceof Node) {\n          return route;\n        }\n\n        cutOff = t;\n      }\n\n      return [];\n    };\n\n    module.exports = IDAStarFinder;\n  }, function (module, exports, __webpack_require__) {\n    var BiAStarFinder = __webpack_require__(22);\n\n    function BiDijkstraFinder(opt) {\n      BiAStarFinder.call(this, opt);\n\n      this.heuristic = function (dx, dy) {\n        return 0;\n      };\n    }\n\n    BiDijkstraFinder.prototype = new BiAStarFinder();\n    BiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\n    module.exports = BiDijkstraFinder;\n  }, function (module, exports, __webpack_require__) {\n    var Util = __webpack_require__(4);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function BiBreadthFirstFinder(opt) {\n      opt = opt || {};\n      this.allowDiagonal = opt.allowDiagonal;\n      this.dontCrossCorners = opt.dontCrossCorners;\n      this.diagonalMovement = opt.diagonalMovement;\n\n      if (!this.diagonalMovement) {\n        if (!this.allowDiagonal) {\n          this.diagonalMovement = DiagonalMovement.Never;\n        } else {\n          if (this.dontCrossCorners) {\n            this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\n          } else {\n            this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\n          }\n        }\n      }\n    }\n\n    BiBreadthFirstFinder.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var startNode = grid.getNodeAt(startX, startY),\n          endNode = grid.getNodeAt(endX, endY),\n          startOpenList = [],\n          endOpenList = [],\n          neighbors,\n          neighbor,\n          node,\n          diagonalMovement = this.diagonalMovement,\n          BY_START = 0,\n          BY_END = 1,\n          i,\n          l;\n      startOpenList.push(startNode);\n      startNode.opened = true;\n      startNode.by = BY_START;\n      endOpenList.push(endNode);\n      endNode.opened = true;\n      endNode.by = BY_END;\n\n      while (startOpenList.length && endOpenList.length) {\n        node = startOpenList.shift();\n        node.closed = true;\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed) {\n            continue;\n          }\n\n          if (neighbor.opened) {\n            if (neighbor.by === BY_END) {\n              return Util.biBacktrace(node, neighbor);\n            }\n\n            continue;\n          }\n\n          startOpenList.push(neighbor);\n          neighbor.parent = node;\n          neighbor.opened = true;\n          neighbor.by = BY_START;\n        }\n\n        node = endOpenList.shift();\n        node.closed = true;\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed) {\n            continue;\n          }\n\n          if (neighbor.opened) {\n            if (neighbor.by === BY_START) {\n              return Util.biBacktrace(neighbor, node);\n            }\n\n            continue;\n          }\n\n          endOpenList.push(neighbor);\n          neighbor.parent = node;\n          neighbor.opened = true;\n          neighbor.by = BY_END;\n        }\n      }\n\n      return [];\n    };\n\n    module.exports = BiBreadthFirstFinder;\n  }, function (module, exports, __webpack_require__) {\n    var BiAStarFinder = __webpack_require__(22);\n\n    function BiBestFirstFinder(opt) {\n      BiAStarFinder.call(this, opt);\n      var orig = this.heuristic;\n\n      this.heuristic = function (dx, dy) {\n        return orig(dx, dy) * 1e6;\n      };\n    }\n\n    BiBestFirstFinder.prototype = new BiAStarFinder();\n    BiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\n    module.exports = BiBestFirstFinder;\n  }, function (module, exports, __webpack_require__) {\n    var AStarFinder = __webpack_require__(23);\n\n    function DijkstraFinder(opt) {\n      AStarFinder.call(this, opt);\n\n      this.heuristic = function (dx, dy) {\n        return 0;\n      };\n    }\n\n    DijkstraFinder.prototype = new AStarFinder();\n    DijkstraFinder.prototype.constructor = DijkstraFinder;\n    module.exports = DijkstraFinder;\n  }, function (module, exports, __webpack_require__) {\n    var Util = __webpack_require__(4);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function BreadthFirstFinder(opt) {\n      opt = opt || {};\n      this.allowDiagonal = opt.allowDiagonal;\n      this.dontCrossCorners = opt.dontCrossCorners;\n      this.diagonalMovement = opt.diagonalMovement;\n\n      if (!this.diagonalMovement) {\n        if (!this.allowDiagonal) {\n          this.diagonalMovement = DiagonalMovement.Never;\n        } else {\n          if (this.dontCrossCorners) {\n            this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\n          } else {\n            this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\n          }\n        }\n      }\n    }\n\n    BreadthFirstFinder.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var openList = [],\n          diagonalMovement = this.diagonalMovement,\n          startNode = grid.getNodeAt(startX, startY),\n          endNode = grid.getNodeAt(endX, endY),\n          neighbors,\n          neighbor,\n          node,\n          i,\n          l;\n      openList.push(startNode);\n      startNode.opened = true;\n\n      while (openList.length) {\n        node = openList.shift();\n        node.closed = true;\n\n        if (node === endNode) {\n          return Util.backtrace(endNode);\n        }\n\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed || neighbor.opened) {\n            continue;\n          }\n\n          openList.push(neighbor);\n          neighbor.opened = true;\n          neighbor.parent = node;\n        }\n      }\n\n      return [];\n    };\n\n    module.exports = BreadthFirstFinder;\n  }, function (module, exports, __webpack_require__) {\n    var AStarFinder = __webpack_require__(23);\n\n    function BestFirstFinder(opt) {\n      AStarFinder.call(this, opt);\n      var orig = this.heuristic;\n\n      this.heuristic = function (dx, dy) {\n        return orig(dx, dy) * 1e6;\n      };\n    }\n\n    BestFirstFinder.prototype = new AStarFinder();\n    BestFirstFinder.prototype.constructor = BestFirstFinder;\n    module.exports = BestFirstFinder;\n  }, function (module, exports, __webpack_require__) {\n    var Node = __webpack_require__(24);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function Grid(width_or_matrix, height, matrix) {\n      var width;\n\n      if (typeof width_or_matrix !== \"object\") {\n        width = width_or_matrix;\n      } else {\n        height = width_or_matrix.length;\n        width = width_or_matrix[0].length;\n        matrix = width_or_matrix;\n      }\n\n      this.width = width;\n      this.height = height;\n      this.nodes = this._buildNodes(width, height, matrix);\n    }\n\n    Grid.prototype._buildNodes = function (width, height, matrix) {\n      var i,\n          j,\n          nodes = new Array(height);\n\n      for (i = 0; i < height; ++i) {\n        nodes[i] = new Array(width);\n\n        for (j = 0; j < width; ++j) {\n          nodes[i][j] = new Node(j, i);\n        }\n      }\n\n      if (matrix === undefined) {\n        return nodes;\n      }\n\n      if (matrix.length !== height || matrix[0].length !== width) {\n        throw new Error(\"Matrix size does not fit\");\n      }\n\n      for (i = 0; i < height; ++i) {\n        for (j = 0; j < width; ++j) {\n          if (matrix[i][j]) {\n            nodes[i][j].walkable = false;\n          }\n        }\n      }\n\n      return nodes;\n    };\n\n    Grid.prototype.getNodeAt = function (x, y) {\n      return this.nodes[y][x];\n    };\n\n    Grid.prototype.isWalkableAt = function (x, y) {\n      return this.isInside(x, y) && this.nodes[y][x].walkable;\n    };\n\n    Grid.prototype.isInside = function (x, y) {\n      return x >= 0 && x < this.width && y >= 0 && y < this.height;\n    };\n\n    Grid.prototype.setWalkableAt = function (x, y, walkable) {\n      this.nodes[y][x].walkable = walkable;\n    };\n\n    Grid.prototype.getNeighbors = function (node, diagonalMovement) {\n      var x = node.x,\n          y = node.y,\n          neighbors = [],\n          s0 = false,\n          d0 = false,\n          s1 = false,\n          d1 = false,\n          s2 = false,\n          d2 = false,\n          s3 = false,\n          d3 = false,\n          nodes = this.nodes;\n\n      if (this.isWalkableAt(x, y - 1)) {\n        neighbors.push(nodes[y - 1][x]);\n        s0 = true;\n      }\n\n      if (this.isWalkableAt(x + 1, y)) {\n        neighbors.push(nodes[y][x + 1]);\n        s1 = true;\n      }\n\n      if (this.isWalkableAt(x, y + 1)) {\n        neighbors.push(nodes[y + 1][x]);\n        s2 = true;\n      }\n\n      if (this.isWalkableAt(x - 1, y)) {\n        neighbors.push(nodes[y][x - 1]);\n        s3 = true;\n      }\n\n      if (diagonalMovement === DiagonalMovement.Never) {\n        return neighbors;\n      }\n\n      if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\n        d0 = s3 && s0;\n        d1 = s0 && s1;\n        d2 = s1 && s2;\n        d3 = s2 && s3;\n      } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\n        d0 = s3 || s0;\n        d1 = s0 || s1;\n        d2 = s1 || s2;\n        d3 = s2 || s3;\n      } else if (diagonalMovement === DiagonalMovement.Always) {\n        d0 = true;\n        d1 = true;\n        d2 = true;\n        d3 = true;\n      } else {\n        throw new Error(\"Incorrect value of diagonalMovement\");\n      }\n\n      if (d0 && this.isWalkableAt(x - 1, y - 1)) {\n        neighbors.push(nodes[y - 1][x - 1]);\n      }\n\n      if (d1 && this.isWalkableAt(x + 1, y - 1)) {\n        neighbors.push(nodes[y - 1][x + 1]);\n      }\n\n      if (d2 && this.isWalkableAt(x + 1, y + 1)) {\n        neighbors.push(nodes[y + 1][x + 1]);\n      }\n\n      if (d3 && this.isWalkableAt(x - 1, y + 1)) {\n        neighbors.push(nodes[y + 1][x - 1]);\n      }\n\n      return neighbors;\n    };\n\n    Grid.prototype.clone = function () {\n      var i,\n          j,\n          width = this.width,\n          height = this.height,\n          thisNodes = this.nodes,\n          newGrid = new Grid(width, height),\n          newNodes = new Array(height);\n\n      for (i = 0; i < height; ++i) {\n        newNodes[i] = new Array(width);\n\n        for (j = 0; j < width; ++j) {\n          newNodes[i][j] = new Node(j, i, thisNodes[i][j].walkable);\n        }\n      }\n\n      newGrid.nodes = newNodes;\n      return newGrid;\n    };\n\n    module.exports = Grid;\n  }, function (module, exports) {\n    module.exports = function (module) {\n      if (!module.webpackPolyfill) {\n        module.deprecate = function () {};\n\n        module.paths = [];\n        if (!module.children) module.children = [];\n        Object.defineProperty(module, \"loaded\", {\n          enumerable: true,\n          get: function () {\n            return module.l;\n          }\n        });\n        Object.defineProperty(module, \"id\", {\n          enumerable: true,\n          get: function () {\n            return module.i;\n          }\n        });\n        module.webpackPolyfill = 1;\n      }\n\n      return module;\n    };\n  }, function (module, exports, __webpack_require__) {\n    (function (module) {\n      (function () {\n        var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n        floor = Math.floor, min = Math.min;\n\n        defaultCmp = function (x, y) {\n          if (x < y) {\n            return -1;\n          }\n\n          if (x > y) {\n            return 1;\n          }\n\n          return 0;\n        };\n\n        insort = function (a, x, lo, hi, cmp) {\n          var mid;\n\n          if (lo == null) {\n            lo = 0;\n          }\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          if (lo < 0) {\n            throw new Error(\"lo must be non-negative\");\n          }\n\n          if (hi == null) {\n            hi = a.length;\n          }\n\n          while (lo < hi) {\n            mid = floor((lo + hi) / 2);\n\n            if (cmp(x, a[mid]) < 0) {\n              hi = mid;\n            } else {\n              lo = mid + 1;\n            }\n          }\n\n          return [].splice.apply(a, [lo, lo - lo].concat(x)), x;\n        };\n\n        heappush = function (array, item, cmp) {\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          array.push(item);\n          return _siftdown(array, 0, array.length - 1, cmp);\n        };\n\n        heappop = function (array, cmp) {\n          var lastelt, returnitem;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          lastelt = array.pop();\n\n          if (array.length) {\n            returnitem = array[0];\n            array[0] = lastelt;\n\n            _siftup(array, 0, cmp);\n          } else {\n            returnitem = lastelt;\n          }\n\n          return returnitem;\n        };\n\n        heapreplace = function (array, item, cmp) {\n          var returnitem;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          returnitem = array[0];\n          array[0] = item;\n\n          _siftup(array, 0, cmp);\n\n          return returnitem;\n        };\n\n        heappushpop = function (array, item, cmp) {\n          var _ref;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          if (array.length && cmp(array[0], item) < 0) {\n            _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n\n            _siftup(array, 0, cmp);\n          }\n\n          return item;\n        };\n\n        heapify = function (array, cmp) {\n          var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          _ref1 = function () {\n            _results1 = [];\n\n            for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--) {\n              _results1.push(_j);\n            }\n\n            return _results1;\n          }.apply(this).reverse();\n\n          _results = [];\n\n          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n            i = _ref1[_i];\n\n            _results.push(_siftup(array, i, cmp));\n          }\n\n          return _results;\n        };\n\n        updateItem = function (array, item, cmp) {\n          var pos;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          pos = array.indexOf(item);\n\n          if (pos === -1) {\n            return;\n          }\n\n          _siftdown(array, 0, pos, cmp);\n\n          return _siftup(array, pos, cmp);\n        };\n\n        nlargest = function (array, n, cmp) {\n          var elem, result, _i, _len, _ref;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          result = array.slice(0, n);\n\n          if (!result.length) {\n            return result;\n          }\n\n          heapify(result, cmp);\n          _ref = array.slice(n);\n\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            elem = _ref[_i];\n            heappushpop(result, elem, cmp);\n          }\n\n          return result.sort(cmp).reverse();\n        };\n\n        nsmallest = function (array, n, cmp) {\n          var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          if (n * 10 <= array.length) {\n            result = array.slice(0, n).sort(cmp);\n\n            if (!result.length) {\n              return result;\n            }\n\n            los = result[result.length - 1];\n            _ref = array.slice(n);\n\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n              elem = _ref[_i];\n\n              if (cmp(elem, los) < 0) {\n                insort(result, elem, 0, null, cmp);\n                result.pop();\n                los = result[result.length - 1];\n              }\n            }\n\n            return result;\n          }\n\n          heapify(array, cmp);\n          _results = [];\n\n          for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n            _results.push(heappop(array, cmp));\n          }\n\n          return _results;\n        };\n\n        _siftdown = function (array, startpos, pos, cmp) {\n          var newitem, parent, parentpos;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          newitem = array[pos];\n\n          while (pos > startpos) {\n            parentpos = pos - 1 >> 1;\n            parent = array[parentpos];\n\n            if (cmp(newitem, parent) < 0) {\n              array[pos] = parent;\n              pos = parentpos;\n              continue;\n            }\n\n            break;\n          }\n\n          return array[pos] = newitem;\n        };\n\n        _siftup = function (array, pos, cmp) {\n          var childpos, endpos, newitem, rightpos, startpos;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          endpos = array.length;\n          startpos = pos;\n          newitem = array[pos];\n          childpos = 2 * pos + 1;\n\n          while (childpos < endpos) {\n            rightpos = childpos + 1;\n\n            if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n              childpos = rightpos;\n            }\n\n            array[pos] = array[childpos];\n            pos = childpos;\n            childpos = 2 * pos + 1;\n          }\n\n          array[pos] = newitem;\n          return _siftdown(array, startpos, pos, cmp);\n        };\n\n        Heap = function () {\n          Heap.push = heappush;\n          Heap.pop = heappop;\n          Heap.replace = heapreplace;\n          Heap.pushpop = heappushpop;\n          Heap.heapify = heapify;\n          Heap.updateItem = updateItem;\n          Heap.nlargest = nlargest;\n          Heap.nsmallest = nsmallest;\n\n          function Heap(cmp) {\n            this.cmp = cmp != null ? cmp : defaultCmp;\n            this.nodes = [];\n          }\n\n          Heap.prototype.push = function (x) {\n            return heappush(this.nodes, x, this.cmp);\n          };\n\n          Heap.prototype.pop = function () {\n            return heappop(this.nodes, this.cmp);\n          };\n\n          Heap.prototype.peek = function () {\n            return this.nodes[0];\n          };\n\n          Heap.prototype.contains = function (x) {\n            return this.nodes.indexOf(x) !== -1;\n          };\n\n          Heap.prototype.replace = function (x) {\n            return heapreplace(this.nodes, x, this.cmp);\n          };\n\n          Heap.prototype.pushpop = function (x) {\n            return heappushpop(this.nodes, x, this.cmp);\n          };\n\n          Heap.prototype.heapify = function () {\n            return heapify(this.nodes, this.cmp);\n          };\n\n          Heap.prototype.updateItem = function (x) {\n            return updateItem(this.nodes, x, this.cmp);\n          };\n\n          Heap.prototype.clear = function () {\n            return this.nodes = [];\n          };\n\n          Heap.prototype.empty = function () {\n            return this.nodes.length === 0;\n          };\n\n          Heap.prototype.size = function () {\n            return this.nodes.length;\n          };\n\n          Heap.prototype.clone = function () {\n            var heap;\n            heap = new Heap();\n            heap.nodes = this.nodes.slice(0);\n            return heap;\n          };\n\n          Heap.prototype.toArray = function () {\n            return this.nodes.slice(0);\n          };\n\n          Heap.prototype.insert = Heap.prototype.push;\n          Heap.prototype.top = Heap.prototype.peek;\n          Heap.prototype.front = Heap.prototype.peek;\n          Heap.prototype.has = Heap.prototype.contains;\n          Heap.prototype.copy = Heap.prototype.clone;\n          return Heap;\n        }();\n\n        if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n          module.exports = Heap;\n        } else {\n          window.Heap = Heap;\n        }\n      }).call(this);\n    }).call(this, __webpack_require__(65)(module));\n  }, function (module, exports, __webpack_require__) {\n    module.exports = {\n      Heap: __webpack_require__(15),\n      Node: __webpack_require__(24),\n      Grid: __webpack_require__(64),\n      Util: __webpack_require__(4),\n      DiagonalMovement: __webpack_require__(2),\n      Heuristic: __webpack_require__(10),\n      AStarFinder: __webpack_require__(23),\n      BestFirstFinder: __webpack_require__(63),\n      BreadthFirstFinder: __webpack_require__(62),\n      DijkstraFinder: __webpack_require__(61),\n      BiAStarFinder: __webpack_require__(22),\n      BiBestFirstFinder: __webpack_require__(60),\n      BiBreadthFirstFinder: __webpack_require__(59),\n      BiDijkstraFinder: __webpack_require__(58),\n      IDAStarFinder: __webpack_require__(57),\n      JumpPointFinder: __webpack_require__(56)\n    };\n  }, function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(67);\n  }, function (module, exports) {\n    var proto = Element.prototype;\n    var vendor = proto.matchesSelector || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector;\n    module.exports = match;\n\n    function match(el, selector) {\n      if (vendor) return vendor.call(el, selector);\n      var nodes = el.parentNode.querySelectorAll(selector);\n\n      for (var i = 0; i < nodes.length; ++i) {\n        if (nodes[i] == el) return true;\n      }\n\n      return false;\n    }\n  }, function (module, exports, __webpack_require__) {\n    var matches = __webpack_require__(69);\n\n    module.exports = function (element, selector, checkYoSelf) {\n      var parent = checkYoSelf ? element : element.parentNode;\n\n      while (parent && parent !== document) {\n        if (matches(parent, selector)) return parent;\n        parent = parent.parentNode;\n      }\n    };\n  }]);\n});","map":{"version":3,"mappings":"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7DA;AAoFAW;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACAlB;AACA5e;AACA+f;AACA;AACAnB;AACA;AAAAvb,iBAHA0c;AAOA;;AAAA;AACA;AACA;AAEAnB;AACA5e;AACA+f;AACA;AACAnB;AACA;AAAAvb,eAHA0c;;AAMA;AACAnB;AACA5e;AACA+f;AACA;AACAnB;AACA;AAAAvb,iBAHA0c;AAOA;;AAAA;AACA9mB;AADA;AArCA;;AA0CA;AAAAA,WA3CA,MA4CO;AACP;AAAA4mB;AAAAA,SAjDAV,CApFA;AAwIAa;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACApB;AACA;AAAAvb,iBAHAwc;;AAKA;AACA5mB;AADA;AARA;;AAaA;AAAAA,aAdA,MAeS;AACT;AAAA4mB;AAjBA;AAAA,SAHAV,CAxIA;AAgKAc;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACArB;AACA;AAAAvb,eAHAwc;;AAKA;AACA5mB;AADA;AARA;;AAaA;AAAAA,WAdA,MAeO;AACP;AAAA4mB;AAAAA,SAnBAV,CAhKA;AAsLAe;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACAtB;AACA;AAAAvb,eAHAwc;;AAKA;AACA5mB;AADA;AARA;;AAaA;AAAAA,WAdA,MAeO;AACP;AAAA4mB;AAAAA,SAnBAV,CAtLA;AA4MA3kB;AACA;AAAA,SA7MA;AA+MArB;AACA;AAAAqB,SAhNA;AAkNA5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4EAAqEupB,2DAArEC,GAAqID,gCAArI,EAAqI;AACrI;AAEA;AACAvB;;AACA;AACAyB;AAAAhd;AAAAA;AAGO,WAVP,CAUO;AACPid;AACAC;AACO,WAbP,SAaO;AACP;AACA;AACAC;AAAA;AAES,aAJT,SAIS;AACT;AACA;AAAAD;AAAAA;AAKA;;AAAA;AAAAF,SAlPA;AAoPAI;AACA;AAAApsB,SArPA;AAuPAqsB;AACA;AACA;AACA;AACA;;AACA;AACAX;;AACA;AACAA;AACA5B,4BADAwC;AAEA3C;AAFA2C;AAEA9S;A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","names":["module","define","exports","root","window","i","moduleId","l","modules","__webpack_require__","Object","configurable","name","enumerable","get","getter","value","property","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","Always","DiagonalMovement","Never","IfAtMostOneObstacle","OnlyWhenNoObstacles","__extends","props","_super","this","_this","className","BaseWidget","selector","baseClass","extraProps","__assign","getClassName","React","Component","node","path","pathB","length","a","b","dx","dy","sum","line","sx","sy","err","e2","x0","y0","len","coord0","coord1","interpolated","interpolatedLen","j","expanded","x1","y1","ex","ey","newPath","coord","testCoord","blocked","lastValidCoord","px","py","lx","ly","ldx","ldy","sq","compressed","compressPath","link","points","x","y","parent","PointModel","isSelected","call","isConnectedToPort","getPortForPoint","getParent","ob","engine","deSerialize","_","merge","serialize","removePoint","remove","isLocked","BaseModel_1","type","id","selected","BaseModel","iterateListeners","listener","event","selectionChanged","entityRemoved","BaseEntity_1","Toolkit","TESTING","TESTING_UID","replace","r","Math","random","v","c","toString","element","document","body","closest","firstPoint","lastPoint","curvy","isHorizontal","abs","curvyX","curvyY","pathCoords","Path","moveto","PathFinding_1","slice","forEach","lineto","coords","ROUTING_SCALING_FACTOR","print","AbstractFactory","nodeType","extras","ports","NodeModel","oldX","oldY","port","getLinks","point","getPointForPort","entities","getSelectedEntities","concat","map","portOb","getPortFactory","getNewInstance","addPort","lookupTable","clone","setParent","_a","width","height","manhattan","euclidean","octile","chebyshev","mouseX","mouseY","ms","Date","getTime","BaseAction","maximumLinks","links","PortModel","parentNode","getID","isFinite","numberOfLinks","size","values","listeners","Toolkit_1","UID","locked","BaseEntity","clearListeners","doClone","data","cb","firing","entity","stopPropagation","hasOwnProperty","uid","lockChanged","opt","JumpPointFinderBase","f","startNode","endNode","openList","heuristic","endX","endY","neighbors","neighbor","jumpPoint","jx","jy","d","ng","jumpNode","max","pathFinderInstance","PF","JumpPointFinder","Heuristic","diagonalMovement","diagramEngine","instance","PathFinding","from","to","matrix","getCanvasMatrix","grid","Grid","findPath","translateRoutingX","floor","translateRoutingY","startIndex","findIndex","endIndex","reverse","undefined","pathToStart","pathToEnd","start","end","routingMatrix","dynamicPath","Util","__proto__","extendStatics","offsetX","offsetY","LabelModel","DefaultLabelModel","label","LabelModel_1","color","curvyness","DefaultLinkModel","addLabel","labelOb","DefaultLabelModel_1","setLabel","widthChanged","colorChanged","LinkModel_1","isInput","in","DefaultPortModel","object","createLinkModel","setSourcePort","setTargetPort","DefaultLinkModel_1","PortModel_1","linkType","PointModel_1","sourcePort","targetPort","labels","LinkModel","p","getLabelFactory","target","getNode","getPortFromID","source","setPoints","getPoints","removeLink","index","getPointIndex","indexOf","getFirstPoint","getLastPoint","addLink","sourcePortChanged","targetPortChanged","addPoint","generatePoint","push","pointModel","splice","BiAStarFinder","startOpenList","endOpenList","weight","SQRT2","BY_START","BY_END","AStarFinder","Node","state","NodeWidget","canEntityRepaint","bem","getProps","data-nodeid","style","top","left","children","BaseWidget_1","nodesRendered","diagramModel","getDiagramModel","getNodes","updateDimensions","getNodeDimensions","NodeLayerWidget","updateNodeDimensions","transform","getOffsetX","getOffsetY","getZoomLevel","createElement","NodeWidget_1","key","generateWidgetForNode","LinkWidget","LinkLayerWidget","canvas","linksThatHaveInitiallyRendered","portCenter","getPortCenter","updateLocation","portCoords","getPortCoords","updateCoords","ignore","last","generatedLink","generateWidgetForLink","Error","getType","LinkWidget_1","cloneElement","pointAdded","mouseX2","mouseY2","SelectingAction","right","bottom","z","dimensions","getBoxDimensions","BaseAction_1","moved","enableRepaintEntities","getSelectedItems","selectedItems","filter","isModelLocked","item","selectionModels","model","initialX","initialY","MoveItemsAction","initialOffsetX","initialOffsetY","MoveCanvasAction","AbstractNodeFactory","AbstractFactory_1","PortWidget","onMouseEnter","setState","onMouseLeave","data-name","DefaultPortLabel","PortWidget_1","DefaultNodeWidget","DefaultPortLabelWidget_1","background","getInPorts","generatePort","bind","getOutPorts","AbstractLinkFactory","shiftKey","getMaxNumberPointsPerLink","getRelativeMousePoint","setSelected","forceUpdate","lengths","refPaths","getTotalLength","labelPosition","reduce","previousValue","currentValue","pathIndex","position","refLabels","labelDimensions","offsetWidth","offsetHeight","pathCentre","getPointAtLength","labelCoordinates","setAttribute","isSmartRoutingEnabled","pathFinding","DefaultLinkWidget","calculateLabelPosition","requestAnimationFrame","calculateAllLabelPosition","pointIndex","cx","cy","data-id","data-linkid","opacity","ref","getFactoryForLabel","generateReactWidget","Bottom","getFactoryForLink","generateLinkSegment","Top","strokeLinecap","strokeOpacity","strokeWidth","onContextMenu","preventDefault","paths","isSmartRoutingApplicable","directPathCoords","calculateDirectPath","first","getRoutingMatrix","smartLink","calculateLinkStartEndCoords","simplifiedPath","calculateDynamicPath","generateLink","generateDynamicPath","onMouseDown","addPointToLink","xOrY","margin","pointLeft","pointRight","generateCurvePath","this_1","generateLinePath","data-point","_loop_1","generateLabel","labelModel","defaultProps","smooth","DefaultNodeModel","DefaultPortModel_1","portModel","NodeModel_1","DefaultLabelWidget","AbstractLabelFactory","DefaultLabelFactory","DefaultLabelWidget_1","initialConfig","AbstractLabelFactory_1","AbstractPortFactory","DefaultPortFactory","AbstractPortFactory_1","nodes","zoom","rendered","gridSize","DiagramModel","gridUpdated","pos","nodeOb","getNodeFactory","addNode","linkOb","getLinkFactory","filters","Array","isArray","items","flatMap","uniq","includes","zoomUpdated","offsetUpdated","models","addListener","linksUpdated","isCreated","removeNode","nodesUpdated","getLink","__export","s","onMouseMove","onMouseUp","action","wasMoved","renderedNodes","windowListener","diagramEngineListener","DiagramWidget","removeListener","setCanvas","removeEventListener","onKeyUpPointer","nextProps","repaintCanvas","onKeyUp","addEventListener","focus","nodeElement","getAttribute","getPort","getPointModel","actionStillFiring","shouldSkipEvent","actionStoppedFiring","actionStartedFiring","SelectingAction_1","relative","getRelativePoint","clientX","clientY","containsElement","allSelected","fireAction","MoveItemsAction_1","amountX_1","amountY_1","amountZoom_1","getGridPosition","getPorts","calculateRoutingMatrix","calculateCanvasMatrix","MoveCanvasAction_1","allowCanvasTranslation","setOffset","deleteKeys","keyCode","getMouseElement","getTargetPort","getSourcePort","newLink","removePointsBefore","removePointsAfter","allowLooseLinks","selectedPoint","canLinkToPort","some","clearRepaintEntities","stopFiringAction","setMaxNumberPointsPerLink","maxNumberPointsPerLink","setSmartRoutingStatus","smartRouting","onWheel","allowCanvasZoom","oldZoomFactor","scrollDelta","inverseZoom","deltaY","ctrlKey","setZoomLevel","zoomFactor","boundingRect","currentTarget","getBoundingClientRect","clientWidth","clientHeight","widthDiff","heightDiff","xFactor","yFactor","startFiringAction","clearSelection","removeMiddlePoints","LinkLayerWidget_1","NodeLayerWidget_1","drawSelectionBox","Infinity","DefaultNodeFactory","DefaultNodeWidget_1","DefaultNodeModel_1","AbstractNodeFactory_1","DefaultLinkFactory","DefaultLinkWidget_1","widget","stroke","AbstractLinkFactory_1","allNodesCoords","allLinks","allPortsCoords","allPointsCoords","minX","min","minBy","maxXElement","maxBy","maxX","minY","maxYElement","maxY","ceil","hAdjustmentFactor","vAdjustmentFactor","startX","startY","markMatrixPoint","allElements","DiagramModel_1","nodeFactories","linkFactories","portFactories","labelFactories","paintableWidgets","DiagramEngine","registerNodeFactory","main_1","registerLinkFactory","registerPortFactory","DefaultPortFactory_1","registerLabelFactory","DefaultLabelFactory_1","baseModel","recalculatePortsVisually","prototype","factory","labelFactoriesUpdated","portFactoriesUpdated","nodeFactoriesUpdated","linkFactoriesUpdated","linkFactory","nodeFactory","getFactoryForNode","canvasRect","querySelector","getName","sourceElement","getNodePortElement","sourceRect","rel","getNodeElement","nodeRect","status","canvasMatrix","canvasWidth","canvasHeight","matrixWidth","matrixHeight","range","fill","cloneDeep","markNodes","markPorts","scrollWidth","scrollHeight","_n","_s","_arr","_d","_e","arr","by","yc","s1","approx","K","rx","ry","ax","isDegenerate","D","l2","newRx","newRy","newAx","distPointToPoint","distPointToParabol","circumCenter","parabolsCrossX","doHalflinesCross","matrixTransform","transformEllipse","copy","b2","str","params","V","pts","command","transformer","H","A","sweepFlag","C","Z","default","newParams","prev","k","keys","arguments","args","instruction","plus","verbosify","hlineto","vlineto","closepath","curveto","smoothcurveto","qcurveto","smoothqcurveto","arc","translate","_instructions","rotate","newInstructions","scale","shearX","shearY","_iteratorNormalCompletion","_step","ps","_didIteratorError","_iteratorError","_iterator","instructions","connect","unshift","JPFMoveDiagonallyIfAtMostOneObstacle","nx","ny","neighborNodes","neighborNode","JPFMoveDiagonallyIfNoObstacles","isNextWalkable","JPFAlwaysMoveDiagonally","JPFNeverMoveDiagonally","IDAStarFinder","nodesVisited","startTime","route","neighbour","t","cutOff","BiDijkstraFinder","BiBreadthFirstFinder","BiBestFirstFinder","DijkstraFinder","BreadthFirstFinder","BestFirstFinder","width_or_matrix","walkable","s0","d0","d1","s2","d2","s3","d3","thisNodes","newGrid","newNodes","defaultCmp","insort","lo","cmp","hi","mid","heappush","array","heappop","lastelt","returnitem","_siftup","heapreplace","heappushpop","_ref","heapify","_ref1","_results1","apply","_results","_i","updateItem","_siftdown","nlargest","result","elem","nsmallest","los","newitem","parentpos","endpos","startpos","childpos","rightpos","Heap","heap","proto"],"sources":["webpack://storm-react-diagrams/webpack/universalModuleDefinition","webpack://storm-react-diagrams/webpack/bootstrap","webpack://storm-react-diagrams/external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"_\",\"root\":\"_\"}","webpack://storm-react-diagrams/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://storm-react-diagrams/./node_modules/pathfinding/src/core/DiagonalMovement.js","webpack://storm-react-diagrams/./src/widgets/BaseWidget.tsx","webpack://storm-react-diagrams/./node_modules/pathfinding/src/core/Util.js","webpack://storm-react-diagrams/./src/models/PointModel.ts","webpack://storm-react-diagrams/./src/models/BaseModel.ts","webpack://storm-react-diagrams/./src/Toolkit.ts","webpack://storm-react-diagrams/./src/factories/AbstractFactory.ts","webpack://storm-react-diagrams/./src/models/NodeModel.ts","webpack://storm-react-diagrams/./node_modules/pathfinding/src/core/Heuristic.js","webpack://storm-react-diagrams/./src/actions/BaseAction.ts","webpack://storm-react-diagrams/./src/models/PortModel.ts","webpack://storm-react-diagrams/./src/BaseEntity.ts","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/JumpPointFinderBase.js","webpack://storm-react-diagrams/./node_modules/heap/index.js","webpack://storm-react-diagrams/./src/routing/PathFinding.ts","webpack://storm-react-diagrams/./src/models/LabelModel.ts","webpack://storm-react-diagrams/./src/defaults/models/DefaultLabelModel.tsx","webpack://storm-react-diagrams/./src/defaults/models/DefaultLinkModel.ts","webpack://storm-react-diagrams/./src/defaults/models/DefaultPortModel.ts","webpack://storm-react-diagrams/./src/models/LinkModel.ts","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/BiAStarFinder.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/AStarFinder.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/core/Node.js","webpack://storm-react-diagrams/./src/widgets/NodeWidget.tsx","webpack://storm-react-diagrams/./src/widgets/layers/NodeLayerWidget.tsx","webpack://storm-react-diagrams/./src/widgets/LinkWidget.tsx","webpack://storm-react-diagrams/./src/widgets/layers/LinkLayerWidget.tsx","webpack://storm-react-diagrams/./src/actions/SelectingAction.ts","webpack://storm-react-diagrams/./src/actions/MoveItemsAction.ts","webpack://storm-react-diagrams/./src/actions/MoveCanvasAction.ts","webpack://storm-react-diagrams/./src/factories/AbstractNodeFactory.ts","webpack://storm-react-diagrams/./src/widgets/PortWidget.tsx","webpack://storm-react-diagrams/./src/defaults/widgets/DefaultPortLabelWidget.tsx","webpack://storm-react-diagrams/./src/defaults/widgets/DefaultNodeWidget.tsx","webpack://storm-react-diagrams/./src/factories/AbstractLinkFactory.ts","webpack://storm-react-diagrams/./src/defaults/widgets/DefaultLinkWidget.tsx","webpack://storm-react-diagrams/./src/defaults/models/DefaultNodeModel.ts","webpack://storm-react-diagrams/./src/defaults/widgets/DefaultLabelWidget.tsx","webpack://storm-react-diagrams/./src/factories/AbstractLabelFactory.ts","webpack://storm-react-diagrams/./src/defaults/factories/DefaultLabelFactory.tsx","webpack://storm-react-diagrams/./src/factories/AbstractPortFactory.ts","webpack://storm-react-diagrams/./src/defaults/factories/DefaultPortFactory.tsx","webpack://storm-react-diagrams/./src/models/DiagramModel.ts","webpack://storm-react-diagrams/./src/main.ts","webpack://storm-react-diagrams/./src/widgets/DiagramWidget.tsx","webpack://storm-react-diagrams/./src/defaults/factories/DefaultNodeFactory.ts","webpack://storm-react-diagrams/./src/defaults/factories/DefaultLinkFactory.tsx","webpack://storm-react-diagrams/./src/DiagramEngine.ts","webpack://storm-react-diagrams/./node_modules/paths-js/geom.js","webpack://storm-react-diagrams/./node_modules/paths-js/path.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfAtMostOneObstacle.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfNoObstacles.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/JPFAlwaysMoveDiagonally.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/JPFNeverMoveDiagonally.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/JumpPointFinder.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/IDAStarFinder.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/BiDijkstraFinder.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/BiBreadthFirstFinder.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/BiBestFirstFinder.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/DijkstraFinder.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/BreadthFirstFinder.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/finders/BestFirstFinder.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/core/Grid.js","webpack://storm-react-diagrams/(webpack)/buildin/module.js","webpack://storm-react-diagrams/./node_modules/heap/lib/heap.js","webpack://storm-react-diagrams/./node_modules/pathfinding/src/PathFinding.js","webpack://storm-react-diagrams/./node_modules/pathfinding/index.js","webpack://storm-react-diagrams/./node_modules/matches-selector/index.js","webpack://storm-react-diagrams/./node_modules/closest/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"_\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"storm-react-diagrams\"] = factory(require(\"lodash\"), require(\"react\"));\n\telse\n\t\troot[\"storm-react-diagrams\"] = factory(root[\"_\"], root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 45);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","var DiagonalMovement = {\r\n    Always: 1,\r\n    Never: 2,\r\n    IfAtMostOneObstacle: 3,\r\n    OnlyWhenNoObstacles: 4\r\n};\r\n\r\nmodule.exports = DiagonalMovement;","import * as React from \"react\";\nimport * as _ from \"lodash\";\n\nexport interface BaseWidgetProps {\n\t/**\n\t * Override the base class name\n\t */\n\tbaseClass?: string;\n\t/**\n\t * append additional classes\n\t */\n\tclassName?: string;\n\n\t/**\n\t * Additional props to add\n\t */\n\textraProps?: any;\n}\n\nexport class BaseWidget<P extends BaseWidgetProps = BaseWidgetProps, S = any> extends React.Component<P, S> {\n\tclassName: string;\n\n\tconstructor(name: string, props: P) {\n\t\tsuper(props);\n\t\tthis.className = name;\n\t}\n\n\tbem(selector: string): string {\n\t\treturn (this.props.baseClass || this.className) + selector + \" \";\n\t}\n\n\tgetClassName(): string {\n\t\treturn (\n\t\t\t(this.props.baseClass || this.className) + \" \" + (this.props.className ? this.props.className + \" \" : \"\")\n\t\t);\n\t}\n\n\tgetProps(): any {\n\t\treturn {\n\t\t\t...((this.props.extraProps as any) || {}),\n\t\t\tclassName: this.getClassName()\n\t\t};\n\t}\n}\n","/**\r\n * Backtrace according to the parent records and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node} node End node\r\n * @return {Array<Array<number>>} the path\r\n */\r\nfunction backtrace(node) {\r\n    var path = [[node.x, node.y]];\r\n    while (node.parent) {\r\n        node = node.parent;\r\n        path.push([node.x, node.y]);\r\n    }\r\n    return path.reverse();\r\n}\r\nexports.backtrace = backtrace;\r\n\r\n/**\r\n * Backtrace from start and end node, and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node}\r\n * @param {Node}\r\n */\r\nfunction biBacktrace(nodeA, nodeB) {\r\n    var pathA = backtrace(nodeA),\r\n        pathB = backtrace(nodeB);\r\n    return pathA.concat(pathB.reverse());\r\n}\r\nexports.biBacktrace = biBacktrace;\r\n\r\n/**\r\n * Compute the length of the path.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {number} The length of the path\r\n */\r\nfunction pathLength(path) {\r\n    var i, sum = 0, a, b, dx, dy;\r\n    for (i = 1; i < path.length; ++i) {\r\n        a = path[i - 1];\r\n        b = path[i];\r\n        dx = a[0] - b[0];\r\n        dy = a[1] - b[1];\r\n        sum += Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    return sum;\r\n}\r\nexports.pathLength = pathLength;\r\n\r\n\r\n/**\r\n * Given the start and end coordinates, return all the coordinates lying\r\n * on the line formed by these coordinates, based on Bresenham's algorithm.\r\n * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\r\n * @param {number} x0 Start x coordinate\r\n * @param {number} y0 Start y coordinate\r\n * @param {number} x1 End x coordinate\r\n * @param {number} y1 End y coordinate\r\n * @return {Array<Array<number>>} The coordinates on the line\r\n */\r\nfunction interpolate(x0, y0, x1, y1) {\r\n    var abs = Math.abs,\r\n        line = [],\r\n        sx, sy, dx, dy, err, e2;\r\n\r\n    dx = abs(x1 - x0);\r\n    dy = abs(y1 - y0);\r\n\r\n    sx = (x0 < x1) ? 1 : -1;\r\n    sy = (y0 < y1) ? 1 : -1;\r\n\r\n    err = dx - dy;\r\n\r\n    while (true) {\r\n        line.push([x0, y0]);\r\n\r\n        if (x0 === x1 && y0 === y1) {\r\n            break;\r\n        }\r\n        \r\n        e2 = 2 * err;\r\n        if (e2 > -dy) {\r\n            err = err - dy;\r\n            x0 = x0 + sx;\r\n        }\r\n        if (e2 < dx) {\r\n            err = err + dx;\r\n            y0 = y0 + sy;\r\n        }\r\n    }\r\n\r\n    return line;\r\n}\r\nexports.interpolate = interpolate;\r\n\r\n\r\n/**\r\n * Given a compressed path, return a new path that has all the segments\r\n * in it interpolated.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} expanded path\r\n */\r\nfunction expandPath(path) {\r\n    var expanded = [],\r\n        len = path.length,\r\n        coord0, coord1,\r\n        interpolated,\r\n        interpolatedLen,\r\n        i, j;\r\n\r\n    if (len < 2) {\r\n        return expanded;\r\n    }\r\n\r\n    for (i = 0; i < len - 1; ++i) {\r\n        coord0 = path[i];\r\n        coord1 = path[i + 1];\r\n\r\n        interpolated = interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\r\n        interpolatedLen = interpolated.length;\r\n        for (j = 0; j < interpolatedLen - 1; ++j) {\r\n            expanded.push(interpolated[j]);\r\n        }\r\n    }\r\n    expanded.push(path[len - 1]);\r\n\r\n    return expanded;\r\n}\r\nexports.expandPath = expandPath;\r\n\r\n\r\n/**\r\n * Smoothen the give path.\r\n * The original path will not be modified; a new path will be returned.\r\n * @param {PF.Grid} grid\r\n * @param {Array<Array<number>>} path The path\r\n */\r\nfunction smoothenPath(grid, path) {\r\n    var len = path.length,\r\n        x0 = path[0][0],        // path start x\r\n        y0 = path[0][1],        // path start y\r\n        x1 = path[len - 1][0],  // path end x\r\n        y1 = path[len - 1][1],  // path end y\r\n        sx, sy,                 // current start coordinate\r\n        ex, ey,                 // current end coordinate\r\n        newPath,\r\n        i, j, coord, line, testCoord, blocked;\r\n\r\n    sx = x0;\r\n    sy = y0;\r\n    newPath = [[sx, sy]];\r\n\r\n    for (i = 2; i < len; ++i) {\r\n        coord = path[i];\r\n        ex = coord[0];\r\n        ey = coord[1];\r\n        line = interpolate(sx, sy, ex, ey);\r\n\r\n        blocked = false;\r\n        for (j = 1; j < line.length; ++j) {\r\n            testCoord = line[j];\r\n\r\n            if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\r\n                blocked = true;\r\n                break;\r\n            }\r\n        }\r\n        if (blocked) {\r\n            lastValidCoord = path[i - 1];\r\n            newPath.push(lastValidCoord);\r\n            sx = lastValidCoord[0];\r\n            sy = lastValidCoord[1];\r\n        }\r\n    }\r\n    newPath.push([x1, y1]);\r\n\r\n    return newPath;\r\n}\r\nexports.smoothenPath = smoothenPath;\r\n\r\n\r\n/**\r\n * Compress a path, remove redundant nodes without altering the shape\r\n * The original path is not modified\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} The compressed path\r\n */\r\nfunction compressPath(path) {\r\n\r\n    // nothing to compress\r\n    if(path.length < 3) {\r\n        return path;\r\n    }\r\n\r\n    var compressed = [],\r\n        sx = path[0][0], // start x\r\n        sy = path[0][1], // start y\r\n        px = path[1][0], // second point x\r\n        py = path[1][1], // second point y\r\n        dx = px - sx, // direction between the two points\r\n        dy = py - sy, // direction between the two points\r\n        lx, ly,\r\n        ldx, ldy,\r\n        sq, i;\r\n\r\n    // normalize the direction\r\n    sq = Math.sqrt(dx*dx + dy*dy);\r\n    dx /= sq;\r\n    dy /= sq;\r\n\r\n    // start the new path\r\n    compressed.push([sx,sy]);\r\n\r\n    for(i = 2; i < path.length; i++) {\r\n\r\n        // store the last point\r\n        lx = px;\r\n        ly = py;\r\n\r\n        // store the last direction\r\n        ldx = dx;\r\n        ldy = dy;\r\n\r\n        // next point\r\n        px = path[i][0];\r\n        py = path[i][1];\r\n\r\n        // next direction\r\n        dx = px - lx;\r\n        dy = py - ly;\r\n\r\n        // normalize\r\n        sq = Math.sqrt(dx*dx + dy*dy);\r\n        dx /= sq;\r\n        dy /= sq;\r\n\r\n        // if the direction has changed, store the point\r\n        if ( dx !== ldx || dy !== ldy ) {\r\n            compressed.push([lx,ly]);\r\n        }\r\n    }\r\n\r\n    // store the last point\r\n    compressed.push([px,py]);\r\n\r\n    return compressed;\r\n}\r\nexports.compressPath = compressPath;\r\n","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { LinkModel } from \"./LinkModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport class PointModel extends BaseModel<LinkModel, BaseModelListener> {\n\tx: number;\n\ty: number;\n\n\tconstructor(link: LinkModel, points: { x: number; y: number }) {\n\t\tsuper();\n\t\tthis.x = points.x;\n\t\tthis.y = points.y;\n\t\tthis.parent = link;\n\t}\n\n\tgetSelectedEntities() {\n\t\tif (super.isSelected() && !this.isConnectedToPort()) {\n\t\t\treturn [this];\n\t\t}\n\t\treturn [];\n\t}\n\n\tisConnectedToPort(): boolean {\n\t\treturn this.parent.getPortForPoint(this) !== null;\n\t}\n\n\tgetLink(): LinkModel {\n\t\treturn this.getParent();\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.x = ob.x;\n\t\tthis.y = ob.y;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tx: this.x,\n\t\t\ty: this.y\n\t\t});\n\t}\n\n\tremove() {\n\t\t//clear references\n\t\tif (this.parent) {\n\t\t\tthis.parent.removePoint(this);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\tupdateLocation(points: { x: number; y: number }) {\n\t\tthis.x = points.x;\n\t\tthis.y = points.y;\n\t}\n\n\tgetX(): number {\n\t\treturn this.x;\n\t}\n\n\tgetY(): number {\n\t\treturn this.y;\n\t}\n\n\tisLocked() {\n\t\treturn super.isLocked() || this.getParent().isLocked();\n\t}\n}\n","import { BaseEntity, BaseListener } from \"../BaseEntity\";\nimport * as _ from \"lodash\";\nimport { BaseEvent } from \"../BaseEntity\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport interface BaseModelListener extends BaseListener {\n\tselectionChanged?(event: BaseEvent<BaseModel> & { isSelected: boolean }): void;\n\n\tentityRemoved?(event: BaseEvent<BaseModel>): void;\n}\n\n/**\n * @author Dylan Vorster\n */\nexport class BaseModel<\n\tX extends BaseEntity = BaseEntity,\n\tT extends BaseModelListener = BaseModelListener\n> extends BaseEntity<T> {\n\ttype: string;\n\tselected: boolean;\n\tparent: X;\n\n\tconstructor(type?: string, id?: string) {\n\t\tsuper(id);\n\t\tthis.type = type;\n\t\tthis.selected = false;\n\t}\n\n\tpublic getParent(): X {\n\t\treturn this.parent;\n\t}\n\n\tpublic setParent(parent: X) {\n\t\tthis.parent = parent;\n\t}\n\n\tpublic getSelectedEntities(): BaseModel<any, T>[] {\n\t\tif (this.isSelected()) {\n\t\t\treturn [this];\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic deSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.type = ob.type;\n\t\tthis.selected = ob.selected;\n\t}\n\n\tpublic serialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\ttype: this.type,\n\t\t\tselected: this.selected\n\t\t});\n\t}\n\n\tpublic getType(): string {\n\t\treturn this.type;\n\t}\n\n\tpublic getID(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic isSelected(): boolean {\n\t\treturn this.selected;\n\t}\n\n\tpublic setSelected(selected: boolean = true) {\n\t\tthis.selected = selected;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.selectionChanged) {\n\t\t\t\tlistener.selectionChanged({ ...event, isSelected: selected });\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic remove() {\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.entityRemoved) {\n\t\t\t\tlistener.entityRemoved(event);\n\t\t\t}\n\t\t});\n\t}\n}\n","// tslint:disable no-bitwise\nimport closest = require(\"closest\");\nimport { PointModel } from \"./models/PointModel\";\nimport { ROUTING_SCALING_FACTOR } from \"./routing/PathFinding\";\nimport * as Path from \"paths-js/path\";\n/**\n * @author Dylan Vorster\n */\nexport class Toolkit {\n\tstatic TESTING: boolean = false;\n\tstatic TESTING_UID = 0;\n\n\t/**\n\t * Generats a unique ID (thanks Stack overflow :3)\n\t * @returns {String}\n\t */\n\tpublic static UID(): string {\n\t\tif (Toolkit.TESTING) {\n\t\t\tToolkit.TESTING_UID++;\n\t\t\treturn \"\" + Toolkit.TESTING_UID;\n\t\t}\n\t\treturn \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, c => {\n\t\t\tconst r = (Math.random() * 16) | 0;\n\t\t\tconst v = c === \"x\" ? r : (r & 0x3) | 0x8;\n\t\t\treturn v.toString(16);\n\t\t});\n\t}\n\n\t/**\n\t * Finds the closest element as a polyfill\n\t *\n\t * @param  {Element} element  [description]\n\t * @param  {string}  selector [description]\n\t */\n\tpublic static closest(element: Element, selector: string) {\n\t\tif (document.body.closest) {\n\t\t\treturn element.closest(selector);\n\t\t}\n\t\treturn closest(element, selector);\n\t}\n\n\tpublic static generateLinePath(firstPoint: PointModel, lastPoint: PointModel): string {\n\t\treturn `M${firstPoint.x},${firstPoint.y} L ${lastPoint.x},${lastPoint.y}`;\n\t}\n\n\tpublic static generateCurvePath(firstPoint: PointModel, lastPoint: PointModel, curvy: number = 0): string {\n\t\tvar isHorizontal = Math.abs(firstPoint.x - lastPoint.x) > Math.abs(firstPoint.y - lastPoint.y);\n\t\tvar curvyX = isHorizontal ? curvy : 0;\n\t\tvar curvyY = isHorizontal ? 0 : curvy;\n\n\t\treturn `M${firstPoint.x},${firstPoint.y} C ${firstPoint.x + curvyX},${firstPoint.y + curvyY}\n    ${lastPoint.x - curvyX},${lastPoint.y - curvyY} ${lastPoint.x},${lastPoint.y}`;\n\t}\n\n\tpublic static generateDynamicPath(pathCoords: number[][]) {\n\t\tlet path = Path();\n\t\tpath = path.moveto(pathCoords[0][0] * ROUTING_SCALING_FACTOR, pathCoords[0][1] * ROUTING_SCALING_FACTOR);\n\t\tpathCoords.slice(1).forEach(coords => {\n\t\t\tpath = path.lineto(coords[0] * ROUTING_SCALING_FACTOR, coords[1] * ROUTING_SCALING_FACTOR);\n\t\t});\n\t\treturn path.print();\n\t}\n}\n","import { BaseModel } from \"../models/BaseModel\";\n\nexport abstract class AbstractFactory<T extends BaseModel> {\n\ttype: string;\n\n\tconstructor(name: string) {\n\t\tthis.type = name;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n\n\tabstract getNewInstance(initialConfig?: any): T;\n}\n","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { PortModel } from \"./PortModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { DiagramModel } from \"./DiagramModel\";\n\nexport class NodeModel extends BaseModel<DiagramModel, BaseModelListener> {\n\tx: number;\n\ty: number;\n\textras: any;\n\tports: { [s: string]: PortModel };\n\n\t// calculated post rendering so routing can be done correctly\n\twidth: number;\n\theight: number;\n\n\tconstructor(nodeType: string = \"default\", id?: string) {\n\t\tsuper(nodeType, id);\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.extras = {};\n\t\tthis.ports = {};\n\t}\n\n\tsetPosition(x, y) {\n\t\t//store position\n\t\tlet oldX = this.x;\n\t\tlet oldY = this.y;\n\t\t_.forEach(this.ports, port => {\n\t\t\t_.forEach(port.getLinks(), link => {\n\t\t\t\tlet point = link.getPointForPort(port);\n\t\t\t\tpoint.x = point.x + x - oldX;\n\t\t\t\tpoint.y = point.y + y - oldY;\n\t\t\t});\n\t\t});\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tgetSelectedEntities() {\n\t\tlet entities = super.getSelectedEntities();\n\n\t\t// add the points of each link that are selected here\n\t\tif (this.isSelected()) {\n\t\t\t_.forEach(this.ports, port => {\n\t\t\t\tentities = entities.concat(\n\t\t\t\t\t_.map(port.getLinks(), link => {\n\t\t\t\t\t\treturn link.getPointForPort(port);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\treturn entities;\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.x = ob.x;\n\t\tthis.y = ob.y;\n\t\tthis.extras = ob.extras;\n\n\t\t//deserialize ports\n\t\t_.forEach(ob.ports, (port: any) => {\n\t\t\tlet portOb = engine.getPortFactory(port.type).getNewInstance();\n\t\t\tportOb.deSerialize(port, engine);\n\t\t\tthis.addPort(portOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tx: this.x,\n\t\t\ty: this.y,\n\t\t\textras: this.extras,\n\t\t\tports: _.map(this.ports, port => {\n\t\t\t\treturn port.serialize();\n\t\t\t})\n\t\t});\n\t}\n\n\tdoClone(lookupTable = {}, clone) {\n\t\t// also clone the ports\n\t\tclone.ports = {};\n\t\t_.forEach(this.ports, port => {\n\t\t\tclone.addPort(port.clone(lookupTable));\n\t\t});\n\t}\n\n\tremove() {\n\t\tsuper.remove();\n\t\t_.forEach(this.ports, port => {\n\t\t\t_.forEach(port.getLinks(), link => {\n\t\t\t\tlink.remove();\n\t\t\t});\n\t\t});\n\t}\n\n\tgetPortFromID(id): PortModel | null {\n\t\tfor (var i in this.ports) {\n\t\t\tif (this.ports[i].id === id) {\n\t\t\t\treturn this.ports[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetPort(name: string): PortModel | null {\n\t\treturn this.ports[name];\n\t}\n\n\tgetPorts(): { [s: string]: PortModel } {\n\t\treturn this.ports;\n\t}\n\n\tremovePort(port: PortModel) {\n\t\t//clear the parent node reference\n\t\tif (this.ports[port.name]) {\n\t\t\tthis.ports[port.name].setParent(null);\n\t\t\tdelete this.ports[port.name];\n\t\t}\n\t}\n\n\taddPort<T extends PortModel>(port: T): T {\n\t\tport.setParent(this);\n\t\tthis.ports[port.name] = port;\n\t\treturn port;\n\t}\n\n\tupdateDimensions({ width, height }: { width: number; height: number }) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n}\n","/**\r\n * @namespace PF.Heuristic\r\n * @description A collection of heuristic functions.\r\n */\r\nmodule.exports = {\r\n\r\n  /**\r\n   * Manhattan distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} dx + dy\r\n   */\r\n  manhattan: function(dx, dy) {\r\n      return dx + dy;\r\n  },\r\n\r\n  /**\r\n   * Euclidean distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy)\r\n   */\r\n  euclidean: function(dx, dy) {\r\n      return Math.sqrt(dx * dx + dy * dy);\r\n  },\r\n\r\n  /**\r\n   * Octile distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy) for grids\r\n   */\r\n  octile: function(dx, dy) {\r\n      var F = Math.SQRT2 - 1;\r\n      return (dx < dy) ? F * dx + dy : F * dy + dx;\r\n  },\r\n\r\n  /**\r\n   * Chebyshev distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} max(dx, dy)\r\n   */\r\n  chebyshev: function(dx, dy) {\r\n      return Math.max(dx, dy);\r\n  }\r\n\r\n};\r\n","export class BaseAction {\n\tmouseX: number;\n\tmouseY: number;\n\tms: number;\n\n\tconstructor(mouseX: number, mouseY: number) {\n\t\tthis.mouseX = mouseX;\n\t\tthis.mouseY = mouseY;\n\t\tthis.ms = new Date().getTime();\n\t}\n}\n","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { NodeModel } from \"./NodeModel\";\nimport { LinkModel } from \"./LinkModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport class PortModel extends BaseModel<NodeModel, BaseModelListener> {\n\tname: string;\n\tlinks: { [id: string]: LinkModel };\n\tmaximumLinks: number;\n\n\t// calculated post rendering so routing can be done correctly\n\tx: number;\n\ty: number;\n\twidth: number;\n\theight: number;\n\n\tconstructor(name: string, type?: string, id?: string, maximumLinks?: number) {\n\t\tsuper(type, id);\n\t\tthis.name = name;\n\t\tthis.links = {};\n\t\tthis.maximumLinks = maximumLinks;\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.name = ob.name;\n\t\tthis.maximumLinks = ob.maximumLinks;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tname: this.name,\n\t\t\tparentNode: this.parent.id,\n\t\t\tlinks: _.map(this.links, link => {\n\t\t\t\treturn link.id;\n\t\t\t}),\n\t\t\tmaximumLinks: this.maximumLinks\n\t\t});\n\t}\n\n\tdoClone(lookupTable = {}, clone) {\n\t\tclone.links = {};\n\t\tclone.parentNode = this.getParent().clone(lookupTable);\n\t}\n\n\tgetNode(): NodeModel {\n\t\treturn this.getParent();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tgetMaximumLinks(): number {\n\t\treturn this.maximumLinks;\n\t}\n\n\tsetMaximumLinks(maximumLinks: number) {\n\t\tthis.maximumLinks = maximumLinks;\n\t}\n\n\tremoveLink(link: LinkModel) {\n\t\tdelete this.links[link.getID()];\n\t}\n\n\taddLink(link: LinkModel) {\n\t\tthis.links[link.getID()] = link;\n\t}\n\n\tgetLinks(): { [id: string]: LinkModel } {\n\t\treturn this.links;\n\t}\n\n\tpublic createLinkModel(): LinkModel | null {\n\t\tif (_.isFinite(this.maximumLinks)) {\n\t\t\tvar numberOfLinks: number = _.size(this.links);\n\t\t\tif (this.maximumLinks === 1 && numberOfLinks >= 1) {\n\t\t\t\treturn _.values(this.links)[0];\n\t\t\t} else if (numberOfLinks >= this.maximumLinks) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tupdateCoords({ x, y, width, height }: { x: number; y: number; width: number; height: number }) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\treturn true;\n\t}\n\n\tisLocked() {\n\t\treturn super.isLocked() || this.getParent().isLocked();\n\t}\n}\n","import { Toolkit } from \"./Toolkit\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"./DiagramEngine\";\n\n/**\n * @author Dylan Vorster\n */\nexport interface BaseEvent<T extends BaseEntity = any> {\n\tentity: BaseEntity<BaseListener>;\n\tstopPropagation: () => any;\n\tfiring: boolean;\n\tid: string;\n}\n\nexport interface BaseListener<T extends BaseEntity = any> {\n\tlockChanged?(event: BaseEvent<T> & { locked: boolean }): void;\n}\n\nexport type BaseEntityType = \"node\" | \"link\" | \"port\" | \"point\";\n\nexport class BaseEntity<T extends BaseListener = BaseListener> {\n\tpublic listeners: { [s: string]: T };\n\tpublic id: string;\n\tpublic locked: boolean;\n\n\tconstructor(id?: string) {\n\t\tthis.listeners = {};\n\t\tthis.id = id || Toolkit.UID();\n\t\tthis.locked = false;\n\t}\n\n\tgetID() {\n\t\treturn this.id;\n\t}\n\n\tdoClone(lookupTable: { [s: string]: any } = {}, clone: any) {\n\t\t/*noop*/\n\t}\n\n\tclone(lookupTable: { [s: string]: any } = {}) {\n\t\t// try and use an existing clone first\n\t\tif (lookupTable[this.id]) {\n\t\t\treturn lookupTable[this.id];\n\t\t}\n\t\tlet clone = _.clone(this);\n\t\tclone.id = Toolkit.UID();\n\t\tclone.clearListeners();\n\t\tlookupTable[this.id] = clone;\n\n\t\tthis.doClone(lookupTable, clone);\n\t\treturn clone;\n\t}\n\n\tclearListeners() {\n\t\tthis.listeners = {};\n\t}\n\n\tpublic deSerialize(data: { [s: string]: any }, engine: DiagramEngine) {\n\t\tthis.id = data.id;\n\t}\n\n\tpublic serialize() {\n\t\treturn {\n\t\t\tid: this.id\n\t\t};\n\t}\n\n\tpublic iterateListeners(cb: (t: T, event: BaseEvent) => any) {\n\t\tlet event: BaseEvent = {\n\t\t\tid: Toolkit.UID(),\n\t\t\tfiring: true,\n\t\t\tentity: this,\n\t\t\tstopPropagation: () => {\n\t\t\t\tevent.firing = false;\n\t\t\t}\n\t\t};\n\n\t\tfor (var i in this.listeners) {\n\t\t\tif (this.listeners.hasOwnProperty(i)) {\n\t\t\t\t// propagation stopped\n\t\t\t\tif (!event.firing) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcb(this.listeners[i], event);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic removeListener(listener: string) {\n\t\tif (this.listeners[listener]) {\n\t\t\tdelete this.listeners[listener];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic addListener(listener: T): string {\n\t\tvar uid = Toolkit.UID();\n\t\tthis.listeners[uid] = listener;\n\t\treturn uid;\n\t}\n\n\tpublic isLocked(): boolean {\n\t\treturn this.locked;\n\t}\n\n\tpublic setLocked(locked: boolean = true) {\n\t\tthis.locked = locked;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.lockChanged) {\n\t\t\t\tlistener.lockChanged({ ...event, locked: locked });\n\t\t\t}\n\t\t});\n\t}\n}\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Base class for the Jump Point Search algorithm\r\n * @param {object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction JumpPointFinderBase(opt) {\r\n    opt = opt || {};\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.trackJumpRecursion = opt.trackJumpRecursion || false;\r\n}\r\n\r\n/**\r\n * Find and return the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nJumpPointFinderBase.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = this.openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = this.startNode = grid.getNodeAt(startX, startY),\r\n        endNode = this.endNode = grid.getNodeAt(endX, endY), node;\r\n\r\n    this.grid = grid;\r\n\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        if (node === endNode) {\r\n            return Util.expandPath(Util.backtrace(endNode));\r\n        }\r\n\r\n        this._identifySuccessors(node);\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\n/**\r\n * Identify successors for the given node. Runs a jump point search in the\r\n * direction of each available neighbor, adding any points found to the open\r\n * list.\r\n * @protected\r\n */\r\nJumpPointFinderBase.prototype._identifySuccessors = function(node) {\r\n    var grid = this.grid,\r\n        heuristic = this.heuristic,\r\n        openList = this.openList,\r\n        endX = this.endNode.x,\r\n        endY = this.endNode.y,\r\n        neighbors, neighbor,\r\n        jumpPoint, i, l,\r\n        x = node.x, y = node.y,\r\n        jx, jy, dx, dy, d, ng, jumpNode,\r\n        abs = Math.abs, max = Math.max;\r\n\r\n    neighbors = this._findNeighbors(node);\r\n    for(i = 0, l = neighbors.length; i < l; ++i) {\r\n        neighbor = neighbors[i];\r\n        jumpPoint = this._jump(neighbor[0], neighbor[1], x, y);\r\n        if (jumpPoint) {\r\n\r\n            jx = jumpPoint[0];\r\n            jy = jumpPoint[1];\r\n            jumpNode = grid.getNodeAt(jx, jy);\r\n\r\n            if (jumpNode.closed) {\r\n                continue;\r\n            }\r\n\r\n            // include distance, as parent may not be immediately adjacent:\r\n            d = Heuristic.octile(abs(jx - x), abs(jy - y));\r\n            ng = node.g + d; // next `g` value\r\n\r\n            if (!jumpNode.opened || ng < jumpNode.g) {\r\n                jumpNode.g = ng;\r\n                jumpNode.h = jumpNode.h || heuristic(abs(jx - endX), abs(jy - endY));\r\n                jumpNode.f = jumpNode.g + jumpNode.h;\r\n                jumpNode.parent = node;\r\n\r\n                if (!jumpNode.opened) {\r\n                    openList.push(jumpNode);\r\n                    jumpNode.opened = true;\r\n                } else {\r\n                    openList.updateItem(jumpNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = JumpPointFinderBase;\r\n","module.exports = require('./lib/heap');\n","import * as PF from \"pathfinding\";\nimport { DiagramEngine } from \"../main\";\n\n/*\nit can be very expensive to calculate routes when every single pixel on the canvas\nis individually represented. Using the factor below, we combine values in order\nto achieve the best trade-off between accuracy and performance.\n*/\nexport const ROUTING_SCALING_FACTOR = 5;\n\nconst pathFinderInstance = new PF.JumpPointFinder({\n\theuristic: PF.Heuristic.manhattan,\n\tdiagonalMovement: PF.DiagonalMovement.Never\n});\n\nexport default class PathFinding {\n\tinstance: any;\n\tdiagramEngine: DiagramEngine;\n\n\tconstructor(diagramEngine: DiagramEngine) {\n\t\tthis.instance = pathFinderInstance;\n\t\tthis.diagramEngine = diagramEngine;\n\t}\n\n\t/**\n\t * Taking as argument a fully unblocked walking matrix, this method\n\t * finds a direct path from point A to B.\n\t */\n\tcalculateDirectPath(\n\t\tfrom: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t},\n\t\tto: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t}\n\t): number[][] {\n\t\tconst matrix = this.diagramEngine.getCanvasMatrix();\n\t\tconst grid = new PF.Grid(matrix);\n\n\t\treturn pathFinderInstance.findPath(\n\t\t\tthis.diagramEngine.translateRoutingX(Math.floor(from.x / ROUTING_SCALING_FACTOR)),\n\t\t\tthis.diagramEngine.translateRoutingY(Math.floor(from.y / ROUTING_SCALING_FACTOR)),\n\t\t\tthis.diagramEngine.translateRoutingX(Math.floor(to.x / ROUTING_SCALING_FACTOR)),\n\t\t\tthis.diagramEngine.translateRoutingY(Math.floor(to.y / ROUTING_SCALING_FACTOR)),\n\t\t\tgrid\n\t\t);\n\t}\n\n\t/**\n\t * Using @link{#calculateDirectPath}'s result as input, we here\n\t * determine the first walkable point found in the matrix that includes\n\t * blocked paths.\n\t */\n\tcalculateLinkStartEndCoords(\n\t\tmatrix: number[][],\n\t\tpath: number[][]\n\t): {\n\t\tstart: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t};\n\t\tend: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t};\n\t\tpathToStart: number[][];\n\t\tpathToEnd: number[][];\n\t} {\n\t\tconst startIndex = path.findIndex(point => matrix[point[1]][point[0]] === 0);\n\t\tconst endIndex =\n\t\t\tpath.length -\n\t\t\t1 -\n\t\t\tpath\n\t\t\t\t.slice()\n\t\t\t\t.reverse()\n\t\t\t\t.findIndex(point => matrix[point[1]][point[0]] === 0);\n\n\t\t// are we trying to create a path exclusively through blocked areas?\n\t\t// if so, let's fallback to the linear routing\n\t\tif (startIndex === -1 || endIndex === -1) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst pathToStart = path.slice(0, startIndex);\n\t\tconst pathToEnd = path.slice(endIndex);\n\n\t\treturn {\n\t\t\tstart: {\n\t\t\t\tx: path[startIndex][0],\n\t\t\t\ty: path[startIndex][1]\n\t\t\t},\n\t\t\tend: {\n\t\t\t\tx: path[endIndex][0],\n\t\t\t\ty: path[endIndex][1]\n\t\t\t},\n\t\t\tpathToStart,\n\t\t\tpathToEnd\n\t\t};\n\t}\n\n\t/**\n\t * Puts everything together: merges the paths from/to the centre of the ports,\n\t * with the path calculated around other elements.\n\t */\n\tcalculateDynamicPath(\n\t\troutingMatrix: number[][],\n\t\tstart: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t},\n\t\tend: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t},\n\t\tpathToStart: number[][],\n\t\tpathToEnd: number[][]\n\t) {\n\t\t// generate the path based on the matrix with obstacles\n\t\tconst grid = new PF.Grid(routingMatrix);\n\t\tconst dynamicPath = pathFinderInstance.findPath(start.x, start.y, end.x, end.y, grid);\n\n\t\t// aggregate everything to have the calculated path ready for rendering\n\t\tconst pathCoords = pathToStart\n\t\t\t.concat(dynamicPath, pathToEnd)\n\t\t\t.map(coords => [\n\t\t\t\tthis.diagramEngine.translateRoutingX(coords[0], true),\n\t\t\t\tthis.diagramEngine.translateRoutingY(coords[1], true)\n\t\t\t]);\n\t\treturn PF.Util.compressPath(pathCoords);\n\t}\n}\n","import { BaseModel } from \"./BaseModel\";\nimport { LinkModel } from \"./LinkModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport class LabelModel extends BaseModel<LinkModel> {\n\toffsetX: number;\n\toffsetY: number;\n\n\tconstructor(type?: string, id?: string) {\n\t\tsuper(type, id);\n\t\tthis.offsetX = 0;\n\t\tthis.offsetY = 0;\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.offsetX = ob.offsetX;\n\t\tthis.offsetY = ob.offsetY;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\toffsetX: this.offsetX,\n\t\t\toffsetY: this.offsetY\n\t\t});\n\t}\n}\n","import { LabelModel } from \"../../models/LabelModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\n\nexport class DefaultLabelModel extends LabelModel {\n\tlabel: string;\n\n\tconstructor() {\n\t\tsuper(\"default\");\n\t\tthis.offsetY = -23;\n\t}\n\n\tsetLabel(label: string) {\n\t\tthis.label = label;\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.label = ob.label;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tlabel: this.label\n\t\t});\n\t}\n}\n","/**\n * @author Dylan Vorster\n */\nimport { LinkModel, LinkModelListener } from \"../../models/LinkModel\";\nimport { BaseEvent } from \"../../BaseEntity\";\nimport * as _ from \"lodash\";\nimport { PointModel } from \"../../models/PointModel\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { DefaultLabelModel } from \"./DefaultLabelModel\";\nimport { LabelModel } from \"../../models/LabelModel\";\n\nexport interface DefaultLinkModelListener extends LinkModelListener {\n\tcolorChanged?(event: BaseEvent<DefaultLinkModel> & { color: null | string }): void;\n\n\twidthChanged?(event: BaseEvent<DefaultLinkModel> & { width: 0 | number }): void;\n}\n\nexport class DefaultLinkModel extends LinkModel<DefaultLinkModelListener> {\n\twidth: number;\n\tcolor: string;\n\tcurvyness: number;\n\n\tconstructor(type: string = \"default\") {\n\t\tsuper(type);\n\t\tthis.color = \"rgba(255,255,255,0.5)\";\n\t\tthis.width = 3;\n\t\tthis.curvyness = 50;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\twidth: this.width,\n\t\t\tcolor: this.color,\n\t\t\tcurvyness: this.curvyness\n\t\t});\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.color = ob.color;\n\t\tthis.width = ob.width;\n\t\tthis.curvyness = ob.curvyness;\n\t}\n\n\taddLabel(label: LabelModel | string) {\n\t\tif (label instanceof LabelModel) {\n\t\t\treturn super.addLabel(label);\n\t\t}\n\t\tlet labelOb = new DefaultLabelModel();\n\t\tlabelOb.setLabel(label);\n\t\treturn super.addLabel(labelOb);\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.width = width;\n\t\tthis.iterateListeners((listener: DefaultLinkModelListener, event: BaseEvent) => {\n\t\t\tif (listener.widthChanged) {\n\t\t\t\tlistener.widthChanged({ ...event, width: width });\n\t\t\t}\n\t\t});\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.color = color;\n\t\tthis.iterateListeners((listener: DefaultLinkModelListener, event: BaseEvent) => {\n\t\t\tif (listener.colorChanged) {\n\t\t\t\tlistener.colorChanged({ ...event, color: color });\n\t\t\t}\n\t\t});\n\t}\n}\n","import * as _ from \"lodash\";\nimport { PortModel } from \"../../models/PortModel\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { DefaultLinkModel } from \"./DefaultLinkModel\";\nimport { LinkModel } from \"../../models/LinkModel\";\n\nexport class DefaultPortModel extends PortModel {\n\tin: boolean;\n\tlabel: string;\n\tlinks: { [id: string]: DefaultLinkModel };\n\n\tconstructor(isInput: boolean, name: string, label: string = null, id?: string) {\n\t\tsuper(name, \"default\", id);\n\t\tthis.in = isInput;\n\t\tthis.label = label || name;\n\t}\n\n\tdeSerialize(object, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.in = object.in;\n\t\tthis.label = object.label;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tin: this.in,\n\t\t\tlabel: this.label\n\t\t});\n\t}\n\n\tlink(port: PortModel): LinkModel {\n\t\tlet link = this.createLinkModel();\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(port);\n\t\treturn link;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\tif (port instanceof DefaultPortModel) {\n\t\t\treturn this.in !== port.in;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcreateLinkModel(): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\treturn link || new DefaultLinkModel();\n\t}\n}\n","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { PortModel } from \"./PortModel\";\nimport { PointModel } from \"./PointModel\";\nimport * as _ from \"lodash\";\nimport { BaseEvent } from \"../BaseEntity\";\nimport { LabelModel } from \"./LabelModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { DiagramModel } from \"./DiagramModel\";\n\nexport interface LinkModelListener extends BaseModelListener {\n\tsourcePortChanged?(event: BaseEvent<LinkModel> & { port: null | PortModel }): void;\n\n\ttargetPortChanged?(event: BaseEvent<LinkModel> & { port: null | PortModel }): void;\n}\n\nexport class LinkModel<T extends LinkModelListener = LinkModelListener> extends BaseModel<DiagramModel, T> {\n\tsourcePort: PortModel | null;\n\ttargetPort: PortModel | null;\n\tlabels: LabelModel[];\n\tpoints: PointModel[];\n\textras: {};\n\n\tconstructor(linkType: string = \"default\", id?: string) {\n\t\tsuper(linkType, id);\n\t\tthis.points = [new PointModel(this, { x: 0, y: 0 }), new PointModel(this, { x: 0, y: 0 })];\n\t\tthis.extras = {};\n\t\tthis.sourcePort = null;\n\t\tthis.targetPort = null;\n\t\tthis.labels = [];\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.extras = ob.extras;\n\t\tthis.points = _.map(ob.points || [], (point: { x; y }) => {\n\t\t\tvar p = new PointModel(this, { x: point.x, y: point.y });\n\t\t\tp.deSerialize(point, engine);\n\t\t\treturn p;\n\t\t});\n\n\t\t//deserialize labels\n\t\t_.forEach(ob.labels || [], (label: any) => {\n\t\t\tlet labelOb = engine.getLabelFactory(label.type).getNewInstance();\n\t\t\tlabelOb.deSerialize(label, engine);\n\t\t\tthis.addLabel(labelOb);\n\t\t});\n\n\t\tif (ob.target) {\n\t\t\tthis.setTargetPort(\n\t\t\t\tthis.getParent()\n\t\t\t\t\t.getNode(ob.target)\n\t\t\t\t\t.getPortFromID(ob.targetPort)\n\t\t\t);\n\t\t}\n\n\t\tif (ob.source) {\n\t\t\tthis.setSourcePort(\n\t\t\t\tthis.getParent()\n\t\t\t\t\t.getNode(ob.source)\n\t\t\t\t\t.getPortFromID(ob.sourcePort)\n\t\t\t);\n\t\t}\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tsource: this.sourcePort ? this.sourcePort.getParent().id : null,\n\t\t\tsourcePort: this.sourcePort ? this.sourcePort.id : null,\n\t\t\ttarget: this.targetPort ? this.targetPort.getParent().id : null,\n\t\t\ttargetPort: this.targetPort ? this.targetPort.id : null,\n\t\t\tpoints: _.map(this.points, point => {\n\t\t\t\treturn point.serialize();\n\t\t\t}),\n\t\t\textras: this.extras,\n\t\t\tlabels: _.map(this.labels, label => {\n\t\t\t\treturn label.serialize();\n\t\t\t})\n\t\t});\n\t}\n\n\tdoClone(lookupTable = {}, clone) {\n\t\tclone.setPoints(\n\t\t\t_.map(this.getPoints(), (point: PointModel) => {\n\t\t\t\treturn point.clone(lookupTable);\n\t\t\t})\n\t\t);\n\t\tif (this.sourcePort) {\n\t\t\tclone.setSourcePort(this.sourcePort.clone(lookupTable));\n\t\t}\n\t\tif (this.targetPort) {\n\t\t\tclone.setTargetPort(this.targetPort.clone(lookupTable));\n\t\t}\n\t}\n\n\tremove() {\n\t\tif (this.sourcePort) {\n\t\t\tthis.sourcePort.removeLink(this);\n\t\t}\n\t\tif (this.targetPort) {\n\t\t\tthis.targetPort.removeLink(this);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\tisLastPoint(point: PointModel) {\n\t\tvar index = this.getPointIndex(point);\n\t\treturn index === this.points.length - 1;\n\t}\n\n\tgetPointIndex(point: PointModel) {\n\t\treturn this.points.indexOf(point);\n\t}\n\n\tgetPointModel(id: string): PointModel | null {\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tif (this.points[i].id === id) {\n\t\t\t\treturn this.points[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetPortForPoint(point: PointModel): PortModel {\n\t\tif (this.sourcePort !== null && this.getFirstPoint().getID() === point.getID()) {\n\t\t\treturn this.sourcePort;\n\t\t}\n\t\tif (this.targetPort !== null && this.getLastPoint().getID() === point.getID()) {\n\t\t\treturn this.targetPort;\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetPointForPort(port: PortModel): PointModel {\n\t\tif (this.sourcePort !== null && this.sourcePort.getID() === port.getID()) {\n\t\t\treturn this.getFirstPoint();\n\t\t}\n\t\tif (this.targetPort !== null && this.targetPort.getID() === port.getID()) {\n\t\t\treturn this.getLastPoint();\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetFirstPoint(): PointModel {\n\t\treturn this.points[0];\n\t}\n\n\tgetLastPoint(): PointModel {\n\t\treturn this.points[this.points.length - 1];\n\t}\n\n\tsetSourcePort(port: PortModel) {\n\t\tif (port !== null) {\n\t\t\tport.addLink(this);\n\t\t}\n\t\tif (this.sourcePort !== null) {\n\t\t\tthis.sourcePort.removeLink(this);\n\t\t}\n\t\tthis.sourcePort = port;\n\t\tthis.iterateListeners((listener: LinkModelListener, event) => {\n\t\t\tif (listener.sourcePortChanged) {\n\t\t\t\tlistener.sourcePortChanged({ ...event, port: port });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetSourcePort(): PortModel {\n\t\treturn this.sourcePort;\n\t}\n\n\tgetTargetPort(): PortModel {\n\t\treturn this.targetPort;\n\t}\n\n\tsetTargetPort(port: PortModel) {\n\t\tif (port !== null) {\n\t\t\tport.addLink(this);\n\t\t}\n\t\tif (this.targetPort !== null) {\n\t\t\tthis.targetPort.removeLink(this);\n\t\t}\n\t\tthis.targetPort = port;\n\t\tthis.iterateListeners((listener: LinkModelListener, event) => {\n\t\t\tif (listener.targetPortChanged) {\n\t\t\t\tlistener.targetPortChanged({ ...event, port: port });\n\t\t\t}\n\t\t});\n\t}\n\n\tpoint(x: number, y: number): PointModel {\n\t\treturn this.addPoint(this.generatePoint(x, y));\n\t}\n\n\taddLabel(label: LabelModel) {\n\t\tlabel.setParent(this);\n\t\tthis.labels.push(label);\n\t}\n\n\tgetPoints(): PointModel[] {\n\t\treturn this.points;\n\t}\n\n\tsetPoints(points: PointModel[]) {\n\t\t_.forEach(points, point => {\n\t\t\tpoint.setParent(this);\n\t\t});\n\t\tthis.points = points;\n\t}\n\n\tremovePoint(pointModel: PointModel) {\n\t\tthis.points.splice(this.getPointIndex(pointModel), 1);\n\t}\n\n\tremovePointsBefore(pointModel: PointModel) {\n\t\tthis.points.splice(0, this.getPointIndex(pointModel));\n\t}\n\n\tremovePointsAfter(pointModel: PointModel) {\n\t\tthis.points.splice(this.getPointIndex(pointModel) + 1);\n\t}\n\n\tremoveMiddlePoints() {\n\t\tif (this.points.length > 2) {\n\t\t\tthis.points.splice(0, this.points.length - 2);\n\t\t}\n\t}\n\n\taddPoint<P extends PointModel>(pointModel: P, index = 1): P {\n\t\tpointModel.setParent(this);\n\t\tthis.points.splice(index, 0, pointModel);\n\t\treturn pointModel;\n\t}\n\n\tgeneratePoint(x: number = 0, y: number = 0): PointModel {\n\t\treturn new PointModel(this, { x: x, y: y });\n\t}\n}\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder.\r\n * based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction BiAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    //When diagonal movement is allowed the manhattan heuristic is not admissible\r\n    //It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var cmp = function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        },\r\n        startOpenList = new Heap(cmp),\r\n        endOpenList = new Heap(cmp),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng,\r\n        BY_START = 1, BY_END = 2;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    // and push it into the start open list\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n    startOpenList.push(startNode);\r\n    startNode.opened = BY_START;\r\n\r\n    // set the `g` and `f` value of the end node to be 0\r\n    // and push it into the open open list\r\n    endNode.g = 0;\r\n    endNode.f = 0;\r\n    endOpenList.push(endNode);\r\n    endNode.opened = BY_END;\r\n\r\n    // while both the open lists are not empty\r\n    while (!startOpenList.empty() && !endOpenList.empty()) {\r\n\r\n        // pop the position of start node which has the minimum `f` value.\r\n        node = startOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_END) {\r\n                return Util.biBacktrace(node, neighbor);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    startOpenList.push(neighbor);\r\n                    neighbor.opened = BY_START;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    startOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n\r\n\r\n        // pop the position of end node which has the minimum `f` value.\r\n        node = endOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_START) {\r\n                return Util.biBacktrace(neighbor, node);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - startX), abs(y - startY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    endOpenList.push(neighbor);\r\n                    neighbor.opened = BY_END;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    endOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiAStarFinder;\r\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder. Based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching \r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction AStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    //admissible. It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        // if reached the end position, construct the path and return it\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    openList.push(neighbor);\r\n                    neighbor.opened = true;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    openList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = AStarFinder;\r\n","/**\r\n * A node in grid. \r\n * This class holds some basic information about a node and custom \r\n * attributes may be added, depending on the algorithms' needs.\r\n * @constructor\r\n * @param {number} x - The x coordinate of the node on the grid.\r\n * @param {number} y - The y coordinate of the node on the grid.\r\n * @param {boolean} [walkable] - Whether this node is walkable.\r\n */\r\nfunction Node(x, y, walkable) {\r\n    /**\r\n     * The x coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.x = x;\r\n    /**\r\n     * The y coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.y = y;\r\n    /**\r\n     * Whether this node can be walked through.\r\n     * @type boolean\r\n     */\r\n    this.walkable = (walkable === undefined ? true : walkable);\r\n}\r\n\r\nmodule.exports = Node;\r\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { Toolkit } from \"../Toolkit\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface NodeProps extends BaseWidgetProps {\n\tnode: NodeModel;\n\tchildren?: any;\n\tdiagramEngine: DiagramEngine;\n}\n\nexport interface NodeState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class NodeWidget extends BaseWidget<NodeProps, NodeState> {\n\tconstructor(props: NodeProps) {\n\t\tsuper(\"srd-node\", props);\n\t\tthis.state = {};\n\t}\n\n\tshouldComponentUpdate() {\n\t\treturn this.props.diagramEngine.canEntityRepaint(this.props.node);\n\t}\n\n\tgetClassName() {\n\t\treturn \"node \" + super.getClassName() + (this.props.node.isSelected() ? this.bem(\"--selected\") : \"\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tdata-nodeid={this.props.node.id}\n\t\t\t\tstyle={{\n\t\t\t\t\ttop: this.props.node.y,\n\t\t\t\t\tleft: this.props.node.x\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport * as _ from \"lodash\";\nimport { NodeWidget } from \"../NodeWidget\";\nimport { NodeModel } from \"../../models/NodeModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../BaseWidget\";\n\nexport interface NodeLayerProps extends BaseWidgetProps {\n\tdiagramEngine: DiagramEngine;\n}\n\nexport interface NodeLayerState {}\n\nexport class NodeLayerWidget extends BaseWidget<NodeLayerProps, NodeLayerState> {\n\tconstructor(props: NodeLayerProps) {\n\t\tsuper(\"srd-node-layer\", props);\n\t\tthis.state = {};\n\t}\n\n\tupdateNodeDimensions = () => {\n\t\tif (!this.props.diagramEngine.nodesRendered) {\n\t\t\tconst diagramModel = this.props.diagramEngine.getDiagramModel();\n\t\t\t_.map(diagramModel.getNodes(), node => {\n\t\t\t\tnode.updateDimensions(this.props.diagramEngine.getNodeDimensions(node));\n\t\t\t});\n\t\t}\n\t};\n\n\tcomponentDidUpdate() {\n\t\tthis.updateNodeDimensions();\n\t\tthis.props.diagramEngine.nodesRendered = true;\n\t}\n\n\trender() {\n\t\tvar diagramModel = this.props.diagramEngine.getDiagramModel();\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform:\n\t\t\t\t\t\t\"translate(\" +\n\t\t\t\t\t\tdiagramModel.getOffsetX() +\n\t\t\t\t\t\t\"px,\" +\n\t\t\t\t\t\tdiagramModel.getOffsetY() +\n\t\t\t\t\t\t\"px) scale(\" +\n\t\t\t\t\t\tdiagramModel.getZoomLevel() / 100.0 +\n\t\t\t\t\t\t\")\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{_.map(diagramModel.getNodes(), (node: NodeModel) => {\n\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\tNodeWidget,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdiagramEngine: this.props.diagramEngine,\n\t\t\t\t\t\t\tkey: node.id,\n\t\t\t\t\t\t\tnode: node\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.props.diagramEngine.generateWidgetForNode(node)\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { LinkModel } from \"../models/LinkModel\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface LinkProps extends BaseWidgetProps {\n\tlink: LinkModel;\n\tdiagramEngine: DiagramEngine;\n\tchildren?: any;\n}\n\nexport interface LinkState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class LinkWidget extends BaseWidget<LinkProps, LinkState> {\n\tconstructor(props: LinkProps) {\n\t\tsuper(\"srd-link\", props);\n\t\tthis.state = {};\n\t}\n\n\tshouldComponentUpdate() {\n\t\treturn this.props.diagramEngine.canEntityRepaint(this.props.link);\n\t}\n\n\trender() {\n\t\treturn this.props.children;\n\t}\n}\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { LinkWidget } from \"../LinkWidget\";\nimport * as _ from \"lodash\";\nimport { PointModel } from \"../../models/PointModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../BaseWidget\";\n\nexport interface LinkLayerProps extends BaseWidgetProps {\n\tdiagramEngine: DiagramEngine;\n\tpointAdded: (point: PointModel, event: MouseEvent) => any;\n}\n\nexport interface LinkLayerState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class LinkLayerWidget extends BaseWidget<LinkLayerProps, LinkLayerState> {\n\tconstructor(props: LinkLayerProps) {\n\t\tsuper(\"srd-link-layer\", props);\n\t\tthis.state = {};\n\t}\n\n\trender() {\n\t\tvar diagramModel = this.props.diagramEngine.getDiagramModel();\n\t\treturn (\n\t\t\t<svg\n\t\t\t\t{...this.getProps()}\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform:\n\t\t\t\t\t\t\"translate(\" +\n\t\t\t\t\t\tdiagramModel.getOffsetX() +\n\t\t\t\t\t\t\"px,\" +\n\t\t\t\t\t\tdiagramModel.getOffsetY() +\n\t\t\t\t\t\t\"px) scale(\" +\n\t\t\t\t\t\tdiagramModel.getZoomLevel() / 100.0 +\n\t\t\t\t\t\t\")\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{//only perform these actions when we have a diagram\n\t\t\t\tthis.props.diagramEngine.canvas &&\n\t\t\t\t\t_.map(diagramModel.getLinks(), link => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.props.diagramEngine.nodesRendered &&\n\t\t\t\t\t\t\t!this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (link.sourcePort !== null) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst portCenter = this.props.diagramEngine.getPortCenter(link.sourcePort);\n\t\t\t\t\t\t\t\t\tlink.points[0].updateLocation(portCenter);\n\n\t\t\t\t\t\t\t\t\tconst portCoords = this.props.diagramEngine.getPortCoords(link.sourcePort);\n\t\t\t\t\t\t\t\t\tlink.sourcePort.updateCoords(portCoords);\n\n\t\t\t\t\t\t\t\t\tthis.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n\t\t\t\t\t\t\t\t} catch (ignore) {\n\t\t\t\t\t\t\t\t\t/*noop*/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (link.targetPort !== null) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst portCenter = this.props.diagramEngine.getPortCenter(link.targetPort);\n\t\t\t\t\t\t\t\t\t_.last(link.points).updateLocation(portCenter);\n\n\t\t\t\t\t\t\t\t\tconst portCoords = this.props.diagramEngine.getPortCoords(link.targetPort);\n\t\t\t\t\t\t\t\t\tlink.targetPort.updateCoords(portCoords);\n\n\t\t\t\t\t\t\t\t\tthis.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n\t\t\t\t\t\t\t\t} catch (ignore) {\n\t\t\t\t\t\t\t\t\t/*noop*/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//generate links\n\t\t\t\t\t\tvar generatedLink = this.props.diagramEngine.generateWidgetForLink(link);\n\t\t\t\t\t\tif (!generatedLink) {\n\t\t\t\t\t\t\tthrow new Error(`no link generated for type: ${link.getType()}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<LinkWidget key={link.getID()} link={link} diagramEngine={this.props.diagramEngine}>\n\t\t\t\t\t\t\t\t{React.cloneElement(generatedLink, {\n\t\t\t\t\t\t\t\t\tpointAdded: this.props.pointAdded\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</LinkWidget>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</svg>\n\t\t);\n\t}\n}\n","import { BaseAction } from \"./BaseAction\";\nimport { DiagramModel } from \"../models/DiagramModel\";\n\nexport class SelectingAction extends BaseAction {\n\tmouseX2: number;\n\tmouseY2: number;\n\n\tconstructor(mouseX: number, mouseY: number) {\n\t\tsuper(mouseX, mouseY);\n\t\tthis.mouseX2 = mouseX;\n\t\tthis.mouseY2 = mouseY;\n\t}\n\n\tgetBoxDimensions() {\n\t\treturn {\n\t\t\tleft: this.mouseX2 > this.mouseX ? this.mouseX : this.mouseX2,\n\t\t\ttop: this.mouseY2 > this.mouseY ? this.mouseY : this.mouseY2,\n\t\t\twidth: Math.abs(this.mouseX2 - this.mouseX),\n\t\t\theight: Math.abs(this.mouseY2 - this.mouseY),\n\t\t\tright: this.mouseX2 < this.mouseX ? this.mouseX : this.mouseX2,\n\t\t\tbottom: this.mouseY2 < this.mouseY ? this.mouseY : this.mouseY2\n\t\t};\n\t}\n\n\tcontainsElement(x: number, y: number, diagramModel: DiagramModel): boolean {\n\t\tvar z = diagramModel.getZoomLevel() / 100.0;\n\t\tlet dimensions = this.getBoxDimensions();\n\n\t\treturn (\n\t\t\tx * z + diagramModel.getOffsetX() > dimensions.left &&\n\t\t\tx * z + diagramModel.getOffsetX() < dimensions.right &&\n\t\t\ty * z + diagramModel.getOffsetY() > dimensions.top &&\n\t\t\ty * z + diagramModel.getOffsetY() < dimensions.bottom\n\t\t);\n\t}\n}\n","import { BaseAction } from \"./BaseAction\";\nimport { SelectionModel } from \"../models/SelectionModel\";\nimport { PointModel } from \"../models/PointModel\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport class MoveItemsAction extends BaseAction {\n\tselectionModels: SelectionModel[];\n\tmoved: boolean;\n\n\tconstructor(mouseX: number, mouseY: number, diagramEngine: DiagramEngine) {\n\t\tsuper(mouseX, mouseY);\n\t\tthis.moved = false;\n\t\tdiagramEngine.enableRepaintEntities(diagramEngine.getDiagramModel().getSelectedItems());\n\t\tvar selectedItems = diagramEngine.getDiagramModel().getSelectedItems();\n\n\t\t//dont allow items which are locked to move\n\t\tselectedItems = selectedItems.filter(item => {\n\t\t\treturn !diagramEngine.isModelLocked(item);\n\t\t});\n\n\t\tthis.selectionModels = selectedItems.map((item: PointModel | NodeModel) => {\n\t\t\treturn {\n\t\t\t\tmodel: item,\n\t\t\t\tinitialX: item.x,\n\t\t\t\tinitialY: item.y\n\t\t\t};\n\t\t});\n\t}\n}\n","import { BaseAction } from \"./BaseAction\";\nimport { DiagramModel } from \"../models/DiagramModel\";\n\nexport class MoveCanvasAction extends BaseAction {\n\tinitialOffsetX: number;\n\tinitialOffsetY: number;\n\n\tconstructor(mouseX: number, mouseY: number, diagramModel: DiagramModel) {\n\t\tsuper(mouseX, mouseY);\n\t\tthis.initialOffsetX = diagramModel.getOffsetX();\n\t\tthis.initialOffsetY = diagramModel.getOffsetY();\n\t}\n}\n","import { NodeModel } from \"../models/NodeModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractNodeFactory<T extends NodeModel = NodeModel> extends AbstractFactory<T> {\n\tabstract generateReactWidget(diagramEngine: DiagramEngine, node: T): JSX.Element;\n}\n","import * as React from \"react\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface PortProps extends BaseWidgetProps {\n\tname: string;\n\tnode: NodeModel;\n}\n\nexport interface PortState {\n\tselected: boolean;\n}\n\n/**\n * @author Dylan Vorster\n */\nexport class PortWidget extends BaseWidget<PortProps, PortState> {\n\tconstructor(props: PortProps) {\n\t\tsuper(\"srd-port\", props);\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\tgetClassName() {\n\t\treturn \"port \" + super.getClassName() + (this.state.selected ? this.bem(\"--selected\") : \"\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t}}\n\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t}}\n\t\t\t\tdata-name={this.props.name}\n\t\t\t\tdata-nodeid={this.props.node.getID()}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import * as React from \"react\";\nimport { DefaultPortModel } from \"../models/DefaultPortModel\";\nimport { PortWidget } from \"../../widgets/PortWidget\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultPortLabelProps extends BaseWidgetProps {\n\tmodel: DefaultPortModel;\n}\n\nexport interface DefaultPortLabelState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultPortLabel extends BaseWidget<DefaultPortLabelProps, DefaultPortLabelState> {\n\tconstructor(props) {\n\t\tsuper(\"srd-default-port\", props);\n\t}\n\n\tgetClassName() {\n\t\treturn super.getClassName() + (this.props.model.in ? this.bem(\"--in\") : this.bem(\"--out\"));\n\t}\n\n\trender() {\n\t\tvar port = <PortWidget node={this.props.model.getParent()} name={this.props.model.name} />;\n\t\tvar label = <div className=\"name\">{this.props.model.label}</div>;\n\n\t\treturn (\n\t\t\t<div {...this.getProps()}>\n\t\t\t\t{this.props.model.in ? port : label}\n\t\t\t\t{this.props.model.in ? label : port}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { DefaultNodeModel } from \"../models/DefaultNodeModel\";\nimport { DefaultPortLabel } from \"./DefaultPortLabelWidget\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultNodeProps extends BaseWidgetProps {\n\tnode: DefaultNodeModel;\n\tdiagramEngine: DiagramEngine;\n}\n\nexport interface DefaultNodeState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultNodeWidget extends BaseWidget<DefaultNodeProps, DefaultNodeState> {\n\tconstructor(props: DefaultNodeProps) {\n\t\tsuper(\"srd-default-node\", props);\n\t\tthis.state = {};\n\t}\n\n\tgeneratePort(port) {\n\t\treturn <DefaultPortLabel model={port} key={port.id} />;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div {...this.getProps()} style={{ background: this.props.node.color }}>\n\t\t\t\t<div className={this.bem(\"__title\")}>\n\t\t\t\t\t<div className={this.bem(\"__name\")}>{this.props.node.name}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={this.bem(\"__ports\")}>\n\t\t\t\t\t<div className={this.bem(\"__in\")}>\n\t\t\t\t\t\t{_.map(this.props.node.getInPorts(), this.generatePort.bind(this))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={this.bem(\"__out\")}>\n\t\t\t\t\t\t{_.map(this.props.node.getOutPorts(), this.generatePort.bind(this))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { LinkModel } from \"../models/LinkModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractLinkFactory<T extends LinkModel = LinkModel> extends AbstractFactory<T> {\n\tabstract generateReactWidget(diagramEngine: DiagramEngine, link: T): JSX.Element;\n}\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { PointModel } from \"../../models/PointModel\";\nimport { Toolkit } from \"../../Toolkit\";\nimport { DefaultLinkFactory } from \"../factories/DefaultLinkFactory\";\nimport { DefaultLinkModel } from \"../models/DefaultLinkModel\";\nimport PathFinding from \"../../routing/PathFinding\";\nimport * as _ from \"lodash\";\nimport { LabelModel } from \"../../models/LabelModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultLinkProps extends BaseWidgetProps {\n\tcolor?: string;\n\twidth?: number;\n\tsmooth?: boolean;\n\tlink: DefaultLinkModel;\n\tdiagramEngine: DiagramEngine;\n\tpointAdded?: (point: PointModel, event: MouseEvent) => any;\n}\n\nexport interface DefaultLinkState {\n\tselected: boolean;\n}\n\nexport class DefaultLinkWidget extends BaseWidget<DefaultLinkProps, DefaultLinkState> {\n\tpublic static defaultProps: DefaultLinkProps = {\n\t\tcolor: \"black\",\n\t\twidth: 3,\n\t\tlink: null,\n\t\tengine: null,\n\t\tsmooth: false,\n\t\tdiagramEngine: null\n\t};\n\n\t// DOM references to the label and paths (if label is given), used to calculate dynamic positioning\n\trefLabels: { [id: string]: HTMLElement };\n\trefPaths: SVGPathElement[];\n\n\tpathFinding: PathFinding; // only set when smart routing is active\n\n\tconstructor(props: DefaultLinkProps) {\n\t\tsuper(\"srd-default-link\", props);\n\n\t\tthis.refLabels = {};\n\t\tthis.refPaths = [];\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\n\t\tif (props.diagramEngine.isSmartRoutingEnabled()) {\n\t\t\tthis.pathFinding = new PathFinding(this.props.diagramEngine);\n\t\t}\n\t}\n\n\tcalculateAllLabelPosition() {\n\t\t_.forEach(this.props.link.labels, (label, index) => {\n\t\t\tthis.calculateLabelPosition(label, index + 1);\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.props.link.labels.length > 0) {\n\t\t\twindow.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.link.labels.length > 0) {\n\t\t\twindow.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n\t\t}\n\t}\n\n\taddPointToLink = (event: MouseEvent, index: number): void => {\n\t\tif (\n\t\t\t!event.shiftKey &&\n\t\t\t!this.props.diagramEngine.isModelLocked(this.props.link) &&\n\t\t\tthis.props.link.points.length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()\n\t\t) {\n\t\t\tconst point = new PointModel(this.props.link, this.props.diagramEngine.getRelativeMousePoint(event));\n\t\t\tpoint.setSelected(true);\n\t\t\tthis.forceUpdate();\n\t\t\tthis.props.link.addPoint(point, index);\n\t\t\tthis.props.pointAdded(point, event);\n\t\t}\n\t};\n\n\tgeneratePoint(pointIndex: number): JSX.Element {\n\t\tlet x = this.props.link.points[pointIndex].x;\n\t\tlet y = this.props.link.points[pointIndex].y;\n\n\t\treturn (\n\t\t\t<g key={\"point-\" + this.props.link.points[pointIndex].id}>\n\t\t\t\t<circle\n\t\t\t\t\tcx={x}\n\t\t\t\t\tcy={y}\n\t\t\t\t\tr={5}\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t\"point \" +\n\t\t\t\t\t\tthis.bem(\"__point\") +\n\t\t\t\t\t\t(this.props.link.points[pointIndex].isSelected() ? this.bem(\"--point-selected\") : \"\")\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<circle\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t\t}}\n\t\t\t\t\tdata-id={this.props.link.points[pointIndex].id}\n\t\t\t\t\tdata-linkid={this.props.link.id}\n\t\t\t\t\tcx={x}\n\t\t\t\t\tcy={y}\n\t\t\t\t\tr={15}\n\t\t\t\t\topacity={0}\n\t\t\t\t\tclassName={\"point \" + this.bem(\"__point\")}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n\n\tgenerateLabel(label: LabelModel) {\n\t\tconst canvas = this.props.diagramEngine.canvas as HTMLElement;\n\t\treturn (\n\t\t\t<foreignObject\n\t\t\t\tkey={label.id}\n\t\t\t\tclassName={this.bem(\"__label\")}\n\t\t\t\twidth={canvas.offsetWidth}\n\t\t\t\theight={canvas.offsetHeight}\n\t\t\t>\n\t\t\t\t<div ref={ref => (this.refLabels[label.id] = ref)}>\n\t\t\t\t\t{this.props.diagramEngine\n\t\t\t\t\t\t.getFactoryForLabel(label)\n\t\t\t\t\t\t.generateReactWidget(this.props.diagramEngine, label)}\n\t\t\t\t</div>\n\t\t\t</foreignObject>\n\t\t);\n\t}\n\n\tgenerateLink(path: string, extraProps: any, id: string | number): JSX.Element {\n\t\tvar props = this.props;\n\n\t\tvar Bottom = React.cloneElement(\n\t\t\t(props.diagramEngine.getFactoryForLink(this.props.link) as DefaultLinkFactory).generateLinkSegment(\n\t\t\t\tthis.props.link,\n\t\t\t\tthis,\n\t\t\t\tthis.state.selected || this.props.link.isSelected(),\n\t\t\t\tpath\n\t\t\t),\n\t\t\t{\n\t\t\t\tref: ref => ref && this.refPaths.push(ref)\n\t\t\t}\n\t\t);\n\n\t\tvar Top = React.cloneElement(Bottom, {\n\t\t\t...extraProps,\n\t\t\tstrokeLinecap: \"round\",\n\t\t\tonMouseLeave: () => {\n\t\t\t\tthis.setState({ selected: false });\n\t\t\t},\n\t\t\tonMouseEnter: () => {\n\t\t\t\tthis.setState({ selected: true });\n\t\t\t},\n\t\t\tref: null,\n\t\t\t\"data-linkid\": this.props.link.getID(),\n\t\t\tstrokeOpacity: this.state.selected ? 0.1 : 0,\n\t\t\tstrokeWidth: 20,\n\t\t\tonContextMenu: () => {\n\t\t\t\tif (!this.props.diagramEngine.isModelLocked(this.props.link)) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.props.link.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t<g key={\"link-\" + id}>\n\t\t\t\t{Bottom}\n\t\t\t\t{Top}\n\t\t\t</g>\n\t\t);\n\t}\n\n\tfindPathAndRelativePositionToRenderLabel = (index: number): { path: any; position: number } => {\n\t\t// an array to hold all path lengths, making sure we hit the DOM only once to fetch this information\n\t\tconst lengths = this.refPaths.map(path => path.getTotalLength());\n\n\t\t// calculate the point where we want to display the label\n\t\tlet labelPosition =\n\t\t\tlengths.reduce((previousValue, currentValue) => previousValue + currentValue, 0) *\n\t\t\t(index / (this.props.link.labels.length + 1));\n\n\t\t// find the path where the label will be rendered and calculate the relative position\n\t\tlet pathIndex = 0;\n\t\twhile (pathIndex < this.refPaths.length) {\n\t\t\tif (labelPosition - lengths[pathIndex] < 0) {\n\t\t\t\treturn {\n\t\t\t\t\tpath: this.refPaths[pathIndex],\n\t\t\t\t\tposition: labelPosition\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// keep searching\n\t\t\tlabelPosition -= lengths[pathIndex];\n\t\t\tpathIndex++;\n\t\t}\n\t};\n\n\tcalculateLabelPosition = (label, index: number) => {\n\t\tif (!this.refLabels[label.id]) {\n\t\t\t// no label? nothing to do here\n\t\t\treturn;\n\t\t}\n\n\t\tconst { path, position } = this.findPathAndRelativePositionToRenderLabel(index);\n\n\t\tconst labelDimensions = {\n\t\t\twidth: this.refLabels[label.id].offsetWidth,\n\t\t\theight: this.refLabels[label.id].offsetHeight\n\t\t};\n\n\t\tconst pathCentre = path.getPointAtLength(position);\n\n\t\tconst labelCoordinates = {\n\t\t\tx: pathCentre.x - labelDimensions.width / 2 + label.offsetX,\n\t\t\ty: pathCentre.y - labelDimensions.height / 2 + label.offsetY\n\t\t};\n\t\tthis.refLabels[label.id].setAttribute(\n\t\t\t\"style\",\n\t\t\t`transform: translate(${labelCoordinates.x}px, ${labelCoordinates.y}px);`\n\t\t);\n\t};\n\n\t/**\n\t * Smart routing is only applicable when all conditions below are true:\n\t * - smart routing is set to true on the engine\n\t * - current link is between two nodes (not between a node and an empty point)\n\t * - no custom points exist along the line\n\t */\n\tisSmartRoutingApplicable(): boolean {\n\t\tconst { diagramEngine, link } = this.props;\n\n\t\tif (!diagramEngine.isSmartRoutingEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (link.points.length !== 2) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (link.sourcePort === null || link.targetPort === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\trender() {\n\t\tconst { diagramEngine } = this.props;\n\t\tif (!diagramEngine.nodesRendered) {\n\t\t\treturn null;\n\t\t}\n\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.points;\n\t\tvar paths = [];\n\n\t\tif (this.isSmartRoutingApplicable()) {\n\t\t\t// first step: calculate a direct path between the points being linked\n\t\t\tconst directPathCoords = this.pathFinding.calculateDirectPath(_.first(points), _.last(points));\n\n\t\t\tconst routingMatrix = diagramEngine.getRoutingMatrix();\n\t\t\t// now we need to extract, from the routing matrix, the very first walkable points\n\t\t\t// so they can be used as origin and destination of the link to be created\n\t\t\tconst smartLink = this.pathFinding.calculateLinkStartEndCoords(routingMatrix, directPathCoords);\n\n\t\t\tif (smartLink) {\n\t\t\t\tconst { start, end, pathToStart, pathToEnd } = smartLink;\n\n\t\t\t\t// second step: calculate a path avoiding hitting other elements\n\t\t\t\tconst simplifiedPath = this.pathFinding.calculateDynamicPath(\n\t\t\t\t\troutingMatrix,\n\t\t\t\t\tstart,\n\t\t\t\t\tend,\n\t\t\t\t\tpathToStart,\n\t\t\t\t\tpathToEnd\n\t\t\t\t);\n\n\t\t\t\tpaths.push(\n\t\t\t\t\t//smooth: boolean, extraProps: any, id: string | number, firstPoint: PointModel, lastPoint: PointModel\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tToolkit.generateDynamicPath(simplifiedPath),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonMouseDown: event => {\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// true when smart routing was skipped or not enabled.\n\t\t// See @link{#isSmartRoutingApplicable()}.\n\t\tif (paths.length === 0) {\n\t\t\tif (points.length === 2) {\n\t\t\t\tvar isHorizontal = Math.abs(points[0].x - points[1].x) > Math.abs(points[0].y - points[1].y);\n\t\t\t\tvar xOrY = isHorizontal ? \"x\" : \"y\";\n\n\t\t\t\t//draw the smoothing\n\t\t\t\t//if the points are too close, just draw a straight line\n\t\t\t\tvar margin = 50;\n\t\t\t\tif (Math.abs(points[0][xOrY] - points[1][xOrY]) < 50) {\n\t\t\t\t\tmargin = 5;\n\t\t\t\t}\n\n\t\t\t\tvar pointLeft = points[0];\n\t\t\t\tvar pointRight = points[1];\n\n\t\t\t\t//some defensive programming to make sure the smoothing is\n\t\t\t\t//always in the right direction\n\t\t\t\tif (pointLeft[xOrY] > pointRight[xOrY]) {\n\t\t\t\t\tpointLeft = points[1];\n\t\t\t\t\tpointRight = points[0];\n\t\t\t\t}\n\n\t\t\t\tpaths.push(\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tToolkit.generateCurvePath(pointLeft, pointRight, this.props.link.curvyness),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonMouseDown: event => {\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t// draw the link as dangeling\n\t\t\t\tif (this.props.link.targetPort === null) {\n\t\t\t\t\tpaths.push(this.generatePoint(1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//draw the multiple anchors and complex line instead\n\t\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\t\tpaths.push(\n\t\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\t\tToolkit.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"data-linkid\": this.props.link.id,\n\t\t\t\t\t\t\t\t\"data-point\": j,\n\t\t\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tj\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t//render the circles\n\t\t\t\tfor (var i = 1; i < points.length - 1; i++) {\n\t\t\t\t\tpaths.push(this.generatePoint(i));\n\t\t\t\t}\n\n\t\t\t\tif (this.props.link.targetPort === null) {\n\t\t\t\t\tpaths.push(this.generatePoint(points.length - 1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.refPaths = [];\n\t\treturn (\n\t\t\t<g {...this.getProps()}>\n\t\t\t\t{paths}\n\t\t\t\t{_.map(this.props.link.labels, labelModel => {\n\t\t\t\t\treturn this.generateLabel(labelModel);\n\t\t\t\t})}\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import { DefaultPortModel } from \"./DefaultPortModel\";\nimport * as _ from \"lodash\";\n\nimport { NodeModel } from \"../../models/NodeModel\";\nimport { Toolkit } from \"../../Toolkit\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultNodeModel extends NodeModel {\n\tname: string;\n\tcolor: string;\n\tports: { [s: string]: DefaultPortModel };\n\n\tconstructor(name: string = \"Untitled\", color: string = \"rgb(0,192,255)\") {\n\t\tsuper(\"default\");\n\t\tthis.name = name;\n\t\tthis.color = color;\n\t}\n\n\taddInPort(label: string): DefaultPortModel {\n\t\treturn this.addPort(new DefaultPortModel(true, Toolkit.UID(), label));\n\t}\n\n\taddOutPort(label: string): DefaultPortModel {\n\t\treturn this.addPort(new DefaultPortModel(false, Toolkit.UID(), label));\n\t}\n\n\tdeSerialize(object, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.name = object.name;\n\t\tthis.color = object.color;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tname: this.name,\n\t\t\tcolor: this.color\n\t\t});\n\t}\n\n\tgetInPorts(): DefaultPortModel[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn portModel.in;\n\t\t});\n\t}\n\n\tgetOutPorts(): DefaultPortModel[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn !portModel.in;\n\t\t});\n\t}\n}\n","import * as React from \"react\";\nimport { DefaultLabelModel } from \"../models/DefaultLabelModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultLabelWidgetProps extends BaseWidgetProps {\n\tmodel: DefaultLabelModel;\n}\n\nexport class DefaultLabelWidget extends BaseWidget<DefaultLabelWidgetProps> {\n\tconstructor(props) {\n\t\tsuper(\"srd-default-label\", props);\n\t}\n\n\trender() {\n\t\treturn <div {...this.getProps()}>{this.props.model.label}</div>;\n\t}\n}\n","import { LabelModel } from \"../models/LabelModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractLabelFactory<T extends LabelModel = LabelModel> extends AbstractFactory<T> {\n\tabstract generateReactWidget(diagramEngine: DiagramEngine, link: T): JSX.Element;\n}\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { AbstractLabelFactory } from \"../../factories/AbstractLabelFactory\";\nimport { DefaultLabelModel } from \"../models/DefaultLabelModel\";\nimport { DefaultLabelWidget } from \"../widgets/DefaultLabelWidget\";\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultLabelFactory extends AbstractLabelFactory<DefaultLabelModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgenerateReactWidget(diagramEngine: DiagramEngine, label: DefaultLabelModel): JSX.Element {\n\t\treturn <DefaultLabelWidget model={label} />;\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultLabelModel {\n\t\treturn new DefaultLabelModel();\n\t}\n}\n","import { PortModel } from \"../models/PortModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractPortFactory<T extends PortModel = PortModel> extends AbstractFactory<T> {}\n","import { DefaultPortModel } from \"../models/DefaultPortModel\";\nimport { AbstractPortFactory } from \"../../factories/AbstractPortFactory\";\n\nexport class DefaultPortFactory extends AbstractPortFactory<DefaultPortModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultPortModel {\n\t\treturn new DefaultPortModel(true, \"unknown\");\n\t}\n}\n","import { BaseListener, BaseEntity, BaseEvent, BaseEntityType } from \"../BaseEntity\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { LinkModel } from \"./LinkModel\";\nimport { NodeModel } from \"./NodeModel\";\nimport { PortModel } from \"./PortModel\";\nimport { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { PointModel } from \"./PointModel\";\n/**\n * @author Dylan Vorster\n *\n */\nexport interface DiagramListener extends BaseListener {\n\tnodesUpdated?(event: BaseEvent & { node: NodeModel; isCreated: boolean }): void;\n\n\tlinksUpdated?(event: BaseEvent & { link: LinkModel; isCreated: boolean }): void;\n\n\toffsetUpdated?(event: BaseEvent<DiagramModel> & { offsetX: number; offsetY: number }): void;\n\n\tzoomUpdated?(event: BaseEvent<DiagramModel> & { zoom: number }): void;\n\n\tgridUpdated?(event: BaseEvent<DiagramModel> & { size: number }): void;\n}\n\n/**\n *\n */\nexport class DiagramModel extends BaseEntity<DiagramListener> {\n\t//models\n\tlinks: { [s: string]: LinkModel };\n\tnodes: { [s: string]: NodeModel };\n\n\t//control variables\n\toffsetX: number;\n\toffsetY: number;\n\tzoom: number;\n\trendered: boolean;\n\tgridSize: number;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.links = {};\n\t\tthis.nodes = {};\n\n\t\tthis.offsetX = 0;\n\t\tthis.offsetY = 0;\n\t\tthis.zoom = 100;\n\t\tthis.rendered = false;\n\t\tthis.gridSize = 0;\n\t}\n\n\tsetGridSize(size: number = 0) {\n\t\tthis.gridSize = size;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.gridUpdated) {\n\t\t\t\tlistener.gridUpdated({ ...event, size: size });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetGridPosition(pos) {\n\t\tif (this.gridSize === 0) {\n\t\t\treturn pos;\n\t\t}\n\t\treturn this.gridSize * Math.floor((pos + this.gridSize / 2) / this.gridSize);\n\t}\n\n\tdeSerializeDiagram(object: any, diagramEngine: DiagramEngine) {\n\t\tthis.deSerialize(object, diagramEngine);\n\n\t\tthis.offsetX = object.offsetX;\n\t\tthis.offsetY = object.offsetY;\n\t\tthis.zoom = object.zoom;\n\t\tthis.gridSize = object.gridSize;\n\n\t\t// deserialize nodes\n\t\t_.forEach(object.nodes, (node: any) => {\n\t\t\tlet nodeOb = diagramEngine.getNodeFactory(node.type).getNewInstance(node);\n\t\t\tnodeOb.setParent(this);\n\t\t\tnodeOb.deSerialize(node, diagramEngine);\n\t\t\tthis.addNode(nodeOb);\n\t\t});\n\n\t\t// deserialze links\n\t\t_.forEach(object.links, (link: any) => {\n\t\t\tlet linkOb = diagramEngine.getLinkFactory(link.type).getNewInstance();\n\t\t\tlinkOb.setParent(this);\n\t\t\tlinkOb.deSerialize(link, diagramEngine);\n\t\t\tthis.addLink(linkOb);\n\t\t});\n\t}\n\n\tserializeDiagram() {\n\t\treturn _.merge(this.serialize(), {\n\t\t\toffsetX: this.offsetX,\n\t\t\toffsetY: this.offsetY,\n\t\t\tzoom: this.zoom,\n\t\t\tgridSize: this.gridSize,\n\t\t\tlinks: _.map(this.links, link => {\n\t\t\t\treturn link.serialize();\n\t\t\t}),\n\t\t\tnodes: _.map(this.nodes, node => {\n\t\t\t\treturn node.serialize();\n\t\t\t})\n\t\t});\n\t}\n\n\tclearSelection(ignore: BaseModel<BaseEntity, BaseModelListener> | null = null) {\n\t\t_.forEach(this.getSelectedItems(), element => {\n\t\t\tif (ignore && ignore.getID() === element.getID()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telement.setSelected(false); //TODO dont fire the listener\n\t\t});\n\t}\n\n\tgetSelectedItems(...filters: BaseEntityType[]): BaseModel<BaseEntity, BaseModelListener>[] {\n\t\tif (!Array.isArray(filters)) {\n\t\t\tfilters = [filters];\n\t\t}\n\t\tvar items = [];\n\n\t\t// run through nodes\n\t\titems = items.concat(\n\t\t\t_.flatMap(this.nodes, node => {\n\t\t\t\treturn node.getSelectedEntities();\n\t\t\t})\n\t\t);\n\n\t\t// find all the links\n\t\titems = items.concat(\n\t\t\t_.flatMap(this.links, link => {\n\t\t\t\treturn link.getSelectedEntities();\n\t\t\t})\n\t\t);\n\n\t\t//find all points\n\t\titems = items.concat(\n\t\t\t_.flatMap(this.links, link => {\n\t\t\t\treturn _.flatMap(link.points, point => {\n\t\t\t\t\treturn point.getSelectedEntities();\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\n\t\titems = _.uniq(items);\n\n\t\tif (filters.length > 0) {\n\t\t\titems = _.filter(_.uniq(items), (item: BaseModel<any>) => {\n\t\t\t\tif (_.includes(filters, \"node\") && item instanceof NodeModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (_.includes(filters, \"link\") && item instanceof LinkModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (_.includes(filters, \"port\") && item instanceof PortModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (_.includes(filters, \"point\") && item instanceof PointModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tsetZoomLevel(zoom: number) {\n\t\tthis.zoom = zoom;\n\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.zoomUpdated) {\n\t\t\t\tlistener.zoomUpdated({ ...event, zoom: zoom });\n\t\t\t}\n\t\t});\n\t}\n\n\tsetOffset(offsetX: number, offsetY: number) {\n\t\tthis.offsetX = offsetX;\n\t\tthis.offsetY = offsetY;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.offsetUpdated) {\n\t\t\t\tlistener.offsetUpdated({ ...event, offsetX: offsetX, offsetY: offsetY });\n\t\t\t}\n\t\t});\n\t}\n\n\tsetOffsetX(offsetX: number) {\n\t\tthis.offsetX = offsetX;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.offsetUpdated) {\n\t\t\t\tlistener.offsetUpdated({ ...event, offsetX: offsetX, offsetY: this.offsetY });\n\t\t\t}\n\t\t});\n\t}\n\tsetOffsetY(offsetY: number) {\n\t\tthis.offsetY = offsetY;\n\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.offsetUpdated) {\n\t\t\t\tlistener.offsetUpdated({ ...event, offsetX: this.offsetX, offsetY: this.offsetY });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetOffsetY() {\n\t\treturn this.offsetY;\n\t}\n\n\tgetOffsetX() {\n\t\treturn this.offsetX;\n\t}\n\n\tgetZoomLevel() {\n\t\treturn this.zoom;\n\t}\n\n\tgetNode(node: string | NodeModel): NodeModel | null {\n\t\tif (node instanceof NodeModel) {\n\t\t\treturn node;\n\t\t}\n\t\tif (!this.nodes[node]) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.nodes[node];\n\t}\n\n\tgetLink(link: string | LinkModel): LinkModel | null {\n\t\tif (link instanceof LinkModel) {\n\t\t\treturn link;\n\t\t}\n\t\tif (!this.links[link]) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.links[link];\n\t}\n\n\taddAll(...models: BaseModel[]): BaseModel[] {\n\t\t_.forEach(models, model => {\n\t\t\tif (model instanceof LinkModel) {\n\t\t\t\tthis.addLink(model);\n\t\t\t} else if (model instanceof NodeModel) {\n\t\t\t\tthis.addNode(model);\n\t\t\t}\n\t\t});\n\t\treturn models;\n\t}\n\n\taddLink(link: LinkModel): LinkModel {\n\t\tlink.addListener({\n\t\t\tentityRemoved: () => {\n\t\t\t\tthis.removeLink(link);\n\t\t\t}\n\t\t});\n\t\tthis.links[link.getID()] = link;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.linksUpdated) {\n\t\t\t\tlistener.linksUpdated({ ...event, link: link, isCreated: true });\n\t\t\t}\n\t\t});\n\t\treturn link;\n\t}\n\n\taddNode(node: NodeModel): NodeModel {\n\t\tnode.addListener({\n\t\t\tentityRemoved: () => {\n\t\t\t\tthis.removeNode(node);\n\t\t\t}\n\t\t});\n\t\tthis.nodes[node.getID()] = node;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.nodesUpdated) {\n\t\t\t\tlistener.nodesUpdated({ ...event, node: node, isCreated: true });\n\t\t\t}\n\t\t});\n\t\treturn node;\n\t}\n\n\tremoveLink(link: LinkModel | string) {\n\t\tlink = this.getLink(link);\n\t\tdelete this.links[link.getID()];\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.linksUpdated) {\n\t\t\t\tlistener.linksUpdated({ ...event, link: link as LinkModel, isCreated: false });\n\t\t\t}\n\t\t});\n\t}\n\n\tremoveNode(node: NodeModel | string) {\n\t\tnode = this.getNode(node);\n\t\tdelete this.nodes[node.getID()];\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.nodesUpdated) {\n\t\t\t\tlistener.nodesUpdated({ ...event, node: node as NodeModel, isCreated: false });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetLinks(): { [s: string]: LinkModel } {\n\t\treturn this.links;\n\t}\n\n\tgetNodes(): { [s: string]: NodeModel } {\n\t\treturn this.nodes;\n\t}\n}\n","/**\n * @author Dylan Vorster\n */\n\nexport * from \"./Toolkit\";\nexport * from \"./BaseEntity\";\nexport * from \"./DiagramEngine\";\n\nexport * from \"./defaults/models/DefaultNodeModel\";\nexport * from \"./defaults/models/DefaultPortModel\";\nexport * from \"./defaults/models/DefaultLinkModel\";\nexport * from \"./defaults/models/DefaultLabelModel\";\n\nexport * from \"./defaults/factories/DefaultLinkFactory\";\nexport * from \"./defaults/factories/DefaultNodeFactory\";\nexport * from \"./defaults/factories/DefaultPortFactory\";\nexport * from \"./defaults/factories/DefaultLabelFactory\";\n\nexport * from \"./defaults/widgets/DefaultLinkWidget\";\nexport * from \"./defaults/widgets/DefaultLabelWidget\";\nexport * from \"./defaults/widgets/DefaultNodeWidget\";\nexport * from \"./defaults/widgets/DefaultPortLabelWidget\";\n\nexport * from \"./factories/AbstractFactory\";\nexport * from \"./factories/AbstractLabelFactory\";\nexport * from \"./factories/AbstractLinkFactory\";\nexport * from \"./factories/AbstractNodeFactory\";\nexport * from \"./factories/AbstractPortFactory\";\n\nexport * from \"./routing/PathFinding\";\n\nexport * from \"./actions/BaseAction\";\nexport * from \"./actions/MoveCanvasAction\";\nexport * from \"./actions/MoveItemsAction\";\nexport * from \"./actions/SelectingAction\";\n\nexport * from \"./models/SelectionModel\";\nexport * from \"./models/BaseModel\";\nexport * from \"./models/DiagramModel\";\nexport * from \"./models/LinkModel\";\nexport * from \"./models/NodeModel\";\nexport * from \"./models/PointModel\";\nexport * from \"./models/PortModel\";\nexport * from \"./models/LabelModel\";\n\nexport * from \"./widgets/DiagramWidget\";\nexport * from \"./widgets/LinkWidget\";\nexport * from \"./widgets/NodeWidget\";\nexport * from \"./widgets/PortWidget\";\nexport * from \"./widgets/BaseWidget\";\n\nexport * from \"./widgets/layers/LinkLayerWidget\";\nexport * from \"./widgets/layers/NodeLayerWidget\";\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport * as _ from \"lodash\";\nimport { LinkLayerWidget } from \"./layers/LinkLayerWidget\";\nimport { NodeLayerWidget } from \"./layers/NodeLayerWidget\";\nimport { Toolkit } from \"../Toolkit\";\nimport { BaseAction } from \"../actions/BaseAction\";\nimport { MoveCanvasAction } from \"../actions/MoveCanvasAction\";\nimport { MoveItemsAction } from \"../actions/MoveItemsAction\";\nimport { SelectingAction } from \"../actions/SelectingAction\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { PointModel } from \"../models/PointModel\";\nimport { PortModel } from \"../models/PortModel\";\nimport { LinkModel } from \"../models/LinkModel\";\nimport { SelectionModel } from \"../models/SelectionModel\";\nimport { BaseModel, BaseModelListener } from \"../models/BaseModel\";\nimport { BaseEntity } from \"../BaseEntity\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface DiagramProps extends BaseWidgetProps {\n\tdiagramEngine: DiagramEngine;\n\n\tallowLooseLinks?: boolean;\n\tallowCanvasTranslation?: boolean;\n\tallowCanvasZoom?: boolean;\n\tinverseZoom?: boolean;\n\tmaxNumberPointsPerLink?: number;\n\tsmartRouting?: boolean;\n\n\tactionStartedFiring?: (action: BaseAction) => boolean;\n\tactionStillFiring?: (action: BaseAction) => void;\n\tactionStoppedFiring?: (action: BaseAction) => void;\n\n\tdeleteKeys?: number[];\n}\n\nexport interface DiagramState {\n\taction: BaseAction | null;\n\twasMoved: boolean;\n\trenderedNodes: boolean;\n\twindowListener: any;\n\tdiagramEngineListener: any;\n\tdocument: any;\n}\n\n/**\n * @author Dylan Vorster\n */\nexport class DiagramWidget extends BaseWidget<DiagramProps, DiagramState> {\n\tpublic static defaultProps: DiagramProps = {\n\t\tdiagramEngine: null,\n\t\tallowLooseLinks: true,\n\t\tallowCanvasTranslation: true,\n\t\tallowCanvasZoom: true,\n\t\tinverseZoom: false,\n\t\tmaxNumberPointsPerLink: Infinity, // backwards compatible default\n\t\tsmartRouting: false,\n\t\tdeleteKeys: [46, 8]\n\t};\n\n\tonKeyUpPointer: (this: Window, ev: KeyboardEvent) => void = null;\n\n\tconstructor(props: DiagramProps) {\n\t\tsuper(\"srd-diagram\", props);\n\t\tthis.onMouseMove = this.onMouseMove.bind(this);\n\t\tthis.onMouseUp = this.onMouseUp.bind(this);\n\t\tthis.state = {\n\t\t\taction: null,\n\t\t\twasMoved: false,\n\t\t\trenderedNodes: false,\n\t\t\twindowListener: null,\n\t\t\tdiagramEngineListener: null,\n\t\t\tdocument: null\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n\t\tthis.props.diagramEngine.setCanvas(null);\n\t\twindow.removeEventListener(\"keyup\", this.onKeyUpPointer);\n\t\twindow.removeEventListener(\"mouseUp\", this.onMouseUp);\n\t\twindow.removeEventListener(\"mouseMove\", this.onMouseMove);\n\t}\n\n\tcomponentWillReceiveProps(nextProps: DiagramProps) {\n\t\tif (this.props.diagramEngine !== nextProps.diagramEngine) {\n\t\t\tthis.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n\t\t\tconst diagramEngineListener = nextProps.diagramEngine.addListener({\n\t\t\t\trepaintCanvas: () => this.forceUpdate()\n\t\t\t});\n\t\t\tthis.setState({ diagramEngineListener });\n\t\t}\n\t}\n\n\tcomponentWillUpdate(nextProps: DiagramProps) {\n\t\tif (this.props.diagramEngine.diagramModel.id !== nextProps.diagramEngine.diagramModel.id) {\n\t\t\tthis.setState({ renderedNodes: false });\n\t\t\tnextProps.diagramEngine.diagramModel.rendered = true;\n\t\t}\n\t\tif (!nextProps.diagramEngine.diagramModel.rendered) {\n\t\t\tthis.setState({ renderedNodes: false });\n\t\t\tnextProps.diagramEngine.diagramModel.rendered = true;\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (!this.state.renderedNodes) {\n\t\t\tthis.setState({\n\t\t\t\trenderedNodes: true\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onKeyUpPointer = this.onKeyUp.bind(this);\n\n\t\t//add a keyboard listener\n\t\tthis.setState({\n\t\t\tdocument: document,\n\t\t\trenderedNodes: true,\n\t\t\tdiagramEngineListener: this.props.diagramEngine.addListener({\n\t\t\t\trepaintCanvas: () => {\n\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\n\t\twindow.addEventListener(\"keyup\", this.onKeyUpPointer, false);\n\n\t\t// dont focus the window when in test mode - jsdom fails\n\t\tif (process.env.NODE_ENV !== \"test\") {\n\t\t\twindow.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Gets a model and element under the mouse cursor\n\t */\n\tgetMouseElement(event): { model: BaseModel<BaseEntity, BaseModelListener>; element: Element } {\n\t\tvar target = event.target as Element;\n\t\tvar diagramModel = this.props.diagramEngine.diagramModel;\n\n\t\t//is it a port\n\t\tvar element = Toolkit.closest(target, \".port[data-name]\");\n\t\tif (element) {\n\t\t\tvar nodeElement = Toolkit.closest(target, \".node[data-nodeid]\") as HTMLElement;\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel\n\t\t\t\t\t.getNode(nodeElement.getAttribute(\"data-nodeid\"))\n\t\t\t\t\t.getPort(element.getAttribute(\"data-name\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\t//look for a point\n\t\telement = Toolkit.closest(target, \".point[data-id]\");\n\t\tif (element) {\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel\n\t\t\t\t\t.getLink(element.getAttribute(\"data-linkid\"))\n\t\t\t\t\t.getPointModel(element.getAttribute(\"data-id\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\t//look for a link\n\t\telement = Toolkit.closest(target, \"[data-linkid]\");\n\t\tif (element) {\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel.getLink(element.getAttribute(\"data-linkid\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\t//look for a node\n\t\telement = Toolkit.closest(target, \".node[data-nodeid]\");\n\t\tif (element) {\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel.getNode(element.getAttribute(\"data-nodeid\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfireAction() {\n\t\tif (this.state.action && this.props.actionStillFiring) {\n\t\t\tthis.props.actionStillFiring(this.state.action);\n\t\t}\n\t}\n\n\tstopFiringAction(shouldSkipEvent?: boolean) {\n\t\tif (this.props.actionStoppedFiring && !shouldSkipEvent) {\n\t\t\tthis.props.actionStoppedFiring(this.state.action);\n\t\t}\n\t\tthis.setState({ action: null });\n\t}\n\n\tstartFiringAction(action: BaseAction) {\n\t\tvar setState = true;\n\t\tif (this.props.actionStartedFiring) {\n\t\t\tsetState = this.props.actionStartedFiring(action);\n\t\t}\n\t\tif (setState) {\n\t\t\tthis.setState({ action: action });\n\t\t}\n\t}\n\n\tonMouseMove(event) {\n\t\tvar diagramEngine = this.props.diagramEngine;\n\t\tvar diagramModel = diagramEngine.getDiagramModel();\n\t\t//select items so draw a bounding box\n\t\tif (this.state.action instanceof SelectingAction) {\n\t\t\tvar relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n\n\t\t\t_.forEach(diagramModel.getNodes(), node => {\n\t\t\t\tif ((this.state.action as SelectingAction).containsElement(node.x, node.y, diagramModel)) {\n\t\t\t\t\tnode.setSelected(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_.forEach(diagramModel.getLinks(), link => {\n\t\t\t\tvar allSelected = true;\n\t\t\t\t_.forEach(link.points, point => {\n\t\t\t\t\tif ((this.state.action as SelectingAction).containsElement(point.x, point.y, diagramModel)) {\n\t\t\t\t\t\tpoint.setSelected(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tallSelected = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (allSelected) {\n\t\t\t\t\tlink.setSelected(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.state.action.mouseX2 = relative.x;\n\t\t\tthis.state.action.mouseY2 = relative.y;\n\n\t\t\tthis.fireAction();\n\t\t\tthis.setState({ action: this.state.action });\n\t\t\treturn;\n\t\t} else if (this.state.action instanceof MoveItemsAction) {\n\t\t\tlet amountX = event.clientX - this.state.action.mouseX;\n\t\t\tlet amountY = event.clientY - this.state.action.mouseY;\n\t\t\tlet amountZoom = diagramModel.getZoomLevel() / 100;\n\n\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t// in this case we need to also work out the relative grid position\n\t\t\t\tif (\n\t\t\t\t\tmodel.model instanceof NodeModel ||\n\t\t\t\t\t(model.model instanceof PointModel && !model.model.isConnectedToPort())\n\t\t\t\t) {\n\t\t\t\t\tmodel.model.x = diagramModel.getGridPosition(model.initialX + amountX / amountZoom);\n\t\t\t\t\tmodel.model.y = diagramModel.getGridPosition(model.initialY + amountY / amountZoom);\n\n\t\t\t\t\t// update port coordinates as well\n\t\t\t\t\tif (model.model instanceof NodeModel) {\n\t\t\t\t\t\t_.forEach(model.model.getPorts(), port => {\n\t\t\t\t\t\t\tconst portCoords = this.props.diagramEngine.getPortCoords(port);\n\t\t\t\t\t\t\tport.updateCoords(portCoords);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diagramEngine.isSmartRoutingEnabled()) {\n\t\t\t\t\t\tdiagramEngine.calculateRoutingMatrix();\n\t\t\t\t\t}\n\t\t\t\t} else if (model.model instanceof PointModel) {\n\t\t\t\t\t// we want points that are connected to ports, to not necessarily snap to grid\n\t\t\t\t\t// this stuff needs to be pixel perfect, dont touch it\n\t\t\t\t\tmodel.model.x = model.initialX + diagramModel.getGridPosition(amountX / amountZoom);\n\t\t\t\t\tmodel.model.y = model.initialY + diagramModel.getGridPosition(amountY / amountZoom);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (diagramEngine.isSmartRoutingEnabled()) {\n\t\t\t\tdiagramEngine.calculateCanvasMatrix();\n\t\t\t}\n\n\t\t\tthis.fireAction();\n\t\t\tif (!this.state.wasMoved) {\n\t\t\t\tthis.setState({ wasMoved: true });\n\t\t\t} else {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t} else if (this.state.action instanceof MoveCanvasAction) {\n\t\t\t//translate the actual canvas\n\t\t\tif (this.props.allowCanvasTranslation) {\n\t\t\t\tdiagramModel.setOffset(\n\t\t\t\t\tthis.state.action.initialOffsetX + (event.clientX - this.state.action.mouseX),\n\t\t\t\t\tthis.state.action.initialOffsetY + (event.clientY - this.state.action.mouseY)\n\t\t\t\t);\n\t\t\t\tthis.fireAction();\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t}\n\t}\n\n\tonKeyUp(event) {\n\t\t//delete all selected\n\t\tif (this.props.deleteKeys.indexOf(event.keyCode) !== -1) {\n\t\t\t_.forEach(this.props.diagramEngine.getDiagramModel().getSelectedItems(), element => {\n\t\t\t\t//only delete items which are not locked\n\t\t\t\tif (!this.props.diagramEngine.isModelLocked(element)) {\n\t\t\t\t\telement.remove();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.forceUpdate();\n\t\t}\n\t}\n\n\tonMouseUp(event) {\n\t\tvar diagramEngine = this.props.diagramEngine;\n\t\t//are we going to connect a link to something?\n\t\tif (this.state.action instanceof MoveItemsAction) {\n\t\t\tvar element = this.getMouseElement(event);\n\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t//only care about points connecting to things\n\t\t\t\tif (!(model.model instanceof PointModel)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (element && element.model instanceof PortModel && !diagramEngine.isModelLocked(element.model)) {\n\t\t\t\t\tlet link = model.model.getLink();\n\t\t\t\t\tif (link.getTargetPort() !== null) {\n\t\t\t\t\t\t//if this was a valid link already and we are adding a node in the middle, create 2 links from the original\n\t\t\t\t\t\tif (link.getTargetPort() !== element.model && link.getSourcePort() !== element.model) {\n\t\t\t\t\t\t\tconst targetPort = link.getTargetPort();\n\t\t\t\t\t\t\tlet newLink = link.clone({});\n\t\t\t\t\t\t\tnewLink.setSourcePort(element.model);\n\t\t\t\t\t\t\tnewLink.setTargetPort(targetPort);\n\t\t\t\t\t\t\tlink.setTargetPort(element.model);\n\t\t\t\t\t\t\ttargetPort.removeLink(link);\n\t\t\t\t\t\t\tnewLink.removePointsBefore(newLink.getPoints()[link.getPointIndex(model.model)]);\n\t\t\t\t\t\t\tlink.removePointsAfter(model.model);\n\t\t\t\t\t\t\tdiagramEngine.getDiagramModel().addLink(newLink);\n\t\t\t\t\t\t\t//if we are connecting to the same target or source, remove tweener points\n\t\t\t\t\t\t} else if (link.getTargetPort() === element.model) {\n\t\t\t\t\t\t\tlink.removePointsAfter(model.model);\n\t\t\t\t\t\t} else if (link.getSourcePort() === element.model) {\n\t\t\t\t\t\t\tlink.removePointsBefore(model.model);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlink.setTargetPort(element.model);\n\t\t\t\t\t}\n\t\t\t\t\tdelete this.props.diagramEngine.linksThatHaveInitiallyRendered[link.getID()];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//check for / remove any loose links in any models which have been moved\n\t\t\tif (!this.props.allowLooseLinks && this.state.wasMoved) {\n\t\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t\t//only care about points connecting to things\n\t\t\t\t\tif (!(model.model instanceof PointModel)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet selectedPoint: PointModel = model.model;\n\t\t\t\t\tlet link: LinkModel = selectedPoint.getLink();\n\t\t\t\t\tif (link.getSourcePort() === null || link.getTargetPort() === null) {\n\t\t\t\t\t\tlink.remove();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//remove any invalid links\n\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t//only care about points connecting to things\n\t\t\t\tif (!(model.model instanceof PointModel)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet link: LinkModel = model.model.getLink();\n\t\t\t\tlet sourcePort: PortModel = link.getSourcePort();\n\t\t\t\tlet targetPort: PortModel = link.getTargetPort();\n\t\t\t\tif (sourcePort !== null && targetPort !== null) {\n\t\t\t\t\tif (!sourcePort.canLinkToPort(targetPort)) {\n\t\t\t\t\t\t//link not allowed\n\t\t\t\t\t\tlink.remove();\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t_.some(\n\t\t\t\t\t\t\t_.values(targetPort.getLinks()),\n\t\t\t\t\t\t\t(l: LinkModel) =>\n\t\t\t\t\t\t\t\tl !== link && (l.getSourcePort() === sourcePort || l.getTargetPort() === sourcePort)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\t//link is a duplicate\n\t\t\t\t\t\tlink.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdiagramEngine.clearRepaintEntities();\n\t\t\tthis.stopFiringAction(!this.state.wasMoved);\n\t\t} else {\n\t\t\tdiagramEngine.clearRepaintEntities();\n\t\t\tthis.stopFiringAction();\n\t\t}\n\t\tthis.state.document.removeEventListener(\"mousemove\", this.onMouseMove);\n\t\tthis.state.document.removeEventListener(\"mouseup\", this.onMouseUp);\n\t}\n\n\tdrawSelectionBox() {\n\t\tlet dimensions = (this.state.action as SelectingAction).getBoxDimensions();\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={this.bem(\"__selector\")}\n\t\t\t\tstyle={{\n\t\t\t\t\ttop: dimensions.top,\n\t\t\t\t\tleft: dimensions.left,\n\t\t\t\t\twidth: dimensions.width,\n\t\t\t\t\theight: dimensions.height\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tvar diagramEngine = this.props.diagramEngine;\n\t\tdiagramEngine.setMaxNumberPointsPerLink(this.props.maxNumberPointsPerLink);\n\t\tdiagramEngine.setSmartRoutingStatus(this.props.smartRouting);\n\t\tvar diagramModel = diagramEngine.getDiagramModel();\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tref={ref => {\n\t\t\t\t\tif (ref) {\n\t\t\t\t\t\tthis.props.diagramEngine.setCanvas(ref);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonWheel={event => {\n\t\t\t\t\tif (this.props.allowCanvasZoom) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tconst oldZoomFactor = diagramModel.getZoomLevel() / 100;\n\t\t\t\t\t\tlet scrollDelta = this.props.inverseZoom ? -event.deltaY : event.deltaY;\n\t\t\t\t\t\t//check if it is pinch gesture\n\t\t\t\t\t\tif (event.ctrlKey && scrollDelta % 1 !== 0) {\n\t\t\t\t\t\t\t/*Chrome and Firefox sends wheel event with deltaY that\n                have fractional part, also `ctrlKey` prop of the event is true\n                though ctrl isn't pressed\n              */\n\t\t\t\t\t\t\tscrollDelta /= 3;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscrollDelta /= 60;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (diagramModel.getZoomLevel() + scrollDelta > 10) {\n\t\t\t\t\t\t\tdiagramModel.setZoomLevel(diagramModel.getZoomLevel() + scrollDelta);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst zoomFactor = diagramModel.getZoomLevel() / 100;\n\n\t\t\t\t\t\tconst boundingRect = event.currentTarget.getBoundingClientRect();\n\t\t\t\t\t\tconst clientWidth = boundingRect.width;\n\t\t\t\t\t\tconst clientHeight = boundingRect.height;\n\t\t\t\t\t\t// compute difference between rect before and after scroll\n\t\t\t\t\t\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n\t\t\t\t\t\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\t\t\t\t\t\t// compute mouse coords relative to canvas\n\t\t\t\t\t\tconst clientX = event.clientX - boundingRect.left;\n\t\t\t\t\t\tconst clientY = event.clientY - boundingRect.top;\n\n\t\t\t\t\t\t// compute width and height increment factor\n\t\t\t\t\t\tconst xFactor = (clientX - diagramModel.getOffsetX()) / oldZoomFactor / clientWidth;\n\t\t\t\t\t\tconst yFactor = (clientY - diagramModel.getOffsetY()) / oldZoomFactor / clientHeight;\n\n\t\t\t\t\t\tdiagramModel.setOffset(\n\t\t\t\t\t\t\tdiagramModel.getOffsetX() - widthDiff * xFactor,\n\t\t\t\t\t\t\tdiagramModel.getOffsetY() - heightDiff * yFactor\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tdiagramEngine.enableRepaintEntities([]);\n\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonMouseDown={event => {\n\t\t\t\t\tthis.setState({ ...this.state, wasMoved: false });\n\n\t\t\t\t\tdiagramEngine.clearRepaintEntities();\n\t\t\t\t\tvar model = this.getMouseElement(event);\n\t\t\t\t\t//the canvas was selected\n\t\t\t\t\tif (model === null) {\n\t\t\t\t\t\t//is it a multiple selection\n\t\t\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\t\t\tvar relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n\t\t\t\t\t\t\tthis.startFiringAction(new SelectingAction(relative.x, relative.y));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//its a drag the canvas event\n\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t\tthis.startFiringAction(new MoveCanvasAction(event.clientX, event.clientY, diagramModel));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (model.model instanceof PortModel) {\n\t\t\t\t\t\t//its a port element, we want to drag a link\n\t\t\t\t\t\tif (!this.props.diagramEngine.isModelLocked(model.model)) {\n\t\t\t\t\t\t\tvar relative = diagramEngine.getRelativeMousePoint(event);\n\t\t\t\t\t\t\tvar sourcePort = model.model;\n\t\t\t\t\t\t\tvar link = sourcePort.createLinkModel();\n\t\t\t\t\t\t\tlink.setSourcePort(sourcePort);\n\n\t\t\t\t\t\t\tif (link) {\n\t\t\t\t\t\t\t\tlink.removeMiddlePoints();\n\t\t\t\t\t\t\t\tif (link.getSourcePort() !== sourcePort) {\n\t\t\t\t\t\t\t\t\tlink.setSourcePort(sourcePort);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlink.setTargetPort(null);\n\n\t\t\t\t\t\t\t\tlink.getFirstPoint().updateLocation(relative);\n\t\t\t\t\t\t\t\tlink.getLastPoint().updateLocation(relative);\n\n\t\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t\t\tlink.getLastPoint().setSelected(true);\n\t\t\t\t\t\t\t\tdiagramModel.addLink(link);\n\n\t\t\t\t\t\t\t\tthis.startFiringAction(\n\t\t\t\t\t\t\t\t\tnew MoveItemsAction(event.clientX, event.clientY, diagramEngine)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//its some or other element, probably want to move it\n\t\t\t\t\t\tif (!event.shiftKey && !model.model.isSelected()) {\n\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodel.model.setSelected(true);\n\n\t\t\t\t\t\tthis.startFiringAction(new MoveItemsAction(event.clientX, event.clientY, diagramEngine));\n\t\t\t\t\t}\n\t\t\t\t\tthis.state.document.addEventListener(\"mousemove\", this.onMouseMove);\n\t\t\t\t\tthis.state.document.addEventListener(\"mouseup\", this.onMouseUp);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.state.renderedNodes && (\n\t\t\t\t\t<LinkLayerWidget\n\t\t\t\t\t\tdiagramEngine={diagramEngine}\n\t\t\t\t\t\tpointAdded={(point: PointModel, event) => {\n\t\t\t\t\t\t\tthis.state.document.addEventListener(\"mousemove\", this.onMouseMove);\n\t\t\t\t\t\t\tthis.state.document.addEventListener(\"mouseup\", this.onMouseUp);\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tdiagramModel.clearSelection(point);\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\taction: new MoveItemsAction(event.clientX, event.clientY, diagramEngine)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<NodeLayerWidget diagramEngine={diagramEngine} />\n\t\t\t\t{this.state.action instanceof SelectingAction && this.drawSelectionBox()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { DefaultNodeModel } from \"../models/DefaultNodeModel\";\nimport * as React from \"react\";\nimport { DefaultNodeWidget } from \"../widgets/DefaultNodeWidget\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { AbstractNodeFactory } from \"../../factories/AbstractNodeFactory\";\n/**\n * @author Dylan Vorster\n */\nexport class DefaultNodeFactory extends AbstractNodeFactory<DefaultNodeModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgenerateReactWidget(diagramEngine: DiagramEngine, node: DefaultNodeModel): JSX.Element {\n\t\treturn React.createElement(DefaultNodeWidget, {\n\t\t\tnode: node,\n\t\t\tdiagramEngine: diagramEngine\n\t\t});\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultNodeModel {\n\t\treturn new DefaultNodeModel();\n\t}\n}\n","import * as React from \"react\";\nimport { DefaultLinkWidget } from \"../widgets/DefaultLinkWidget\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { AbstractLinkFactory } from \"../../factories/AbstractLinkFactory\";\nimport { DefaultLinkModel } from \"../models/DefaultLinkModel\";\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultLinkFactory extends AbstractLinkFactory<DefaultLinkModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgenerateReactWidget(diagramEngine: DiagramEngine, link: DefaultLinkModel): JSX.Element {\n\t\treturn React.createElement(DefaultLinkWidget, {\n\t\t\tlink: link,\n\t\t\tdiagramEngine: diagramEngine\n\t\t});\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultLinkModel {\n\t\treturn new DefaultLinkModel();\n\t}\n\n\tgenerateLinkSegment(model: DefaultLinkModel, widget: DefaultLinkWidget, selected: boolean, path: string) {\n\t\treturn (\n\t\t\t<path\n\t\t\t\tclassName={selected ? widget.bem(\"--path-selected\") : \"\"}\n\t\t\t\tstrokeWidth={model.width}\n\t\t\t\tstroke={model.color}\n\t\t\t\td={path}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import { BaseEntity, BaseListener } from \"./BaseEntity\";\nimport { DiagramModel } from \"./models/DiagramModel\";\nimport * as _ from \"lodash\";\nimport { BaseModel, BaseModelListener } from \"./models/BaseModel\";\nimport { NodeModel } from \"./models/NodeModel\";\nimport { PointModel } from \"./models/PointModel\";\nimport { PortModel } from \"./models/PortModel\";\nimport { LinkModel } from \"./models/LinkModel\";\nimport { AbstractLabelFactory } from \"./factories/AbstractLabelFactory\";\nimport { AbstractLinkFactory } from \"./factories/AbstractLinkFactory\";\nimport { AbstractNodeFactory } from \"./factories/AbstractNodeFactory\";\nimport { AbstractPortFactory } from \"./factories/AbstractPortFactory\";\nimport { DefaultLinkFactory, DefaultNodeFactory } from \"./main\";\nimport { ROUTING_SCALING_FACTOR } from \"./routing/PathFinding\";\nimport { DefaultPortFactory } from \"./defaults/factories/DefaultPortFactory\";\nimport { LabelModel } from \"./models/LabelModel\";\nimport { DefaultLabelFactory } from \"./defaults/factories/DefaultLabelFactory\";\nimport { Toolkit } from \"./Toolkit\";\n/**\n * @author Dylan Vorster\n */\nexport interface DiagramEngineListener extends BaseListener {\n\tportFactoriesUpdated?(): void;\n\n\tnodeFactoriesUpdated?(): void;\n\n\tlinkFactoriesUpdated?(): void;\n\n\tlabelFactoriesUpdated?(): void;\n\n\trepaintCanvas?(): void;\n}\n\n/**\n * Passed as a parameter to the DiagramWidget\n */\nexport class DiagramEngine extends BaseEntity<DiagramEngineListener> {\n\tnodeFactories: { [s: string]: AbstractNodeFactory };\n\tlinkFactories: { [s: string]: AbstractLinkFactory };\n\tportFactories: { [s: string]: AbstractPortFactory };\n\tlabelFactories: { [s: string]: AbstractLabelFactory };\n\n\tdiagramModel: DiagramModel;\n\tcanvas: Element;\n\tpaintableWidgets: {};\n\tlinksThatHaveInitiallyRendered: {};\n\tnodesRendered: boolean;\n\tmaxNumberPointsPerLink: number;\n\tsmartRouting: boolean;\n\n\t// calculated only when smart routing is active\n\tcanvasMatrix: number[][] = [];\n\troutingMatrix: number[][] = [];\n\t// used when at least one element has negative coordinates\n\thAdjustmentFactor: number = 0;\n\tvAdjustmentFactor: number = 0;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.diagramModel = new DiagramModel();\n\t\tthis.nodeFactories = {};\n\t\tthis.linkFactories = {};\n\t\tthis.portFactories = {};\n\t\tthis.labelFactories = {};\n\t\tthis.canvas = null;\n\t\tthis.paintableWidgets = null;\n\t\tthis.linksThatHaveInitiallyRendered = {};\n\n\t\tif (Toolkit.TESTING) {\n\t\t\tToolkit.TESTING_UID = 0;\n\n\t\t\t//pop it onto the window so our E2E helpers can find it\n\t\t\tif (window) {\n\t\t\t\t(window as any)[\"diagram_instance\"] = this;\n\t\t\t}\n\t\t}\n\t}\n\n\tinstallDefaultFactories() {\n\t\tthis.registerNodeFactory(new DefaultNodeFactory());\n\t\tthis.registerLinkFactory(new DefaultLinkFactory());\n\t\tthis.registerPortFactory(new DefaultPortFactory());\n\t\tthis.registerLabelFactory(new DefaultLabelFactory());\n\t}\n\n\trepaintCanvas() {\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.repaintCanvas) {\n\t\t\t\tlistener.repaintCanvas();\n\t\t\t}\n\t\t});\n\t}\n\n\tclearRepaintEntities() {\n\t\tthis.paintableWidgets = null;\n\t}\n\n\tenableRepaintEntities(entities: BaseModel<BaseEntity, BaseModelListener>[]) {\n\t\tthis.paintableWidgets = {};\n\t\tentities.forEach(entity => {\n\t\t\t//if a node is requested to repaint, add all of its links\n\t\t\tif (entity instanceof NodeModel) {\n\t\t\t\t_.forEach(entity.getPorts(), port => {\n\t\t\t\t\t_.forEach(port.getLinks(), link => {\n\t\t\t\t\t\tthis.paintableWidgets[link.getID()] = true;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (entity instanceof PointModel) {\n\t\t\t\tthis.paintableWidgets[entity.getLink().getID()] = true;\n\t\t\t}\n\n\t\t\tthis.paintableWidgets[entity.getID()] = true;\n\t\t});\n\t}\n\n\t/**\n\t * Checks to see if a model is locked by running through\n\t * its parents to see if they are locked first\n\t */\n\tisModelLocked(model: BaseEntity<BaseListener>) {\n\t\t//always check the diagram model\n\t\tif (this.diagramModel.isLocked()) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn model.isLocked();\n\t}\n\n\trecalculatePortsVisually() {\n\t\tthis.nodesRendered = false;\n\t\tthis.linksThatHaveInitiallyRendered = {};\n\t}\n\n\tcanEntityRepaint(baseModel: BaseModel<BaseEntity, BaseModelListener>) {\n\t\t//no rules applied, allow repaint\n\t\tif (this.paintableWidgets === null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.paintableWidgets[baseModel.getID()] !== undefined;\n\t}\n\n\tsetCanvas(canvas: Element | null) {\n\t\tthis.canvas = canvas;\n\t}\n\n\tsetDiagramModel(model: DiagramModel) {\n\t\tthis.diagramModel = model;\n\t\tthis.recalculatePortsVisually();\n\t}\n\n\tgetDiagramModel(): DiagramModel {\n\t\treturn this.diagramModel;\n\t}\n\n\t//!-------------- FACTORIES ------------\n\n\tgetNodeFactories(): { [s: string]: AbstractNodeFactory } {\n\t\treturn this.nodeFactories;\n\t}\n\n\tgetLinkFactories(): { [s: string]: AbstractLinkFactory } {\n\t\treturn this.linkFactories;\n\t}\n\n\tgetLabelFactories(): { [s: string]: AbstractLabelFactory } {\n\t\treturn this.labelFactories;\n\t}\n\n\tregisterLabelFactory(factory: AbstractLabelFactory) {\n\t\tthis.labelFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.labelFactoriesUpdated) {\n\t\t\t\tlistener.labelFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterPortFactory(factory: AbstractPortFactory) {\n\t\tthis.portFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.portFactoriesUpdated) {\n\t\t\t\tlistener.portFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterNodeFactory(factory: AbstractNodeFactory) {\n\t\tthis.nodeFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.nodeFactoriesUpdated) {\n\t\t\t\tlistener.nodeFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterLinkFactory(factory: AbstractLinkFactory) {\n\t\tthis.linkFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.linkFactoriesUpdated) {\n\t\t\t\tlistener.linkFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tgetPortFactory(type: string): AbstractPortFactory {\n\t\tif (this.portFactories[type]) {\n\t\t\treturn this.portFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for port of type: [${type}]`);\n\t}\n\n\tgetNodeFactory(type: string): AbstractNodeFactory {\n\t\tif (this.nodeFactories[type]) {\n\t\t\treturn this.nodeFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for node of type: [${type}]`);\n\t}\n\n\tgetLinkFactory(type: string): AbstractLinkFactory {\n\t\tif (this.linkFactories[type]) {\n\t\t\treturn this.linkFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for link of type: [${type}]`);\n\t}\n\n\tgetLabelFactory(type: string): AbstractLabelFactory {\n\t\tif (this.labelFactories[type]) {\n\t\t\treturn this.labelFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for label of type: [${type}]`);\n\t}\n\n\tgetFactoryForNode(node: NodeModel): AbstractNodeFactory | null {\n\t\treturn this.getNodeFactory(node.getType());\n\t}\n\n\tgetFactoryForLink(link: LinkModel): AbstractLinkFactory | null {\n\t\treturn this.getLinkFactory(link.getType());\n\t}\n\n\tgetFactoryForLabel(label: LabelModel): AbstractLabelFactory | null {\n\t\treturn this.getLabelFactory(label.getType());\n\t}\n\n\tgenerateWidgetForLink(link: LinkModel): JSX.Element | null {\n\t\tvar linkFactory = this.getFactoryForLink(link);\n\t\tif (!linkFactory) {\n\t\t\tthrow new Error(\"Cannot find link factory for link: \" + link.getType());\n\t\t}\n\t\treturn linkFactory.generateReactWidget(this, link);\n\t}\n\n\tgenerateWidgetForNode(node: NodeModel): JSX.Element | null {\n\t\tvar nodeFactory = this.getFactoryForNode(node);\n\t\tif (!nodeFactory) {\n\t\t\tthrow new Error(\"Cannot find widget factory for node: \" + node.getType());\n\t\t}\n\t\treturn nodeFactory.generateReactWidget(this, node);\n\t}\n\n\tgetRelativeMousePoint(event): { x: number; y: number } {\n\t\tvar point = this.getRelativePoint(event.clientX, event.clientY);\n\t\treturn {\n\t\t\tx: (point.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0),\n\t\t\ty: (point.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0)\n\t\t};\n\t}\n\n\tgetRelativePoint(x, y) {\n\t\tvar canvasRect = this.canvas.getBoundingClientRect();\n\t\treturn { x: x - canvasRect.left, y: y - canvasRect.top };\n\t}\n\n\tgetNodeElement(node: NodeModel): Element {\n\t\tconst selector = this.canvas.querySelector(`.node[data-nodeid=\"${node.getID()}\"]`);\n\t\tif (selector === null) {\n\t\t\tthrow new Error(\"Cannot find Node element with nodeID: [\" + node.getID() + \"]\");\n\t\t}\n\t\treturn selector;\n\t}\n\n\tgetNodePortElement(port: PortModel): any {\n\t\tvar selector = this.canvas.querySelector(\n\t\t\t`.port[data-name=\"${port.getName()}\"][data-nodeid=\"${port.getParent().getID()}\"]`\n\t\t);\n\t\tif (selector === null) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Cannot find Node Port element with nodeID: [\" +\n\t\t\t\t\tport.getParent().getID() +\n\t\t\t\t\t\"] and name: [\" +\n\t\t\t\t\tport.getName() +\n\t\t\t\t\t\"]\"\n\t\t\t);\n\t\t}\n\t\treturn selector;\n\t}\n\n\tgetPortCenter(port: PortModel) {\n\t\tvar sourceElement = this.getNodePortElement(port);\n\t\tvar sourceRect = sourceElement.getBoundingClientRect();\n\n\t\tvar rel = this.getRelativePoint(sourceRect.left, sourceRect.top);\n\n\t\treturn {\n\t\t\tx:\n\t\t\t\tsourceElement.offsetWidth / 2 +\n\t\t\t\t(rel.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0),\n\t\t\ty:\n\t\t\t\tsourceElement.offsetHeight / 2 +\n\t\t\t\t(rel.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0)\n\t\t};\n\t}\n\n\t/**\n\t * Calculate rectangular coordinates of the port passed in.\n\t */\n\tgetPortCoords(\n\t\tport: PortModel\n\t): {\n\t\tx: number;\n\t\ty: number;\n\t\twidth: number;\n\t\theight: number;\n\t} {\n\t\tconst sourceElement = this.getNodePortElement(port);\n\t\tconst sourceRect = sourceElement.getBoundingClientRect();\n\t\tconst canvasRect = this.canvas.getBoundingClientRect() as ClientRect;\n\n\t\treturn {\n\t\t\tx:\n\t\t\t\t(sourceRect.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0) -\n\t\t\t\tcanvasRect.left,\n\t\t\ty:\n\t\t\t\t(sourceRect.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0) -\n\t\t\t\tcanvasRect.top,\n\t\t\twidth: sourceRect.width,\n\t\t\theight: sourceRect.height\n\t\t};\n\t}\n\n\t/**\n\t * Determine the width and height of the node passed in.\n\t * It currently assumes nodes have a rectangular shape, can be overriden for customised shapes.\n\t */\n\tgetNodeDimensions(node: NodeModel): { width: number; height: number } {\n\t\tif (!this.canvas) {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t}\n\n\t\tconst nodeElement = this.getNodeElement(node);\n\t\tconst nodeRect = nodeElement.getBoundingClientRect();\n\n\t\treturn {\n\t\t\twidth: nodeRect.width,\n\t\t\theight: nodeRect.height\n\t\t};\n\t}\n\n\tgetMaxNumberPointsPerLink(): number {\n\t\treturn this.maxNumberPointsPerLink;\n\t}\n\n\tsetMaxNumberPointsPerLink(max: number) {\n\t\tthis.maxNumberPointsPerLink = max;\n\t}\n\n\tisSmartRoutingEnabled() {\n\t\treturn !!this.smartRouting;\n\t}\n\tsetSmartRoutingStatus(status: boolean) {\n\t\tthis.smartRouting = status;\n\t}\n\n\t/**\n\t * A representation of the canvas in the following format:\n\t *\n\t * +-----------------+\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * +-----------------+\n\t *\n\t * In which all walkable points are marked by zeros.\n\t * It uses @link{#ROUTING_SCALING_FACTOR} to reduce the matrix dimensions and improve performance.\n\t */\n\tgetCanvasMatrix(): number[][] {\n\t\tif (this.canvasMatrix.length === 0) {\n\t\t\tthis.calculateCanvasMatrix();\n\t\t}\n\n\t\treturn this.canvasMatrix;\n\t}\n\tcalculateCanvasMatrix() {\n\t\tconst {\n\t\t\twidth: canvasWidth,\n\t\t\thAdjustmentFactor,\n\t\t\theight: canvasHeight,\n\t\t\tvAdjustmentFactor\n\t\t} = this.calculateMatrixDimensions();\n\n\t\tthis.hAdjustmentFactor = hAdjustmentFactor;\n\t\tthis.vAdjustmentFactor = vAdjustmentFactor;\n\n\t\tconst matrixWidth = Math.ceil(canvasWidth / ROUTING_SCALING_FACTOR);\n\t\tconst matrixHeight = Math.ceil(canvasHeight / ROUTING_SCALING_FACTOR);\n\n\t\tthis.canvasMatrix = _.range(0, matrixHeight).map(() => {\n\t\t\treturn new Array(matrixWidth).fill(0);\n\t\t});\n\t}\n\n\t/**\n\t * A representation of the canvas in the following format:\n\t *\n\t * +-----------------+\n\t * | 0 0 1 1 0 0 0 0 |\n\t * | 0 0 1 1 0 0 1 1 |\n\t * | 0 0 0 0 0 0 1 1 |\n\t * | 1 1 0 0 0 0 0 0 |\n\t * | 1 1 0 0 0 0 0 0 |\n\t * +-----------------+\n\t *\n\t * In which all points blocked by a node (and its ports) are\n\t * marked as 1; points were there is nothing (ie, free) receive 0.\n\t */\n\tgetRoutingMatrix(): number[][] {\n\t\tif (this.routingMatrix.length === 0) {\n\t\t\tthis.calculateRoutingMatrix();\n\t\t}\n\n\t\treturn this.routingMatrix;\n\t}\n\tcalculateRoutingMatrix(): void {\n\t\tconst matrix = _.cloneDeep(this.getCanvasMatrix());\n\n\t\t// nodes need to be marked as blocked points\n\t\tthis.markNodes(matrix);\n\t\t// same thing for ports\n\t\tthis.markPorts(matrix);\n\n\t\tthis.routingMatrix = matrix;\n\t}\n\n\t/**\n\t * The routing matrix does not have negative indexes, but elements could be negatively positioned.\n\t * We use the functions below to translate back and forth between these coordinates, relying on the\n\t * calculated values of hAdjustmentFactor and vAdjustmentFactor.\n\t */\n\ttranslateRoutingX(x: number, reverse: boolean = false) {\n\t\treturn x + this.hAdjustmentFactor * (reverse ? -1 : 1);\n\t}\n\ttranslateRoutingY(y: number, reverse: boolean = false) {\n\t\treturn y + this.vAdjustmentFactor * (reverse ? -1 : 1);\n\t}\n\n\t/**\n\t * Despite being a long method, we simply iterate over all three collections (nodes, ports and points)\n\t * to find the highest X and Y dimensions, so we can build the matrix large enough to contain all elements.\n\t */\n\tcalculateMatrixDimensions = (): {\n\t\twidth: number;\n\t\thAdjustmentFactor: number;\n\t\theight: number;\n\t\tvAdjustmentFactor: number;\n\t} => {\n\t\tconst allNodesCoords = _.values(this.diagramModel.nodes).map(item => ({\n\t\t\tx: item.x,\n\t\t\twidth: item.width,\n\t\t\ty: item.y,\n\t\t\theight: item.height\n\t\t}));\n\n\t\tconst allLinks = _.values(this.diagramModel.links);\n\t\tconst allPortsCoords = _.flatMap(allLinks.map(link => [link.sourcePort, link.targetPort]))\n\t\t\t.filter(port => port !== null)\n\t\t\t.map(item => ({\n\t\t\t\tx: item.x,\n\t\t\t\twidth: item.width,\n\t\t\t\ty: item.y,\n\t\t\t\theight: item.height\n\t\t\t}));\n\t\tconst allPointsCoords = _.flatMap(allLinks.map(link => link.points)).map(item => ({\n\t\t\t// points don't have width/height, so let's just use 0\n\t\t\tx: item.x,\n\t\t\twidth: 0,\n\t\t\ty: item.y,\n\t\t\theight: 0\n\t\t}));\n\n\t\tconst canvas = this.canvas as HTMLDivElement;\n\t\tconst minX =\n\t\t\tMath.floor(\n\t\t\t\tMath.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), item => item.x).x, 0) /\n\t\t\t\t\tROUTING_SCALING_FACTOR\n\t\t\t) * ROUTING_SCALING_FACTOR;\n\t\tconst maxXElement = _.maxBy(\n\t\t\t_.concat(allNodesCoords, allPortsCoords, allPointsCoords),\n\t\t\titem => item.x + item.width\n\t\t);\n\t\tconst maxX = Math.max(maxXElement.x + maxXElement.width, canvas.offsetWidth);\n\n\t\tconst minY =\n\t\t\tMath.floor(\n\t\t\t\tMath.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), item => item.y).y, 0) /\n\t\t\t\t\tROUTING_SCALING_FACTOR\n\t\t\t) * ROUTING_SCALING_FACTOR;\n\t\tconst maxYElement = _.maxBy(\n\t\t\t_.concat(allNodesCoords, allPortsCoords, allPointsCoords),\n\t\t\titem => item.y + item.height\n\t\t);\n\t\tconst maxY = Math.max(maxYElement.y + maxYElement.height, canvas.offsetHeight);\n\n\t\treturn {\n\t\t\twidth: Math.ceil(Math.abs(minX) + maxX),\n\t\t\thAdjustmentFactor: Math.abs(minX) / ROUTING_SCALING_FACTOR + 1,\n\t\t\theight: Math.ceil(Math.abs(minY) + maxY),\n\t\t\tvAdjustmentFactor: Math.abs(minY) / ROUTING_SCALING_FACTOR + 1\n\t\t};\n\t};\n\n\t/**\n\t * Updates (by reference) where nodes will be drawn on the matrix passed in.\n\t */\n\tmarkNodes = (matrix: number[][]): void => {\n\t\t_.values(this.diagramModel.nodes).forEach(node => {\n\t\t\tconst startX = Math.floor(node.x / ROUTING_SCALING_FACTOR);\n\t\t\tconst endX = Math.ceil((node.x + node.width) / ROUTING_SCALING_FACTOR);\n\t\t\tconst startY = Math.floor(node.y / ROUTING_SCALING_FACTOR);\n\t\t\tconst endY = Math.ceil((node.y + node.height) / ROUTING_SCALING_FACTOR);\n\n\t\t\tfor (let x = startX - 1; x <= endX + 1; x++) {\n\t\t\t\tfor (let y = startY - 1; y < endY + 1; y++) {\n\t\t\t\t\tthis.markMatrixPoint(matrix, this.translateRoutingX(x), this.translateRoutingY(y));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * Updates (by reference) where ports will be drawn on the matrix passed in.\n\t */\n\tmarkPorts = (matrix: number[][]): void => {\n\t\tconst allElements = _.flatMap(\n\t\t\t_.values(this.diagramModel.links).map(link => [].concat(link.sourcePort, link.targetPort))\n\t\t);\n\t\tallElements.filter(port => port !== null).forEach(port => {\n\t\t\tconst startX = Math.floor(port.x / ROUTING_SCALING_FACTOR);\n\t\t\tconst endX = Math.ceil((port.x + port.width) / ROUTING_SCALING_FACTOR);\n\t\t\tconst startY = Math.floor(port.y / ROUTING_SCALING_FACTOR);\n\t\t\tconst endY = Math.ceil((port.y + port.height) / ROUTING_SCALING_FACTOR);\n\n\t\t\tfor (let x = startX - 1; x <= endX + 1; x++) {\n\t\t\t\tfor (let y = startY - 1; y < endY + 1; y++) {\n\t\t\t\t\tthis.markMatrixPoint(matrix, this.translateRoutingX(x), this.translateRoutingY(y));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tmarkMatrixPoint = (matrix: number[][], x: number, y: number) => {\n\t\tif (matrix[y] !== undefined && matrix[y][x] !== undefined) {\n\t\t\tmatrix[y][x] = 1;\n\t\t}\n\t};\n\n\tzoomToFit() {\n\t\tconst xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n\t\tconst yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n\t\tconst zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n\n\t\tthis.diagramModel.setZoomLevel(this.diagramModel.getZoomLevel() * zoomFactor);\n\t\tthis.diagramModel.setOffset(0, 0);\n\t\tthis.repaintCanvas();\n\t}\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\nvar sq = function sq(x) {\n  return x * x;\n};\n\nvar distPointToPoint = function distPointToPoint(_ref, _ref3) {\n  var _ref2 = _slicedToArray(_ref, 2);\n\n  var ax = _ref2[0];\n  var ay = _ref2[1];\n\n  var _ref32 = _slicedToArray(_ref3, 2);\n\n  var bx = _ref32[0];\n  var by = _ref32[1];\n  return Math.sqrt(sq(ax - bx) + sq(ay - by));\n};\n\nvar distPointToParabol = function distPointToParabol(a, f) {\n  var p = distPointToPoint(a, f);\n\n  return p == 0 ? Infinity : sq(p) / (2 * Math.abs(a[1] - f[1]));\n};\n\nvar circumCenter = function circumCenter(a, b, c) {\n  var d = (a[0] - c[0]) * (b[1] - c[1]) - (b[0] - c[0]) * (a[1] - c[1]);\n\n  if (d == 0) return [Infinity, Infinity];\n\n  var xc = (((a[0] - c[0]) * (a[0] + c[0]) + (a[1] - c[1]) * (a[1] + c[1])) / 2 * (b[1] - c[1]) - ((b[0] - c[0]) * (b[0] + c[0]) + (b[1] - c[1]) * (b[1] + c[1])) / 2 * (a[1] - c[1])) / d;\n  var yc = (((b[0] - c[0]) * (b[0] + c[0]) + (b[1] - c[1]) * (b[1] + c[1])) / 2 * (a[0] - c[0]) - ((a[0] - c[0]) * (a[0] + c[0]) + (a[1] - c[1]) * (a[1] + c[1])) / 2 * (b[0] - c[0])) / d;\n  return [xc, yc];\n};\n\nvar parabolsCrossX = function parabolsCrossX(fa, fb, q) {\n  if (fa[1] === fb[1]) return [(fa[0] + fb[0]) / 2, (fa[0] + fb[0]) / 2];\n\n  var s1 = (fa[1] * fb[0] - fa[0] * fb[1] + fa[0] * q - fb[0] * q + Math.sqrt((fa[0] * fa[0] + fa[1] * fa[1] - 2 * fa[0] * fb[0] + fb[0] * fb[0] - 2 * fa[1] * fb[1] + fb[1] * fb[1]) * (fa[1] * fb[1] - fa[1] * q - fb[1] * q + q * q))) / (fa[1] - fb[1]);\n  var s2 = (fa[1] * fb[0] - fa[0] * fb[1] + fa[0] * q - fb[0] * q - Math.sqrt((fa[0] * fa[0] + fa[1] * fa[1] - 2 * fa[0] * fb[0] + fb[0] * fb[0] - 2 * fa[1] * fb[1] + fb[1] * fb[1]) * (fa[1] * fb[1] - fa[1] * q - fb[1] * q + q * q))) / (fa[1] - fb[1]);\n\n  return s1 < s2 ? [s1, s2] : [s2, s1];\n};\n\nvar doHalflinesCross = function doHalflinesCross(sa, sb) {\n  var approx = arguments.length <= 2 || arguments[2] === undefined ? 1e-10 : arguments[2];\n  //sa, sb are Segment instance\n  var dx = sb.ps[0] - sa.ps[0];\n  var dy = sb.ps[1] - sa.ps[1];\n\n  if (sa.m == Infinity) return sa.hp * (sb.m * dx - dy) <= approx && sb.vec[0] * dx <= approx;\n  if (sb.m == Infinity) return sb.hp * (sa.m * dx - dy) >= -approx && sa.vec[0] * dx >= -approx;\n\n  var det = sb.vec[0] * sa.vec[1] - sb.vec[1] * sa.vec[0];\n\n  if (det === 0) return false;\n\n  var u = (dy * sb.vec[0] - dx * sb.vec[1]) / det;\n  var v = (dy * sa.vec[0] - dx * sa.vec[1]) / det;\n\n  return u >= -approx && v >= approx || u >= approx && v >= -approx;\n};\n\nvar matrixTransform = function matrixTransform(points, matrix) {\n  return points.map(function (point) {\n    return {\n      x: point.x * matrix[0] + point.y * matrix[2] + matrix[4],\n      y: point.x * matrix[1] + point.y * matrix[3] + matrix[5]\n    };\n  });\n};\n\nvar transformEllipse = function transformEllipse(rx, ry, ax, m) {\n  var torad = Math.PI / 180;\n  var epsilon = 0.0000000001;\n\n  var c = Math.cos(ax * torad),\n      s = Math.sin(ax * torad);\n  var ma = [rx * (m[0] * c + m[2] * s), rx * (m[1] * c + m[3] * s), ry * (-m[0] * s + m[2] * c), ry * (-m[1] * s + m[3] * c)];\n\n  var J = ma[0] * ma[0] + ma[2] * ma[2],\n      K = ma[1] * ma[1] + ma[3] * ma[3];\n\n  var D = ((ma[0] - ma[3]) * (ma[0] - ma[3]) + (ma[2] + ma[1]) * (ma[2] + ma[1])) * ((ma[0] + ma[3]) * (ma[0] + ma[3]) + (ma[2] - ma[1]) * (ma[2] - ma[1]));\n\n  var JK = (J + K) / 2;\n\n  if (D < epsilon * JK) {\n    return {\n      rx: Math.sqrt(JK),\n      ry: Math.sqrt(JK),\n      ax: 0,\n      isDegenerate: false\n    };\n  }\n\n  var L = ma[0] * ma[1] + ma[2] * ma[3];\n  D = Math.sqrt(D);\n\n  var l1 = JK + D / 2,\n      l2 = JK - D / 2;\n\n  var newAx = undefined,\n      newRx = undefined,\n      newRy = undefined;\n  newAx = Math.abs(L) < epsilon && Math.abs(l1 - K) < epsilon ? 90 : Math.atan(Math.abs(L) > Math.abs(l1 - K) ? (l1 - J) / L : L / (l1 - K)) * 180 / Math.PI;\n\n  if (newAx >= 0) {\n    newRx = Math.sqrt(l1);\n    newRy = Math.sqrt(l2);\n  } else {\n    newAx += 90;\n    newRx = Math.sqrt(l2);\n    newRy = Math.sqrt(l1);\n  }\n\n  return {\n    rx: newRx,\n    ry: newRy,\n    ax: newAx,\n    isDegenerate: newRx < epsilon * newRy || newRy < epsilon * newRx\n  };\n};\n\nexports[\"default\"] = { distPointToPoint: distPointToPoint, distPointToParabol: distPointToParabol, circumCenter: circumCenter,\n  parabolsCrossX: parabolsCrossX, doHalflinesCross: doHalflinesCross, matrixTransform: matrixTransform, transformEllipse: transformEllipse };\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _geom = require('./geom');\n\nvar Path = function Path(init) {\n  var _instructions = init || [];\n\n  var push = function push(arr, el) {\n    var copy = arr.slice(0, arr.length);\n    copy.push(el);\n    return copy;\n  };\n\n  var areEqualPoints = function areEqualPoints(_ref, _ref3) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var a1 = _ref2[0];\n    var b1 = _ref2[1];\n\n    var _ref32 = _slicedToArray(_ref3, 2);\n\n    var a2 = _ref32[0];\n    var b2 = _ref32[1];\n    return a1 === a2 && b1 === b2;\n  };\n\n  var trimZeros = function trimZeros(string, char) {\n    var l = string.length;\n    while (string.charAt(l - 1) === '0') {\n      l = l - 1;\n    }\n    if (string.charAt(l - 1) === '.') {\n      l = l - 1;\n    }\n    return string.substr(0, l);\n  };\n\n  var round = function round(number, digits) {\n    var str = number.toFixed(digits);\n    return trimZeros(str);\n  };\n\n  var printInstrunction = function printInstrunction(_ref4) {\n    var command = _ref4.command;\n    var params = _ref4.params;\n\n    var numbers = params.map(function (param) {\n      return round(param, 6);\n    });\n    return command + ' ' + numbers.join(' ');\n  };\n\n  var point = function point(_ref5, prev) {\n    var command = _ref5.command;\n    var params = _ref5.params;\n\n    switch (command) {\n      case 'M':\n        return [params[0], params[1]];\n      case 'L':\n        return [params[0], params[1]];\n      case 'H':\n        return [params[0], prev[1]];\n      case 'V':\n        return [prev[0], params[0]];\n      case 'Z':\n        return null;\n      case 'C':\n        return [params[4], params[5]];\n      case 'S':\n        return [params[2], params[3]];\n      case 'Q':\n        return [params[2], params[3]];\n      case 'T':\n        return [params[0], params[1]];\n      case 'A':\n        return [params[5], params[6]];\n    }\n  };\n\n  var transformParams = function transformParams(instruction, matrix, prev) {\n    var p = instruction.params;\n\n    var transformer = {\n      'V': function V(instruction, matrix, prev) {\n        var pts = [{ x: prev[0], y: p[1] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        if (newPts[0].x === (0, _geom.matrixTransform)([{ x: prev[0], y: prev[1] }])[0].x) {\n          return {\n            command: 'V',\n            params: [newPts[0].y]\n          };\n        } else {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'H': function H(instruction, matrix, prev) {\n        var pts = [{ x: p[0], y: prev[1] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        if (newPts[0].y === (0, _geom.matrixTransform)([{ x: prev[0], y: prev[1] }])[0].y) {\n          return {\n            command: 'H',\n            params: [newPts[0].x]\n          };\n        } else {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'A': function A(instruction, matrix, prev) {\n        // transform rx, ry, and x-axis rotation\n        var r = (0, _geom.transformEllipse)(p[0], p[1], p[2], matrix);\n\n        var sweepFlag = p[4];\n        if (matrix[0] * matrix[3] - matrix[1] * matrix[2] < 0) {\n          sweepFlag = sweepFlag ? '0' : '1';\n        }\n\n        // transform endpoint\n        var pts = [{ x: p[5], y: p[6] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n        if (r.isDegenerate) {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        } else {\n          return {\n            command: 'A',\n            params: [r.rx, r.ry, r.ax, p[3], sweepFlag, newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'C': function C(instruction, matrix, prev) {\n        var pts = [{ x: p[0], y: p[1] }, { x: p[2], y: p[3] }, { x: p[4], y: p[5] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        return {\n          command: 'C',\n          params: [newPts[0].x, newPts[0].y, newPts[1].x, newPts[1].y, newPts[2].x, newPts[2].y]\n        };\n      },\n      'Z': function Z(instruction, matrix, prev) {\n        return {\n          command: 'Z',\n          params: []\n        };\n      },\n      'default': function _default(instruction, matrix, prev) {\n        var pts = [{ x: p[0], y: p[1] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        var newParams = instruction.params.slice(0, instruction.params.length);\n        newParams.splice(0, 2, newPts[0].x, newPts[0].y);\n        return {\n          command: instruction.command,\n          params: newParams\n        };\n      }\n    };\n\n    if (transformer[instruction.command]) {\n      return transformer[instruction.command](instruction, matrix, prev);\n    } else {\n      return transformer['default'](instruction, matrix, prev);\n    }\n  };\n\n  var verbosify = function verbosify(keys, f) {\n    return function (a) {\n      var args = typeof a === 'object' ? keys.map(function (k) {\n        return a[k];\n      }) : arguments;\n      return f.apply(null, args);\n    };\n  };\n\n  var plus = function plus(instruction) {\n    return Path(push(_instructions, instruction));\n  };\n\n  return {\n    moveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'M',\n        params: [x, y]\n      });\n    }),\n    lineto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'L',\n        params: [x, y]\n      });\n    }),\n    hlineto: verbosify(['x'], function (x) {\n      return plus({\n        command: 'H',\n        params: [x]\n      });\n    }),\n    vlineto: verbosify(['y'], function (y) {\n      return plus({\n        command: 'V',\n        params: [y]\n      });\n    }),\n    closepath: function closepath() {\n      return plus({\n        command: 'Z',\n        params: []\n      });\n    },\n    curveto: verbosify(['x1', 'y1', 'x2', 'y2', 'x', 'y'], function (x1, y1, x2, y2, x, y) {\n      return plus({\n        command: 'C',\n        params: [x1, y1, x2, y2, x, y]\n      });\n    }),\n    smoothcurveto: verbosify(['x2', 'y2', 'x', 'y'], function (x2, y2, x, y) {\n      return plus({\n        command: 'S',\n        params: [x2, y2, x, y]\n      });\n    }),\n    qcurveto: verbosify(['x1', 'y1', 'x', 'y'], function (x1, y1, x, y) {\n      return plus({\n        command: 'Q',\n        params: [x1, y1, x, y]\n      });\n    }),\n    smoothqcurveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'T',\n        params: [x, y]\n      });\n    }),\n    arc: verbosify(['rx', 'ry', 'xrot', 'largeArcFlag', 'sweepFlag', 'x', 'y'], function (rx, ry, xrot, largeArcFlag, sweepFlag, x, y) {\n      return plus({\n        command: 'A',\n        params: [rx, ry, xrot, largeArcFlag, sweepFlag, x, y]\n      });\n    }),\n    translate: verbosify(['dx', 'dy'], function () {\n      var dx = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n      var dy = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n      if (dx !== 0 || dx !== 0) {\n        var _ret = (function () {\n          var prev = [0, 0];\n          var matrix = [1, 0, 0, 1, dx, dy];\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret === 'object') return _ret.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    rotate: verbosify(['angle', 'rx', 'ry'], function (angle) {\n      var rx = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n      var ry = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n      if (angle !== 0) {\n        var _ret2 = (function () {\n          var prev = undefined;\n          var matrix = undefined;\n          var newInstructions = _instructions;\n\n          if (rx !== 0 && ry !== 0) {\n            prev = [0, 0];\n            matrix = [1, 0, 0, 1, -rx, -ry];\n            newInstructions = newInstructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n          }\n\n          var rad = angle * Math.PI / 180;\n          var cos = Math.cos(rad);\n          var sin = Math.sin(rad);\n\n          prev = [0, 0];\n          matrix = [cos, sin, -sin, cos, 0, 0];\n          newInstructions = newInstructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n\n          if (rx !== 0 && ry !== 0) {\n            prev = [0, 0];\n            matrix = [1, 0, 0, 1, rx, ry];\n            newInstructions = newInstructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n          }\n\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret2 === 'object') return _ret2.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    scale: verbosify(['sx', 'sy'], function () {\n      var sx = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n      var sy = arguments.length <= 1 || arguments[1] === undefined ? sx : arguments[1];\n      return (function () {\n        if (sx !== 1 || sy !== 1) {\n          var _ret3 = (function () {\n            var prev = [0, 0];\n            var matrix = [sx, 0, 0, sy, 0, 0];\n            var newInstructions = _instructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n            return {\n              v: Path(newInstructions)\n            };\n          })();\n\n          if (typeof _ret3 === 'object') return _ret3.v;\n        } else {\n          return Path(_instructions);\n        }\n      })();\n    }),\n    shearX: verbosify(['angle'], function () {\n      var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n      if (angle !== 0) {\n        var _ret4 = (function () {\n          var prev = [0, 0];\n          var matrix = [1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0];\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret4 === 'object') return _ret4.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    shearY: verbosify(['angle'], function () {\n      var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n      if (angle !== 0) {\n        var _ret5 = (function () {\n          var prev = [0, 0];\n          var matrix = [1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0];\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret5 === 'object') return _ret5.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    print: function print() {\n      return _instructions.map(printInstrunction).join(' ');\n    },\n    toString: function toString() {\n      return undefined.print();\n    },\n    points: function points() {\n      var ps = [];\n      var prev = [0, 0];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _instructions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var instruction = _step.value;\n\n          var p = point(instruction, prev);\n          prev = p;\n          if (p) {\n            ps.push(p);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator['return']) {\n            _iterator['return']();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return ps;\n    },\n    instructions: function instructions() {\n      return _instructions.slice(0, _instructions.length);\n    },\n    connect: function connect(path) {\n      var ps = this.points();\n      var last = ps[ps.length - 1];\n      var first = path.points()[0];\n      var newInstructions = undefined;\n      if (_instructions[_instructions.length - 1].command !== 'Z') {\n        newInstructions = path.instructions().slice(1);\n        if (!areEqualPoints(last, first)) {\n          newInstructions.unshift({\n            command: \"L\",\n            params: first\n          });\n        }\n      } else {\n        newInstructions = path.instructions();\n      }\n      return Path(this.instructions().concat(newInstructions));\n    }\n  };\n};\n\nexports['default'] = function () {\n  return Path();\n};\n\nmodule.exports = exports['default'];","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there is at most one obstacle.\r\n */\r\nfunction JPFMoveDiagonallyIfAtMostOneObstacle(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) || grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) || grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (!grid.isWalkableAt(x + 1, y)) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x - 1, y)) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (!grid.isWalkableAt(x, y + 1)) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x, y - 1)) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.IfAtMostOneObstacle);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there are no obstacles.\r\n */\r\nfunction JPFMoveDiagonallyIfNoObstacles(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfNoObstacles.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfNoObstacles.prototype.constructor = JPFMoveDiagonallyIfNoObstacles;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        // if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            // (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            // return [x, y];\r\n        // }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if (dx !== 0) {\r\n            if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n                (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n                (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n                return [x, y];\r\n            }\r\n            // When moving vertically, must check for horizontal jump points\r\n            // if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n                // return [x, y];\r\n            // }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            var isNextWalkable;\r\n            if (dx !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x + dx, y);\r\n                var isTopWalkable = grid.isWalkableAt(x, y + 1);\r\n                var isBottomWalkable = grid.isWalkableAt(x, y - 1);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (isTopWalkable) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (isBottomWalkable) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n                if (isTopWalkable) {\r\n                    neighbors.push([x, y + 1]);\r\n                }\r\n                if (isBottomWalkable) {\r\n                    neighbors.push([x, y - 1]);\r\n                }\r\n            }\r\n            else if (dy !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x, y + dy);\r\n                var isRightWalkable = grid.isWalkableAt(x + 1, y);\r\n                var isLeftWalkable = grid.isWalkableAt(x - 1, y);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (isRightWalkable) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (isLeftWalkable) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n                if (isRightWalkable) {\r\n                    neighbors.push([x + 1, y]);\r\n                }\r\n                if (isLeftWalkable) {\r\n                    neighbors.push([x - 1, y]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.OnlyWhenNoObstacles);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfNoObstacles;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which always moves\r\n * diagonally irrespective of the number of obstacles.\r\n */\r\nfunction JPFAlwaysMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFAlwaysMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFAlwaysMoveDiagonally.prototype.constructor = JPFAlwaysMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y + dy)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x + 1, y)) {\r\n                    neighbors.push([x + 1, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x - 1, y)) {\r\n                    neighbors.push([x - 1, y + dy]);\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y + 1)) {\r\n                    neighbors.push([x + dx, y + 1]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y - 1)) {\r\n                    neighbors.push([x + dx, y - 1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Always);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFAlwaysMoveDiagonally;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm allowing only horizontal\r\n * or vertical movements.\r\n */\r\nfunction JPFNeverMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFNeverMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFNeverMoveDiagonally.prototype.constructor = JPFNeverMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFNeverMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    if (dx !== 0) {\r\n        if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n            (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else if (dy !== 0) {\r\n        if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n            (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        //When moving vertically, must check for horizontal jump points\r\n        if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Only horizontal and vertical movements are allowed\");\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFNeverMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        if (dx !== 0) {\r\n            if (grid.isWalkableAt(x, y - 1)) {\r\n                neighbors.push([x, y - 1]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + 1)) {\r\n                neighbors.push([x, y + 1]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if (grid.isWalkableAt(x - 1, y)) {\r\n                neighbors.push([x - 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + 1, y)) {\r\n                neighbors.push([x + 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Never);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFNeverMoveDiagonally;\r\n","/**\r\n * @author aniero / https://github.com/aniero\r\n */\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\nvar JPFNeverMoveDiagonally = require('./JPFNeverMoveDiagonally');\r\nvar JPFAlwaysMoveDiagonally = require('./JPFAlwaysMoveDiagonally');\r\nvar JPFMoveDiagonallyIfNoObstacles = require('./JPFMoveDiagonallyIfNoObstacles');\r\nvar JPFMoveDiagonallyIfAtMostOneObstacle = require('./JPFMoveDiagonallyIfAtMostOneObstacle');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm\r\n * @param {Object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {DiagonalMovement} opt.diagonalMovement Condition under which diagonal\r\n *      movement will be allowed.\r\n */\r\nfunction JumpPointFinder(opt) {\r\n    opt = opt || {};\r\n    if (opt.diagonalMovement === DiagonalMovement.Never) {\r\n        return new JPFNeverMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.Always) {\r\n        return new JPFAlwaysMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        return new JPFMoveDiagonallyIfNoObstacles(opt);\r\n    } else {\r\n        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);\r\n    }\r\n}\r\n\r\nmodule.exports = JumpPointFinder;\r\n","var Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar Node       = require('../core/Node');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Iterative Deeping A Star (IDA*) path-finder.\r\n *\r\n * Recursion based on:\r\n *   http://www.apl.jhu.edu/~hall/AI-Programming/IDA-Star.html\r\n *\r\n * Path retracing based on:\r\n *  V. Nageshwara Rao, Vipin Kumar and K. Ramesh\r\n *  \"A Parallel Implementation of Iterative-Deeping-A*\", January 1987.\r\n *  ftp://ftp.cs.utexas.edu/.snapshot/hourly.1/pub/AI-Lab/tech-reports/UT-AI-TR-87-46.pdf\r\n *\r\n * @author Gerard Meier (www.gerardmeier.com)\r\n *\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n * @param {boolean} opt.trackRecursion Whether to track recursion for\r\n *     statistical purposes.\r\n * @param {number} opt.timeLimit Maximum execution time. Use <= 0 for infinite.\r\n */\r\nfunction IDAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.trackRecursion = opt.trackRecursion || false;\r\n    this.timeLimit = opt.timeLimit || Infinity; // Default: no time limit.\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    // admissible, it should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path. When an empty array is returned, either\r\n * no path is possible, or the maximum execution time is reached.\r\n *\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nIDAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    // Used for statistics:\r\n    var nodesVisited = 0;\r\n\r\n    // Execution time limitation:\r\n    var startTime = new Date().getTime();\r\n\r\n    // Heuristic helper:\r\n    var h = function(a, b) {\r\n        return this.heuristic(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\r\n    }.bind(this);\r\n\r\n    // Step cost from a to b:\r\n    var cost = function(a, b) {\r\n        return (a.x === b.x || a.y === b.y) ? 1 : Math.SQRT2;\r\n    };\r\n\r\n    /**\r\n     * IDA* search implementation.\r\n     *\r\n     * @param {Node} The node currently expanding from.\r\n     * @param {number} Cost to reach the given node.\r\n     * @param {number} Maximum search depth (cut-off value).\r\n     * @param {Array<Array<number>>} The found route.\r\n     * @param {number} Recursion depth.\r\n     *\r\n     * @return {Object} either a number with the new optimal cut-off depth,\r\n     * or a valid node instance, in which case a path was found.\r\n     */\r\n    var search = function(node, g, cutoff, route, depth) {\r\n        nodesVisited++;\r\n\r\n        // Enforce timelimit:\r\n        if (this.timeLimit > 0 &&\r\n            new Date().getTime() - startTime > this.timeLimit * 1000) {\r\n            // Enforced as \"path-not-found\".\r\n            return Infinity;\r\n        }\r\n\r\n        var f = g + h(node, end) * this.weight;\r\n\r\n        // We've searched too deep for this iteration.\r\n        if (f > cutoff) {\r\n            return f;\r\n        }\r\n\r\n        if (node == end) {\r\n            route[depth] = [node.x, node.y];\r\n            return node;\r\n        }\r\n\r\n        var min, t, k, neighbour;\r\n\r\n        var neighbours = grid.getNeighbors(node, this.diagonalMovement);\r\n\r\n        // Sort the neighbours, gives nicer paths. But, this deviates\r\n        // from the original algorithm - so I left it out.\r\n        //neighbours.sort(function(a, b){\r\n        //    return h(a, end) - h(b, end);\r\n        //});\r\n\r\n        \r\n        /*jshint -W084 *///Disable warning: Expected a conditional expression and instead saw an assignment\r\n        for (k = 0, min = Infinity; neighbour = neighbours[k]; ++k) {\r\n        /*jshint +W084 *///Enable warning: Expected a conditional expression and instead saw an assignment\r\n            if (this.trackRecursion) {\r\n                // Retain a copy for visualisation. Due to recursion, this\r\n                // node may be part of other paths too.\r\n                neighbour.retainCount = neighbour.retainCount + 1 || 1;\r\n\r\n                if(neighbour.tested !== true) {\r\n                    neighbour.tested = true;\r\n                }\r\n            }\r\n\r\n            t = search(neighbour, g + cost(node, neighbour), cutoff, route, depth + 1);\r\n\r\n            if (t instanceof Node) {\r\n                route[depth] = [node.x, node.y];\r\n\r\n                // For a typical A* linked list, this would work:\r\n                // neighbour.parent = node;\r\n                return t;\r\n            }\r\n\r\n            // Decrement count, then determine whether it's actually closed.\r\n            if (this.trackRecursion && (--neighbour.retainCount) === 0) {\r\n                neighbour.tested = false;\r\n            }\r\n\r\n            if (t < min) {\r\n                min = t;\r\n            }\r\n        }\r\n\r\n        return min;\r\n\r\n    }.bind(this);\r\n\r\n    // Node instance lookups:\r\n    var start = grid.getNodeAt(startX, startY);\r\n    var end   = grid.getNodeAt(endX, endY);\r\n\r\n    // Initial search depth, given the typical heuristic contraints,\r\n    // there should be no cheaper route possible.\r\n    var cutOff = h(start, end);\r\n\r\n    var j, route, t;\r\n\r\n    // With an overflow protection.\r\n    for (j = 0; true; ++j) {\r\n\r\n        route = [];\r\n\r\n        // Search till cut-off depth:\r\n        t = search(start, 0, cutOff, route, 0);\r\n\r\n        // Route not possible, or not found in time limit.\r\n        if (t === Infinity) {\r\n            return [];\r\n        }\r\n\r\n        // If t is a node, it's also the end node. Route is now\r\n        // populated with a valid path to the end node.\r\n        if (t instanceof Node) {\r\n            return route;\r\n        }\r\n\r\n        // Try again, this time with a deeper cut-off. The t score\r\n        // is the closest we got to the end node.\r\n        cutOff = t;\r\n    }\r\n\r\n    // This _should_ never to be reached.\r\n    return [];\r\n};\r\n\r\nmodule.exports = IDAStarFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-directional Dijkstra path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiDijkstraFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nBiDijkstraFinder.prototype = new BiAStarFinder();\r\nBiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\r\n\r\nmodule.exports = BiDijkstraFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Bi-directional Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiBreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        startOpenList = [], endOpenList = [],\r\n        neighbors, neighbor, node,\r\n        diagonalMovement = this.diagonalMovement,\r\n        BY_START = 0, BY_END = 1,\r\n        i, l;\r\n\r\n    // push the start and end nodes into the queues\r\n    startOpenList.push(startNode);\r\n    startNode.opened = true;\r\n    startNode.by = BY_START;\r\n\r\n    endOpenList.push(endNode);\r\n    endNode.opened = true;\r\n    endNode.by = BY_END;\r\n\r\n    // while both the queues are not empty\r\n    while (startOpenList.length && endOpenList.length) {\r\n\r\n        // expand start open list\r\n\r\n        node = startOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                // if this node has been inspected by the reversed search,\r\n                // then a path is found.\r\n                if (neighbor.by === BY_END) {\r\n                    return Util.biBacktrace(node, neighbor);\r\n                }\r\n                continue;\r\n            }\r\n            startOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_START;\r\n        }\r\n\r\n        // expand end open list\r\n\r\n        node = endOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                if (neighbor.by === BY_START) {\r\n                    return Util.biBacktrace(neighbor, node);\r\n                }\r\n                continue;\r\n            }\r\n            endOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_END;\r\n        }\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiBreadthFirstFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BiBestFirstFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBiBestFirstFinder.prototype = new BiAStarFinder();\r\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\r\n\r\nmodule.exports = BiBestFirstFinder;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Dijkstra path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction DijkstraFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nDijkstraFinder.prototype = new AStarFinder();\r\nDijkstraFinder.prototype.constructor = DijkstraFinder;\r\n\r\nmodule.exports = DijkstraFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = [],\r\n        diagonalMovement = this.diagonalMovement,\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        neighbors, neighbor, node, i, l;\r\n\r\n    // push the start pos into the queue\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the queue is not empty\r\n    while (openList.length) {\r\n        // take the front node from the queue\r\n        node = openList.shift();\r\n        node.closed = true;\r\n\r\n        // reached the end position\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            // skip this neighbor if it has been inspected before\r\n            if (neighbor.closed || neighbor.opened) {\r\n                continue;\r\n            }\r\n\r\n            openList.push(neighbor);\r\n            neighbor.opened = true;\r\n            neighbor.parent = node;\r\n        }\r\n    }\r\n    \r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BreadthFirstFinder;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BestFirstFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBestFirstFinder.prototype = new AStarFinder();\r\nBestFirstFinder.prototype.constructor = BestFirstFinder;\r\n\r\nmodule.exports = BestFirstFinder;\r\n","var Node = require('./Node');\r\nvar DiagonalMovement = require('./DiagonalMovement');\r\n\r\n/**\r\n * The Grid class, which serves as the encapsulation of the layout of the nodes.\r\n * @constructor\r\n * @param {number|Array<Array<(number|boolean)>>} width_or_matrix Number of columns of the grid, or matrix\r\n * @param {number} height Number of rows of the grid.\r\n * @param {Array<Array<(number|boolean)>>} [matrix] - A 0-1 matrix\r\n *     representing the walkable status of the nodes(0 or false for walkable).\r\n *     If the matrix is not supplied, all the nodes will be walkable.  */\r\nfunction Grid(width_or_matrix, height, matrix) {\r\n    var width;\r\n\r\n    if (typeof width_or_matrix !== 'object') {\r\n        width = width_or_matrix;\r\n    } else {\r\n        height = width_or_matrix.length;\r\n        width = width_or_matrix[0].length;\r\n        matrix = width_or_matrix;\r\n    }\r\n\r\n    /**\r\n     * The number of columns of the grid.\r\n     * @type number\r\n     */\r\n    this.width = width;\r\n    /**\r\n     * The number of rows of the grid.\r\n     * @type number\r\n     */\r\n    this.height = height;\r\n\r\n    /**\r\n     * A 2D array of nodes.\r\n     */\r\n    this.nodes = this._buildNodes(width, height, matrix);\r\n}\r\n\r\n/**\r\n * Build and return the nodes.\r\n * @private\r\n * @param {number} width\r\n * @param {number} height\r\n * @param {Array<Array<number|boolean>>} [matrix] - A 0-1 matrix representing\r\n *     the walkable status of the nodes.\r\n * @see Grid\r\n */\r\nGrid.prototype._buildNodes = function(width, height, matrix) {\r\n    var i, j,\r\n        nodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        nodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            nodes[i][j] = new Node(j, i);\r\n        }\r\n    }\r\n\r\n\r\n    if (matrix === undefined) {\r\n        return nodes;\r\n    }\r\n\r\n    if (matrix.length !== height || matrix[0].length !== width) {\r\n        throw new Error('Matrix size does not fit');\r\n    }\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        for (j = 0; j < width; ++j) {\r\n            if (matrix[i][j]) {\r\n                // 0, false, null will be walkable\r\n                // while others will be un-walkable\r\n                nodes[i][j].walkable = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return nodes;\r\n};\r\n\r\n\r\nGrid.prototype.getNodeAt = function(x, y) {\r\n    return this.nodes[y][x];\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the node at the given position is walkable.\r\n * (Also returns false if the position is outside the grid.)\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @return {boolean} - The walkability of the node.\r\n */\r\nGrid.prototype.isWalkableAt = function(x, y) {\r\n    return this.isInside(x, y) && this.nodes[y][x].walkable;\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the position is inside the grid.\r\n * XXX: `grid.isInside(x, y)` is wierd to read.\r\n * It should be `(x, y) is inside grid`, but I failed to find a better\r\n * name for this method.\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {boolean}\r\n */\r\nGrid.prototype.isInside = function(x, y) {\r\n    return (x >= 0 && x < this.width) && (y >= 0 && y < this.height);\r\n};\r\n\r\n\r\n/**\r\n * Set whether the node on the given position is walkable.\r\n * NOTE: throws exception if the coordinate is not inside the grid.\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @param {boolean} walkable - Whether the position is walkable.\r\n */\r\nGrid.prototype.setWalkableAt = function(x, y, walkable) {\r\n    this.nodes[y][x].walkable = walkable;\r\n};\r\n\r\n\r\n/**\r\n * Get the neighbors of the given node.\r\n *\r\n *     offsets      diagonalOffsets:\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 0 |   |    | 0 |   | 1 |\r\n *  +---+---+---+    +---+---+---+\r\n *  | 3 |   | 1 |    |   |   |   |\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 2 |   |    | 3 |   | 2 |\r\n *  +---+---+---+    +---+---+---+\r\n *\r\n *  When allowDiagonal is true, if offsets[i] is valid, then\r\n *  diagonalOffsets[i] and\r\n *  diagonalOffsets[(i + 1) % 4] is valid.\r\n * @param {Node} node\r\n * @param {DiagonalMovement} diagonalMovement\r\n */\r\nGrid.prototype.getNeighbors = function(node, diagonalMovement) {\r\n    var x = node.x,\r\n        y = node.y,\r\n        neighbors = [],\r\n        s0 = false, d0 = false,\r\n        s1 = false, d1 = false,\r\n        s2 = false, d2 = false,\r\n        s3 = false, d3 = false,\r\n        nodes = this.nodes;\r\n\r\n    // ↑\r\n    if (this.isWalkableAt(x, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x]);\r\n        s0 = true;\r\n    }\r\n    // →\r\n    if (this.isWalkableAt(x + 1, y)) {\r\n        neighbors.push(nodes[y][x + 1]);\r\n        s1 = true;\r\n    }\r\n    // ↓\r\n    if (this.isWalkableAt(x, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x]);\r\n        s2 = true;\r\n    }\r\n    // ←\r\n    if (this.isWalkableAt(x - 1, y)) {\r\n        neighbors.push(nodes[y][x - 1]);\r\n        s3 = true;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.Never) {\r\n        return neighbors;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        d0 = s3 && s0;\r\n        d1 = s0 && s1;\r\n        d2 = s1 && s2;\r\n        d3 = s2 && s3;\r\n    } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\r\n        d0 = s3 || s0;\r\n        d1 = s0 || s1;\r\n        d2 = s1 || s2;\r\n        d3 = s2 || s3;\r\n    } else if (diagonalMovement === DiagonalMovement.Always) {\r\n        d0 = true;\r\n        d1 = true;\r\n        d2 = true;\r\n        d3 = true;\r\n    } else {\r\n        throw new Error('Incorrect value of diagonalMovement');\r\n    }\r\n\r\n    // ↖\r\n    if (d0 && this.isWalkableAt(x - 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x - 1]);\r\n    }\r\n    // ↗\r\n    if (d1 && this.isWalkableAt(x + 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x + 1]);\r\n    }\r\n    // ↘\r\n    if (d2 && this.isWalkableAt(x + 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x + 1]);\r\n    }\r\n    // ↙\r\n    if (d3 && this.isWalkableAt(x - 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x - 1]);\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\n\r\n/**\r\n * Get a clone of this grid.\r\n * @return {Grid} Cloned grid.\r\n */\r\nGrid.prototype.clone = function() {\r\n    var i, j,\r\n\r\n        width = this.width,\r\n        height = this.height,\r\n        thisNodes = this.nodes,\r\n\r\n        newGrid = new Grid(width, height),\r\n        newNodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        newNodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            newNodes[i][j] = new Node(j, i, thisNodes[i][j].walkable);\r\n        }\r\n    }\r\n\r\n    newGrid.nodes = newNodes;\r\n\r\n    return newGrid;\r\n};\r\n\r\nmodule.exports = Grid;\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n    module.exports = Heap;\n  } else {\n    window.Heap = Heap;\n  }\n\n}).call(this);\n","module.exports = {\r\n    'Heap'                      : require('heap'),\r\n    'Node'                      : require('./core/Node'),\r\n    'Grid'                      : require('./core/Grid'),\r\n    'Util'                      : require('./core/Util'),\r\n    'DiagonalMovement'          : require('./core/DiagonalMovement'),\r\n    'Heuristic'                 : require('./core/Heuristic'),\r\n    'AStarFinder'               : require('./finders/AStarFinder'),\r\n    'BestFirstFinder'           : require('./finders/BestFirstFinder'),\r\n    'BreadthFirstFinder'        : require('./finders/BreadthFirstFinder'),\r\n    'DijkstraFinder'            : require('./finders/DijkstraFinder'),\r\n    'BiAStarFinder'             : require('./finders/BiAStarFinder'),\r\n    'BiBestFirstFinder'         : require('./finders/BiBestFirstFinder'),\r\n    'BiBreadthFirstFinder'      : require('./finders/BiBreadthFirstFinder'),\r\n    'BiDijkstraFinder'          : require('./finders/BiDijkstraFinder'),\r\n    'IDAStarFinder'             : require('./finders/IDAStarFinder'),\r\n    'JumpPointFinder'           : require('./finders/JumpPointFinder'),\r\n};\r\n","module.exports = require('./src/PathFinding');\r\n","\r\n/**\r\n * Element prototype.\r\n */\r\n\r\nvar proto = Element.prototype;\r\n\r\n/**\r\n * Vendor function.\r\n */\r\n\r\nvar vendor = proto.matchesSelector\r\n  || proto.webkitMatchesSelector\r\n  || proto.mozMatchesSelector\r\n  || proto.msMatchesSelector\r\n  || proto.oMatchesSelector;\r\n\r\n/**\r\n * Expose `match()`.\r\n */\r\n\r\nmodule.exports = match;\r\n\r\n/**\r\n * Match `el` to `selector`.\r\n *\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction match(el, selector) {\r\n  if (vendor) return vendor.call(el, selector);\r\n  var nodes = el.parentNode.querySelectorAll(selector);\r\n  for (var i = 0; i < nodes.length; ++i) {\r\n    if (nodes[i] == el) return true;\r\n  }\r\n  return false;\r\n}","var matches = require('matches-selector')\r\n\r\nmodule.exports = function (element, selector, checkYoSelf) {\r\n  var parent = checkYoSelf ? element : element.parentNode\r\n\r\n  while (parent && parent !== document) {\r\n    if (matches(parent, selector)) return parent;\r\n    parent = parent.parentNode\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}