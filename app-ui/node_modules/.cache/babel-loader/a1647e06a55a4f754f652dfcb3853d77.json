{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultLinkWidget = void 0;\n\nconst React = require(\"react\");\n\nconst react_diagrams_core_1 = require(\"@projectstorm/react-diagrams-core\");\n\nconst DefaultLinkPointWidget_1 = require(\"./DefaultLinkPointWidget\");\n\nconst DefaultLinkSegmentWidget_1 = require(\"./DefaultLinkSegmentWidget\");\n\nclass DefaultLinkWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.refPaths = [];\n    this.state = {\n      selected: false\n    };\n  }\n\n  renderPoints() {\n    var _a;\n\n    return (_a = this.props.renderPoints) !== null && _a !== void 0 ? _a : true;\n  }\n\n  componentDidUpdate() {\n    this.props.link.setRenderedPaths(this.refPaths.map(ref => {\n      return ref.current;\n    }));\n  }\n\n  componentDidMount() {\n    this.props.link.setRenderedPaths(this.refPaths.map(ref => {\n      return ref.current;\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.link.setRenderedPaths([]);\n  }\n\n  addPointToLink(event, index) {\n    if (!event.shiftKey && !this.props.link.isLocked() && this.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()) {\n      const point = new react_diagrams_core_1.PointModel({\n        link: this.props.link,\n        position: this.props.diagramEngine.getRelativeMousePoint(event)\n      });\n      this.props.link.addPoint(point, index);\n      event.persist();\n      event.stopPropagation();\n      this.forceUpdate(() => {\n        this.props.diagramEngine.getActionEventBus().fireAction({\n          event,\n          model: point\n        });\n      });\n    }\n  }\n\n  generatePoint(point) {\n    return React.createElement(DefaultLinkPointWidget_1.DefaultLinkPointWidget, {\n      key: point.getID(),\n      point: point,\n      colorSelected: this.props.link.getOptions().selectedColor,\n      color: this.props.link.getOptions().color\n    });\n  }\n\n  generateLink(path, extraProps, id) {\n    const ref = React.createRef();\n    this.refPaths.push(ref);\n    return React.createElement(DefaultLinkSegmentWidget_1.DefaultLinkSegmentWidget, {\n      key: `link-${id}`,\n      path: path,\n      selected: this.state.selected,\n      diagramEngine: this.props.diagramEngine,\n      factory: this.props.diagramEngine.getFactoryForLink(this.props.link),\n      link: this.props.link,\n      forwardRef: ref,\n      onSelection: selected => {\n        this.setState({\n          selected: selected\n        });\n      },\n      extras: extraProps\n    });\n  }\n\n  render() {\n    //ensure id is present for all points on the path\n    var points = this.props.link.getPoints();\n    var paths = [];\n    this.refPaths = [];\n\n    if (points.length === 2) {\n      paths.push(this.generateLink(this.props.link.getSVGPath(), {\n        onMouseDown: event => {\n          var _a, _b;\n\n          (_b = (_a = this.props).selected) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n          this.addPointToLink(event, 1);\n        }\n      }, '0')); // draw the link as dangeling\n\n      if (this.props.link.getTargetPort() == null) {\n        paths.push(this.generatePoint(points[1]));\n      }\n    } else {\n      //draw the multiple anchors and complex line instead\n      for (let j = 0; j < points.length - 1; j++) {\n        paths.push(this.generateLink(react_diagrams_core_1.LinkWidget.generateLinePath(points[j], points[j + 1]), {\n          'data-linkid': this.props.link.getID(),\n          'data-point': j,\n          onMouseDown: event => {\n            var _a, _b;\n\n            (_b = (_a = this.props).selected) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n            this.addPointToLink(event, j + 1);\n          }\n        }, j));\n      }\n\n      if (this.renderPoints()) {\n        //render the circles\n        for (let i = 1; i < points.length - 1; i++) {\n          paths.push(this.generatePoint(points[i]));\n        }\n\n        if (this.props.link.getTargetPort() == null) {\n          paths.push(this.generatePoint(points[points.length - 1]));\n        }\n      }\n    }\n\n    return React.createElement(\"g\", {\n      \"data-default-link-test\": this.props.link.getOptions().testName\n    }, paths);\n  }\n\n}\n\nexports.DefaultLinkWidget = DefaultLinkWidget;","map":{"version":3,"mappings":"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","names":["DefaultLinkWidget","React","Component","constructor","props","refPaths","state","selected","renderPoints","_a","componentDidUpdate","link","setRenderedPaths","map","ref","current","componentDidMount","componentWillUnmount","addPointToLink","event","index","shiftKey","isLocked","getPoints","length","diagramEngine","getMaxNumberPointsPerLink","point","react_diagrams_core_1","position","getRelativeMousePoint","addPoint","persist","stopPropagation","forceUpdate","getActionEventBus","fireAction","model","generatePoint","DefaultLinkPointWidget_1","key","getID","colorSelected","getOptions","selectedColor","color","generateLink","path","extraProps","id","createRef","push","DefaultLinkSegmentWidget_1","factory","getFactoryForLink","forwardRef","onSelection","setState","extras","render","points","paths","getSVGPath","onMouseDown","_b","getTargetPort","j","generateLinePath","i","testName","exports"],"sources":["C:\\Users\\nairr\\app-ui\\app-ui\\node_modules\\@projectstorm\\react-diagrams-defaults\\src\\link\\DefaultLinkWidget.tsx"],"sourcesContent":["import * as React from 'react';\nimport { DiagramEngine, LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkPointWidget } from './DefaultLinkPointWidget';\nimport { DefaultLinkSegmentWidget } from './DefaultLinkSegmentWidget';\nimport { MouseEvent } from 'react';\n\nexport interface DefaultLinkProps {\n\tlink: DefaultLinkModel;\n\tdiagramEngine: DiagramEngine;\n\tpointAdded?: (point: PointModel, event: MouseEvent) => any;\n\trenderPoints?: boolean;\n\tselected?: (event: MouseEvent) => any;\n}\n\nexport interface DefaultLinkState {\n\tselected: boolean;\n}\n\nexport class DefaultLinkWidget extends React.Component<DefaultLinkProps, DefaultLinkState> {\n\trefPaths: React.RefObject<SVGPathElement>[];\n\n\tconstructor(props: DefaultLinkProps) {\n\t\tsuper(props);\n\t\tthis.refPaths = [];\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trenderPoints() {\n\t\treturn this.props.renderPoints ?? true;\n\t}\n\n\tcomponentDidUpdate(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.props.link.setRenderedPaths([]);\n\t}\n\n\taddPointToLink(event: MouseEvent, index: number) {\n\t\tif (\n\t\t\t!event.shiftKey &&\n\t\t\t!this.props.link.isLocked() &&\n\t\t\tthis.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()\n\t\t) {\n\t\t\tconst point = new PointModel({\n\t\t\t\tlink: this.props.link,\n\t\t\t\tposition: this.props.diagramEngine.getRelativeMousePoint(event)\n\t\t\t});\n\t\t\tthis.props.link.addPoint(point, index);\n\t\t\tevent.persist();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.forceUpdate(() => {\n\t\t\t\tthis.props.diagramEngine.getActionEventBus().fireAction({\n\t\t\t\t\tevent,\n\t\t\t\t\tmodel: point\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tgeneratePoint(point: PointModel): JSX.Element {\n\t\treturn (\n\t\t\t<DefaultLinkPointWidget\n\t\t\t\tkey={point.getID()}\n\t\t\t\tpoint={point as any}\n\t\t\t\tcolorSelected={this.props.link.getOptions().selectedColor}\n\t\t\t\tcolor={this.props.link.getOptions().color}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgenerateLink(path: string, extraProps: any, id: string | number): JSX.Element {\n\t\tconst ref = React.createRef<SVGPathElement>();\n\t\tthis.refPaths.push(ref);\n\t\treturn (\n\t\t\t<DefaultLinkSegmentWidget\n\t\t\t\tkey={`link-${id}`}\n\t\t\t\tpath={path}\n\t\t\t\tselected={this.state.selected}\n\t\t\t\tdiagramEngine={this.props.diagramEngine}\n\t\t\t\tfactory={this.props.diagramEngine.getFactoryForLink(this.props.link)}\n\t\t\t\tlink={this.props.link}\n\t\t\t\tforwardRef={ref}\n\t\t\t\tonSelection={(selected) => {\n\t\t\t\t\tthis.setState({ selected: selected });\n\t\t\t\t}}\n\t\t\t\textras={extraProps}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.getPoints();\n\t\tvar paths = [];\n\t\tthis.refPaths = [];\n\n\t\tif (points.length === 2) {\n\t\t\tpaths.push(\n\t\t\t\tthis.generateLink(\n\t\t\t\t\tthis.props.link.getSVGPath(),\n\t\t\t\t\t{\n\t\t\t\t\t\tonMouseDown: (event) => {\n\t\t\t\t\t\t\tthis.props.selected?.(event);\n\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'0'\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// draw the link as dangeling\n\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\tpaths.push(this.generatePoint(points[1]));\n\t\t\t}\n\t\t} else {\n\t\t\t//draw the multiple anchors and complex line instead\n\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\tpaths.push(\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tLinkWidget.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\t\t\t\t\t'data-point': j,\n\t\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\tthis.props.selected?.(event);\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tj\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.renderPoints()) {\n\t\t\t\t//render the circles\n\t\t\t\tfor (let i = 1; i < points.length - 1; i++) {\n\t\t\t\t\tpaths.push(this.generatePoint(points[i]));\n\t\t\t\t}\n\n\t\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\t\tpaths.push(this.generatePoint(points[points.length - 1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn <g data-default-link-test={this.props.link.getOptions().testName}>{paths}</g>;\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}